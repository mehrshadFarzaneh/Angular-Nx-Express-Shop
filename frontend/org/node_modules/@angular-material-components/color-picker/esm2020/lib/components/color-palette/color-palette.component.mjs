import { Component, ViewEncapsulation, Output, EventEmitter, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../color-canvas/color-canvas.component";
import * as i2 from "../color-collection/color-collection.component";
export class NgxMatColorPaletteComponent {
    constructor() {
        this.colorChanged = new EventEmitter();
    }
    ngOnInit() {
    }
    handleColorChanged(color) {
        this.colorChanged.emit(color);
    }
}
/** @nocollapse */ NgxMatColorPaletteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPaletteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ NgxMatColorPaletteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.2", type: NgxMatColorPaletteComponent, selector: "ngx-mat-color-palette", inputs: { color: "color" }, outputs: { colorChanged: "colorChanged" }, host: { classAttribute: "ngx-mat-color-palette" }, ngImport: i0, template: "<ngx-mat-color-canvas (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\"></ngx-mat-color-canvas>\r\n<ngx-mat-color-collection (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\"></ngx-mat-color-collection>", styles: [".ngx-mat-color-palette .actions{margin-top:10px;display:flex}.ngx-mat-color-palette .actions .left{display:flex;flex-direction:column;margin-right:15px}.ngx-mat-color-palette .actions .left .preview{flex:2 1 auto;margin-bottom:10px}.ngx-mat-color-palette .actions .right{display:flex;width:40px;flex-direction:column}\n"], dependencies: [{ kind: "component", type: i1.NgxMatColorCanvasComponent, selector: "ngx-mat-color-canvas" }, { kind: "component", type: i2.NgxMatColorCollectionComponent, selector: "ngx-mat-color-collection", inputs: ["color"], outputs: ["colorChanged"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPaletteComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-mat-color-palette', encapsulation: ViewEncapsulation.None, host: {
                        'class': 'ngx-mat-color-palette'
                    }, template: "<ngx-mat-color-canvas (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\"></ngx-mat-color-canvas>\r\n<ngx-mat-color-collection (colorChanged)=\"handleColorChanged($event)\" [color]=\"color\"></ngx-mat-color-collection>", styles: [".ngx-mat-color-palette .actions{margin-top:10px;display:flex}.ngx-mat-color-palette .actions .left{display:flex;flex-direction:column;margin-right:15px}.ngx-mat-color-palette .actions .left .preview{flex:2 1 auto;margin-bottom:10px}.ngx-mat-color-palette .actions .right{display:flex;width:40px;flex-direction:column}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { colorChanged: [{
                type: Output
            }], color: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItcGFsZXR0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb2xvci1waWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL2NvbG9yLXBhbGV0dGUvY29sb3ItcGFsZXR0ZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb2xvci1waWNrZXIvc3JjL2xpYi9jb21wb25lbnRzL2NvbG9yLXBhbGV0dGUvY29sb3ItcGFsZXR0ZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLGlCQUFpQixFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBWWxHLE1BQU0sT0FBTywyQkFBMkI7SUFNdEM7UUFKVSxpQkFBWSxHQUF3QixJQUFJLFlBQVksRUFBUyxDQUFDO0lBSXhELENBQUM7SUFFakIsUUFBUTtJQUNSLENBQUM7SUFFTSxrQkFBa0IsQ0FBQyxLQUFZO1FBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7OzJJQWJVLDJCQUEyQjsrSEFBM0IsMkJBQTJCLHVMQ1p4Qyx3T0FDaUg7MkZEV3BHLDJCQUEyQjtrQkFUdkMsU0FBUzsrQkFDRSx1QkFBdUIsaUJBR2xCLGlCQUFpQixDQUFDLElBQUksUUFDL0I7d0JBQ0osT0FBTyxFQUFFLHVCQUF1QjtxQkFDakM7MEVBSVMsWUFBWTtzQkFBckIsTUFBTTtnQkFFRSxLQUFLO3NCQUFiLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24sIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4uLy4uL21vZGVscyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25neC1tYXQtY29sb3ItcGFsZXR0ZScsXHJcbiAgdGVtcGxhdGVVcmw6ICdjb2xvci1wYWxldHRlLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnY29sb3ItcGFsZXR0ZS5jb21wb25lbnQuc2NzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbiAgaG9zdDoge1xyXG4gICAgJ2NsYXNzJzogJ25neC1tYXQtY29sb3ItcGFsZXR0ZSdcclxuICB9XHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hNYXRDb2xvclBhbGV0dGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBAT3V0cHV0KCkgY29sb3JDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8Q29sb3I+ID0gbmV3IEV2ZW50RW1pdHRlcjxDb2xvcj4oKTtcclxuXHJcbiAgQElucHV0KCkgY29sb3I6IENvbG9yO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBoYW5kbGVDb2xvckNoYW5nZWQoY29sb3I6IENvbG9yKSB7XHJcbiAgICB0aGlzLmNvbG9yQ2hhbmdlZC5lbWl0KGNvbG9yKTtcclxuICB9XHJcblxyXG59XHJcbiIsIjxuZ3gtbWF0LWNvbG9yLWNhbnZhcyAoY29sb3JDaGFuZ2VkKT1cImhhbmRsZUNvbG9yQ2hhbmdlZCgkZXZlbnQpXCIgW2NvbG9yXT1cImNvbG9yXCI+PC9uZ3gtbWF0LWNvbG9yLWNhbnZhcz5cclxuPG5neC1tYXQtY29sb3ItY29sbGVjdGlvbiAoY29sb3JDaGFuZ2VkKT1cImhhbmRsZUNvbG9yQ2hhbmdlZCgkZXZlbnQpXCIgW2NvbG9yXT1cImNvbG9yXCI+PC9uZ3gtbWF0LWNvbG9yLWNvbGxlY3Rpb24+Il19