"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createProject = void 0;
const devkit_1 = require("@nx/devkit");
const version_utils_1 = require("../../utils/version-utils");
function createProject(tree, options) {
    const installedAngularInfo = (0, version_utils_1.getInstalledAngularVersionInfo)(tree);
    const project = {
        name: options.name,
        projectType: 'application',
        prefix: options.prefix,
        root: options.appProjectRoot,
        sourceRoot: `${options.appProjectRoot}/src`,
        tags: options.parsedTags,
        targets: {
            build: {
                executor: '@angular-devkit/build-angular:browser',
                outputs: ['{options.outputPath}'],
                options: {
                    outputPath: `dist/${!options.rootProject ? options.appProjectRoot : options.name}`,
                    index: `${options.appProjectRoot}/src/index.html`,
                    main: `${options.appProjectRoot}/src/main.ts`,
                    polyfills: installedAngularInfo.major === 14
                        ? `${options.appProjectRoot}/src/polyfills.ts`
                        : ['zone.js'],
                    tsConfig: `${options.appProjectRoot}/tsconfig.app.json`,
                    assets: [
                        `${options.appProjectRoot}/src/favicon.ico`,
                        `${options.appProjectRoot}/src/assets`,
                    ],
                    styles: [`${options.appProjectRoot}/src/styles.${options.style}`],
                    scripts: [],
                },
                configurations: {
                    production: {
                        budgets: [
                            {
                                type: 'initial',
                                maximumWarning: '500kb',
                                maximumError: '1mb',
                            },
                            {
                                type: 'anyComponentStyle',
                                maximumWarning: '2kb',
                                maximumError: '4kb',
                            },
                        ],
                        fileReplacements: installedAngularInfo.major === 14
                            ? [
                                {
                                    replace: `${options.appProjectRoot}/src/environments/environment.ts`,
                                    with: `${options.appProjectRoot}/src/environments/environment.prod.ts`,
                                },
                            ]
                            : undefined,
                        outputHashing: 'all',
                    },
                    development: {
                        buildOptimizer: false,
                        optimization: false,
                        vendorChunk: true,
                        extractLicenses: false,
                        sourceMap: true,
                        namedChunks: true,
                    },
                },
                defaultConfiguration: 'production',
            },
            serve: {
                executor: '@angular-devkit/build-angular:dev-server',
                options: options.port
                    ? {
                        port: options.port,
                    }
                    : undefined,
                configurations: {
                    production: {
                        browserTarget: `${options.name}:build:production`,
                    },
                    development: {
                        browserTarget: `${options.name}:build:development`,
                    },
                },
                defaultConfiguration: 'development',
            },
            'extract-i18n': {
                executor: '@angular-devkit/build-angular:extract-i18n',
                options: {
                    browserTarget: `${options.name}:build`,
                },
            },
        },
    };
    (0, devkit_1.addProjectConfiguration)(tree, options.name, project);
}
exports.createProject = createProject;
