"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateEditorTsConfig = void 0;
const devkit_1 = require("@nx/devkit");
function getCompilerOptionsTypes(tsConfig) {
    var _a, _b;
    return (_b = (_a = tsConfig === null || tsConfig === void 0 ? void 0 : tsConfig.compilerOptions) === null || _a === void 0 ? void 0 : _a.types) !== null && _b !== void 0 ? _b : [];
}
function updateEditorTsConfig(tree, options) {
    const types = getCompilerOptionsTypes((0, devkit_1.readJson)(tree, (0, devkit_1.joinPathFragments)(options.appProjectRoot, 'tsconfig.app.json')));
    if (options.unitTestRunner !== 'none') {
        types.push(...getCompilerOptionsTypes((0, devkit_1.readJson)(tree, (0, devkit_1.joinPathFragments)(options.appProjectRoot, 'tsconfig.spec.json'))));
    }
    (0, devkit_1.updateJson)(tree, (0, devkit_1.joinPathFragments)(options.appProjectRoot, 'tsconfig.editor.json'), (json) => {
        json.compilerOptions.types = types;
        return json;
    });
    // This should be the last tsconfig references so it's not in the template
    (0, devkit_1.updateJson)(tree, (0, devkit_1.joinPathFragments)(options.appProjectRoot, 'tsconfig.json'), (json) => {
        json.references.push({
            path: './tsconfig.editor.json',
        });
        return json;
    });
}
exports.updateEditorTsConfig = updateEditorTsConfig;
