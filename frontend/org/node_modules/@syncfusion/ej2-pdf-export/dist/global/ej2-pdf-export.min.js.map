{"version":3,"file":"ej2-pdf-export.min.js","sources":["../../src/implementation/collections/utils.js","../../src/implementation/collections/dictionary.js","../../src/implementation/primitives/pdf-name.js","../../src/implementation/input-output/pdf-operators.js","../../src/implementation/input-output/pdf-dictionary-properties.js","../../src/implementation/primitives/pdf-dictionary.js","../../src/implementation/primitives/pdf-number.js","../../src/implementation/primitives/pdf-array.js","../../src/implementation/primitives/pdf-stream.js","../../src/implementation/primitives/pdf-string.js","../../src/implementation/primitives/pdf-reference.js","../../src/implementation/actions/action.js","../../src/implementation/actions/uri-action.js","../../src/implementation/graphics/enum.js","../../src/implementation/graphics/pdf-color.js","../../src/implementation/drawing/pdf-drawing.js","../../src/implementation/graphics/brushes/pdf-brush.js","../../src/implementation/graphics/brushes/pdf-solid-brush.js","../../src/implementation/graphics/fonts/enum.js","../../src/implementation/graphics/fonts/pdf-string-format.js","../../src/implementation/graphics/fonts/string-tokenizer.js","../../src/implementation/graphics/fonts/string-layouter.js","../../src/implementation/graphics/fonts/pdf-font.js","../../src/implementation/input-output/pdf-writer.js","../../src/implementation/input-output/enum.js","../../src/implementation/input-output/pdf-main-object-collection.js","../../src/implementation/document/pdf-document-base.js","../../src/implementation/input-output/cross-table.js","../../src/implementation/primitives/pdf-boolean.js","../../src/implementation/document/pdf-viewer-preferences.js","../../src/implementation/document/pdf-catalog.js","../../src/implementation/input-output/pdf-cross-table.js","../../src/implementation/pages/pdf-page-size.js","../../src/implementation/pages/enum.js","../../src/implementation/graphics/pdf-margins.js","../../src/implementation/pages/pdf-page-settings.js","../../src/implementation/input-output/pdf-stream-writer.js","../../src/implementation/graphics/pdf-pen.js","../../src/implementation/graphics/pdf-transformation-matrix.js","../../src/implementation/graphics/constants.js","../../src/implementation/collections/object-object-pair/dictionary.js","../../src/implementation/graphics/pdf-transparency.js","../../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../../src/implementation/graphics/figures/base/graphics-element.js","../../src/implementation/document/automatic-fields/automatic-field.js","../../src/implementation/document/automatic-fields/automatic-field-info.js","../../src/implementation/graphics/images/byte-array.js","../../src/implementation/graphics/images/image-decoder.js","../../src/implementation/graphics/unit-convertor.js","../../src/implementation/graphics/images/pdf-image.js","../../src/implementation/graphics/images/pdf-bitmap.js","../../src/implementation/graphics/fonts/ttf-table-info.js","../../src/implementation/graphics/fonts/ttf-name-table.js","../../src/implementation/graphics/fonts/ttf-name-record.js","../../src/implementation/graphics/fonts/ttf-head-table.js","../../src/implementation/graphics/fonts/ttf-metrics.js","../../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../../src/implementation/graphics/fonts/ttf-OS2-Table.js","../../src/implementation/graphics/fonts/ttf-post-table.js","../../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-cmap-table.js","../../src/implementation/graphics/fonts/ttf-glyph-info.js","../../src/implementation/graphics/fonts/ttf-loca-table.js","../../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-glyph-header.js","../../src/implementation/input-output/big-endian-writer.js","../../src/implementation/graphics/fonts/ttf-reader.js","../../src/implementation/graphics/fonts/pdf-font-metrics.js","../../src/implementation/graphics/fonts/unicode-true-type-font.js","../../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../../src/implementation/graphics/fonts/rtl-renderer.js","../../src/implementation/graphics/figures/enum.js","../../src/implementation/graphics/brushes/pdf-gradient-brush.js","../../src/implementation/graphics/figures/pdf-template.js","../../src/implementation/graphics/pdf-resources.js","../../src/implementation/graphics/brushes/pdf-tiling-brush.js","../../src/implementation/graphics/pdf-graphics.js","../../src/implementation/pages/pdf-page-layer.js","../../src/implementation/general/pdf-collection.js","../../src/implementation/pages/pdf-page-layer-collection.js","../../src/implementation/pages/pdf-page-base.js","../../src/implementation/annotations/annotation-collection.js","../../src/implementation/pages/pdf-page.js","../../src/implementation/pages/page-added-event-arguments.js","../../src/implementation/pages/pdf-section-page-collection.js","../../src/implementation/document/pdf-document-template.js","../../src/implementation/pages/pdf-section-templates.js","../../src/implementation/pages/pdf-section.js","../../src/implementation/pages/pdf-section-collection.js","../../src/implementation/pages/pdf-document-page-collection.js","../../src/implementation/general/pdf-cache-collection.js","../../src/implementation/document/pdf-document.js","../../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../../src/implementation/graphics/fonts/pdf-standard-font.js","../../src/implementation/annotations/annotation.js","../../src/implementation/annotations/link-annotation.js","../../src/implementation/annotations/action-link-annotation.js","../../src/implementation/annotations/document-link-annotation.js","../../src/implementation/graphics/figures/base/element-layouter.js","../../src/implementation/structured-elements/grid/styles/pdf-borders.js","../../src/implementation/graphics/figures/layout-element.js","../../src/implementation/graphics/figures/base/text-layouter.js","../../src/implementation/graphics/figures/text-element.js","../../src/implementation/annotations/uri-annotation.js","../../src/implementation/annotations/pdf-text-web-link.js","../../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../../src/implementation/document/automatic-fields/multiple-value-field.js","../../src/implementation/document/automatic-fields/pdf-page-number-field.js","../../src/implementation/document/automatic-fields/composite-field.js","../../src/implementation/document/automatic-fields/single-value-field.js","../../src/implementation/document/automatic-fields/page-count-field.js","../../src/implementation/general/enum.js","../../src/implementation/general/pdf-destination.js","../../src/implementation/graphics/brushes/enum.js","../../src/implementation/general/functions/pdf-function.js","../../src/implementation/general/functions/pdf-sampled-function.js","../../src/implementation/graphics/brushes/pdf-brushes.js","../../src/implementation/graphics/brushes/pdf-blend.js","../../src/implementation/graphics/brushes/pdf-color-blend.js","../../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../../src/implementation/structured-elements/tables/light-tables/enum.js","../../src/implementation/structured-elements/grid/styles/style.js","../../src/implementation/structured-elements/grid/pdf-grid-cell.js","../../src/implementation/structured-elements/grid/pdf-grid-column.js","../../src/implementation/structured-elements/grid/pdf-grid-row.js","../../src/implementation/structured-elements/grid/pdf-grid.js","../../src/implementation/structured-elements/grid/layout/grid-layouter.js","../../src/implementation/graphics/figures/base/shape-layouter.js","../../src/implementation/graphics/figures/base/pdf-shape-element.js","../../src/implementation/graphics/figures/base/draw-element.js","../../src/implementation/graphics/figures/base/fill-element.js","../../src/implementation/graphics/figures/path.js","../../src/implementation/graphics/figures/rectangle-area.js","../../src/implementation/graphics/figures/ellipse-part.js","../../src/implementation/graphics/figures/arc.js","../../src/implementation/graphics/fonts/pdf-true-type-font.js","../../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isFont = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isFont = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isFont = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isFont = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isFont = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            /* tslint:disable */\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /* tslint:enable */\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(path.pathPoints, path.pathTypes);\n        this.drawPathHelper(pen, brush, path.fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var secion = this.currentPage.section;\n                        var startIndex = secion.indexOf(startPage) + 1;\n                        var endIndex = secion.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = this.currentPage.graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                // if (cell.columnSpan > 1)\n                                // {\n                                //     for (; c < cell.columnSpan; c++)\n                                //         cellWidth += row.grid.columns.getColumn(c).width;\n                                // }\n                                // else\n                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            // if (!cancelSpans) {\n            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {\n            //         row.cells.getCell(i + k).isCellMergeContinue = true;\n            //     }\n            //}\n            var size = new SizeF(this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isFont","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","isImage","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","assignRGB","filled","redColor","greenColor","g","blueColor","grayColor","gray","alpha","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substr","text2","peekLine","line","readWord","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfPageMode","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_dictionaryProperties","_centerWindow","_fitWindow","_displayTitle","_splitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","UseNone","_pageLayout","PdfPageLayout","SinglePage","_dictionary","_duplex","DuplexMode","_catalog","_mapPageMode","_mapDuplexMode","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","settings","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","readNextTwoBytes","ImageFormat","ImageDecoder","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","swt","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","st","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","reArrange","pstart","pend","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","mbStroking","mfunction","mpatternDictionary","sh","aa","mcolorSpace","csValue","colorSpaceToDeviceName","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","writeTransformation","tempSize","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","mStroking","mLocation","mDictionaryProperties","PdfPage","mPage","brushStream","mResources","setBox","setObligatoryFields","mTransformationMatrix","tempBrushStream","tempResource","mBox","tileTransform","box","mGraphics","name1","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","drawPathHelper","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","lgb","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","drawPath","path","buildUpPath","pathPoints","pathTypes","fillMode","drawArc","constructArcPath","cnt","typeValue","Start","Bezier3","p2","p3","getBezierPoints","Line","checkFlags","points","pathTypesValuesMask","CloseSubpath","y1","startAng","sweepAngle","getBezierArc","pt","numX1","numY1","numX2","numY2","s1","e1","tmp","fragAngle1","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointsList","thetaValue0","thetaValue1","cos0","cos1","sin0","sin1","transparencyObject","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","baseFormat","break","boundsSet","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","default","newBound","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfExtend","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","sizes","samples","checkParams","setDomainAndRange","setSizeAndValues","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","precision","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","blend","factors","gcd","u","v","iU","iV","gcdInt","mcolors","getFunction","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","samplesCount","step","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","indexHi","indexLow","getIndices","positionLow","positionHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mPointStart","mPointEnd","setPoints","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","mBoundaries","radAngle","tan","centre","p1","cp1","subPoints","choosePoint","coef","mulPoints","addPoints","mulPoint","mColours","mColourBlend","initShading","mBlend","extStart","extEnd","End","point1","point2","interpolationColors","PdfRadialGradientBrush","centerStart","radiusStart","centerEnd","radiusEnd","colorStart","colorEnd","mRadiusStart","mRadiusEnd","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","rBrush","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","isHeaderRow","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","currentLocation","slr","isPaginate","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","secion","startIndex","endIndex","pageGraphics","location_2","totalwidth","i_6","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFit","isFitToCell","location_4","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","cellstyle1","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished","ShapeLayouter","olderPdfForm","shapeBounds","totalPageSize","shapeLayoutBounds","getBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","PdfShapeElement","apply","getBoundsInternal","drawShapeHelper","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mpoints","mpathTypes","mStartFigure","mfillMode","isBeziers3","isXps","addPath","getLastPoint","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","startFigure","closeFigure","addLine","addPie","addPoint","addPolygon","addRectangle","closeAllFigures","startPath","lastPoint","pointCount","fragAngle","pointList","theta0","theta1","xmin","xmax","ymin","ymax","pointType","PdfRectangleArea","PdfEllipsePart","startAngle","PdfArc","argu1","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds"],"mappings":"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AAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,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AS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,OAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,OAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,OAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,OAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,OAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAE7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,KAAM,MAC7CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,MAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,MAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,MAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,MAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,MAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,MAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,MAC9CR,KAAKwiD,yBAAyBhiD,SAAS,KAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,OAC9CR,KAAKwiD,yBAAyBhiD,SAAS,MAAO,QAE3C6hD,KAGPW,GAA+B,WAG/B,QAASA,KAKLhjD,KAAK4jD,SAIL5jD,KAAK6jD,WAAa,EAKlB7jD,KAAK8jD,kBAAoB,GAAI5uC,OAAM,OAMnClV,KAAK+jD,EAAI,EAIT/jD,KAAKgkD,IAAM,EAIXhkD,KAAKikD,IAAM,EAIXjkD,KAAKkkD,EAAI,EAITlkD,KAAKmkD,GAAK,EAIVnkD,KAAKokD,IAAM,EAIXpkD,KAAKqkD,IAAM,EAIXrkD,KAAKskD,IAAM,EAIXtkD,KAAKukD,GAAK,EAIVvkD,KAAKwkD,GAAK,EAIVxkD,KAAKykD,GAAK,GAIVzkD,KAAK0kD,GAAK,GAIV1kD,KAAK2kD,GAAK,GAIV3kD,KAAK4kD,IAAM,GAIX5kD,KAAK6kD,GAAK,GAIV7kD,KAAK8kD,EAAI,GAIT9kD,KAAK+kD,EAAI,GAIT/kD,KAAKglD,GAAK,GAIVhlD,KAAKilD,GAAK,GAIVjlD,KAAKklD,WACDllD,KAAK+jD,EAAG/jD,KAAKukD,GAAIvkD,KAAK6kD,GAAI7kD,KAAKwkD,GAAIxkD,KAAKwkD,GAAIxkD,KAAK+kD,EAAG/kD,KAAKykD,GAAIzkD,KAAKykD,GAAIzkD,KAAK8kD,EAAG9kD,KAAK0kD,GAAI1kD,KAAK0kD,GAAI1kD,KAAK+kD,EAAG/kD,KAAK2kD,GAAI3kD,KAAK2kD,GACtH3kD,KAAKglD,GAAIhlD,KAAK4kD,IAAK5kD,KAAK4kD,IAAK5kD,KAAK8kD,EAAG9kD,KAAK6kD,GAAI,GAAI7kD,KAAK6kD,GAAI,GAAI,GAAI7kD,KAAK8kD,EAAG,GAAI,GAAI9kD,KAAK+kD,EAAG,GAAI,GAAI/kD,KAAKglD,GAAI,GAAI,GAChHhlD,KAAKilD,GAAI,GAAI,GAAIjlD,KAAKykD,GAAI,GAAI,GAAIzkD,KAAKilD,GAAI,GAAI,GAAIjlD,KAAKykD,GAAI,GAAI,GAAIzkD,KAAK2kD,GAAI,GAAI,GAAI3kD,KAAKykD,GAAI,GAAI,GAAIzkD,KAAK2kD,GAC3G,GAAI,GAAI3kD,KAAK2kD,GAAI,GAAI,GAAI3kD,KAAKukD,GAAI,GAAI,GAAIvkD,KAAK2kD,GAAI,GAAI,GAAI3kD,KAAKilD,GAAI,GAAI,GAAIjlD,KAAK+jD,EAAG,GAAI,GAAI/jD,KAAKilD,GAAI,GAAI,IAAKjlD,KAAK+jD,EACnH,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK6kD,GAAI,IAAK,IAAK7kD,KAAK8kD,EAAG,IAAK,IAAK9kD,KAAK6kD,GAAI,IAAK,IAAK7kD,KAAK2kD,GAC1F,IAAK,IAAK3kD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAKykD,GAAI,IAAK,IAAKzkD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAC1F,IAAK,IAAKjlD,KAAKykD,GAAI,IAAK,IAAKzkD,KAAKukD,GAAI,IAAK,IAAKvkD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAC1F,IAAK,IAAKjlD,KAAKukD,GAAI,IAAK,IAAKvkD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GACzF,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EACzF,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GACzF,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK4kD,IAAK,IAAK,IAAK5kD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAK4kD,IAC1F,IAAK,IAAK5kD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EACzF,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,IAAKjlD,KAAK+jD,EAAG,IAAK,IAAK/jD,KAAKilD,GAAI,IAAK,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC5F,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC9E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAKkkD,EAAG,KAAM,KAAMlkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAKkkD,EAAG,KAAM,KAAMlkD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAKkkD,EAAG,KAAM,KAAMlkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKkkD,EAC/E,KAAM,KAAMlkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKkkD,EAAG,KAAM,KAAMlkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKmkD,GAC7E,KAAM,KAAMnkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK2kD,GAAI,KAAM,KAAM3kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAKilD,GAC/E,KAAM,KAAMjlD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK+jD,EAChF,KAAM,KAAM/jD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK+jD,EAC/E,KAAM,KAAM/jD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK0kD,GAChF,KAAM,KAAM1kD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAK0kD,GAAI,KAAM,KAAM1kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK4kD,IAChF,KAAM,KAAM5kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK4kD,IACjF,KAAM,KAAM5kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK4kD,IACjF,KAAM,KAAM5kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAKukD,GAAI,KAAM,KAAMvkD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK+jD,EAChF,KAAM,KAAM/jD,KAAK6kD,GAAI,KAAM,KAAM7kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAKmkD,GACjF,KAAM,KAAMnkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK+jD,EAChF,KAAM,KAAM/jD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAKmkD,GAAI,KAAM,KAAMnkD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAK+jD,EAChF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAChF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAChF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAK+jD,EAChF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EACjF,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAChF,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKglD,GAAI,KAAM,KAAMhlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKykD,GAC/E,KAAM,KAAMzkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC/E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAKglD,GAChF,KAAM,KAAMhlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC/E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAAK,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC/E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKglD,GAAI,KAAM,KAAMhlD,KAAK6kD,GAAI,KAAM,KAAM7kD,KAAK+jD,EAC/E,KAAM,KAAM/jD,KAAKkkD,EAAG,KAAM,KAAMlkD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAKglD,GAAI,KAAM,KAAMhlD,KAAK8kD,EAC/E,KAAM,KAAM9kD,KAAKgkD,IAAK,KAAM,KAAMhkD,KAAKokD,IAAK,KAAM,KAAMpkD,KAAKskD,IAAK,KAAM,KAAMtkD,KAAKikD,IACnF,KAAM,KAAMjkD,KAAKqkD,IAAK,KAAM,KAAMrkD,KAAKglD,GAAI,KAAM,KAAMhlD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAKilD,GACjF,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKglD,GAC9E,KAAM,KAAMhlD,KAAK6kD,GAAI,KAAM,KAAM7kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK6kD,GAAI,KAAM,KAAM7kD,KAAKukD,GAC/E,KAAM,KAAMvkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKukD,GAAI,KAAM,KAAMvkD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAKilD,GAC/E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKukD,GAAI,KAAM,KAAMvkD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAKilD,GAC/E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAK4kD,IAC9E,KAAM,KAAM5kD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKykD,GAC9E,KAAM,KAAMzkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAKykD,GAAI,KAAM,KAAMzkD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC/E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAC9E,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKukD,GAC9E,KAAM,KAAMvkD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKukD,GAAI,KAAM,KAAMvkD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAC/E,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAC/E,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAC/E,KAAM,KAAM/jD,KAAKilD,GAAI,KAAM,KAAMjlD,KAAK+jD,EAAG,KAAM,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAClF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAKglD,GAAI,MAAO,MAAOhlD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACvF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAK4kD,IAAK,MAAO,MAAO5kD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACxF,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EACvF,MAAO,MAAO/jD,KAAK4kD,IAAK,MAAO,MAAO5kD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACxF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACtF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACtF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACtF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACtF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACtF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKkkD,EACtF,MAAO,MAAOlkD,KAAK4kD,IAAK,MAAO,MAAO5kD,KAAKkkD,EAAG,MAAO,MAAOlkD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAKkkD,EACxF,MAAO,MAAOlkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKkkD,EAAG,MAAO,MAAOlkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKkkD,EACrF,MAAO,MAAOlkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKkkD,EAAG,MAAO,MAAOlkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKkkD,EACrF,MAAO,MAAOlkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKkkD,EAAG,MAAO,MAAOlkD,KAAKmkD,GAAI,MAAO,MAAOnkD,KAAK+jD,EACtF,MAAO,MAAO/jD,KAAKmkD,GAAI,MAAO,MAAOnkD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKmkD,GACvF,MAAO,MAAOnkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKmkD,GAAI,MAAO,MAAOnkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKmkD,GACtF,MAAO,MAAOnkD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAK4kD,IAAK,MAAO,MAAO5kD,KAAK+jD,EACxF,MAAO,MAAO/jD,KAAK4kD,IAAK,MAAO,MAAO5kD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK2kD,GACxF,MAAO,MAAO3kD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK2kD,GAAI,MAAO,MAAO3kD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACvF,MAAO,MAAOjlD,KAAK2kD,GAAI,MAAO,MAAO3kD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAKilD,GACxF,MAAO,MAAOjlD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACvF,MAAO,MAAOjlD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKmkD,GACvF,MAAO,MAAOnkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKmkD,GAAI,MAAO,MAAOnkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAK6kD,GACtF,MAAO,MAAO7kD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAKilD,GACvF,MAAO,MAAOjlD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAK2kD,GAAI,MAAO,MAAO3kD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAK2kD,GACxF,MAAO,MAAO3kD,KAAKwkD,GAAI,MAAO,MAAOxkD,KAAKukD,GAAI,MAAO,MAAOvkD,KAAK2kD,GAAI,MAAO,MAAO3kD,KAAKilD,GACxF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GACtF,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKykD,GAAI,MAAO,MAAOzkD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAKykD,GACvF,MAAO,MAAOzkD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAAG,MAAO,MAAO/jD,KAAK6kD,GACtF,MAAO,MAAO7kD,KAAKilD,GAAI,MAAO,MAAOjlD,KAAK+jD,EAE9C,KAAK,GAAI7gD,GAAI,EAAGA,EAAIlD,KAAKklD,UAAUlkD,SAAUkC,EAIzC,IAHA,GAAIu2B,GAAQz5B,KAAKklD,UAAUhiD,GACvBihB,EAAMnkB,KAAKklD,YAAYhiD,GACvB6R,EAAI/U,KAAKklD,YAAYhiD,GAClBu2B,GAAStV,GACZnkB,KAAK8jD,kBAAkBrqB,KAAW1kB,EAkR9C,MA5QAiuC,GAAcrjD,UAAUsjD,eAAiB,SAAUJ,EAAWC,GAC1D9iD,KAAK4jD,MAAQ5jD,KAAKmlD,iBAAiBtC,GACnC7iD,KAAK6jD,UAAYf,EAAQ9iD,KAAKgkD,IAAMhkD,KAAK+jD,EACzC/jD,KAAKolD,eAEL,KAAK,GADDniD,MACKC,EAAI,EAAGA,EAAIlD,KAAKqlD,OAAOrkD,OAAQkC,IACpCD,EAAOC,GAAKlD,KAAKqlD,OAAOniD,EAE5B,OAAOD,IAEX+/C,EAAcrjD,UAAUwlD,iBAAmB,SAAU9uC,GAEjD,IAAK,GADDivC,MACKpiD,EAAI,EAAGA,EAAImT,EAAKrV,OAAQkC,IAC7BoiD,EAAepiD,GAAKlD,KAAK8jD,kBAAkBztC,EAAKnT,GAAG8T,WAAW,GAElE,OAAOsuC,IAEXtC,EAAcrjD,UAAU4lD,iBAAmB,WACvC,IAAK,GAAIriD,GAAI,EAAGA,EAAIlD,KAAKgB,OAAQkC,IAC7BlD,KAAKqlD,OAAOniD,GAAKlD,KAAK6jD,WAG9Bb,EAAcrjD,UAAU6lD,UAAY,WAChCxlD,KAAKulD,kBACL,KAAK,GAAIlhD,GAAI,EAAGA,EAAIrE,KAAKgB,SAAUqD,EAAG,CAClC,GAAI48C,GAAQjhD,KAAKqlD,OAAOhhD,EACD,KAAV,IAAR48C,KACDA,GAAS,IACTjhD,KAAKiD,OAAOoB,GAAwB,IAAT,EAAR48C,GAAsBjhD,KAAK+jD,EAAI/jD,KAAKkkD,GAE3DlkD,KAAKqlD,OAAOhhD,GAAK48C,IAGzB+B,EAAcrjD,UAAU8lD,aAAe,SAAUj2C,EAAOyxC,EAAOjgD,GAC3D,GAAoB,IAAP,EAARigD,GACD,IAAS/9C,EAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC1BlD,KAAKiD,OAAOC,KAAOlD,KAAKkkD,EACxBlkD,KAAKqlD,OAAOniD,IAAM,EAEblD,KAAKiD,OAAOC,KAAOlD,KAAK+jD,IAC7B/jD,KAAKqlD,OAAOniD,IAAM,OAK1B,KAAK,GAAIA,GAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC1BlD,KAAKiD,OAAOC,KAAOlD,KAAKkkD,IACxBlkD,KAAKqlD,OAAOniD,IAAM,IAKlC8/C,EAAcrjD,UAAUylD,cAAgB,WACpCplD,KAAKgB,OAAShB,KAAK4jD,MAAM5iD,OACzBhB,KAAKiD,OAASjD,KAAK4jD,MACnB5jD,KAAKqlD,UACLrlD,KAAKwlD,YACLxlD,KAAKgB,OAAShB,KAAK0lD,6BAGnB,KAFA,GAAIC,GAAU3lD,KAAK6jD,UACf3gD,EAAI,EACDA,EAAIlD,KAAKgB,QAAQ,CAIpB,IAHA,GAAIigD,GAAQjhD,KAAKqlD,OAAOniD,GACpB0iD,EAAgD,IAAT,EAA3B/yC,KAAKsV,IAAIw9B,EAAS1E,IAAuBjhD,KAAK+jD,EAAI/jD,KAAKkkD,EACnE3a,EAAWrmC,EAAI,EACZqmC,EAAWvpC,KAAKgB,QAAUhB,KAAKqlD,OAAO9b,KAAc0X,KACrD1X,CAEN,IAAIrjB,GAAUqjB,EAAWvpC,KAAKgB,OAAShB,KAAKqlD,OAAO9b,GAAYvpC,KAAK6jD,UAChEx7C,EAA6C,IAAT,EAA3BwK,KAAKsV,IAAIjC,EAAS+6B,IAAuBjhD,KAAK+jD,EAAI/jD,KAAKkkD,CACpElkD,MAAK6lD,SAAS3iD,EAAGqmC,EAAU0X,EAAO2E,EAASv9C,GAC3CrI,KAAKylD,aAAaviD,EAAG+9C,EAAO1X,GAC5Boc,EAAU1E,EACV/9C,EAAIqmC,EAERvpC,KAAK8lD,wBAAwB9lD,KAAKgB,SAEtCgiD,EAAcrjD,UAAU+lD,4BAA8B,WAElD,IAAK,GADDl2C,GAAQ,EACHtM,EAAI,EAAGA,EAAIlD,KAAKgB,SAAUkC,EACzBlD,KAAK4jD,MAAM1gD,KAAOlD,KAAKgkD,KAAOhkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKokD,KAAOpkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKikD,KACrFjkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKqkD,KAAOrkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKskD,KAAOtkD,KAAK4jD,MAAM1gD,KAAOlD,KAAK6kD,KACnF7kD,KAAKiD,OAAOuM,GAASxP,KAAKiD,OAAOC,GACjClD,KAAKqlD,OAAO71C,GAASxP,KAAKqlD,OAAOniD,GACjCsM,IAGR,OAAOA,IAEXwzC,EAAcrjD,UAAUmmD,wBAA0B,SAAU9kD,GACxD,IAASkC,EAAIlD,KAAK4jD,MAAM5iD,OAAS,EAAGkC,GAAK,IAAKA,EACtClD,KAAK4jD,MAAM1gD,KAAOlD,KAAKgkD,KAAOhkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKokD,KAAOpkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKikD,KACnFjkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKqkD,KAAOrkD,KAAK4jD,MAAM1gD,KAAOlD,KAAKskD,KAAOtkD,KAAK4jD,MAAM1gD,KAAOlD,KAAK6kD,IACnF7kD,KAAKiD,OAAOC,GAAKlD,KAAK4jD,MAAM1gD,GAC5BlD,KAAKqlD,OAAOniD,IAAM,IAGlBlC,GAAU,EACVhB,KAAKiD,OAAOC,GAAKlD,KAAKiD,OAAOjC,GAC7BhB,KAAKqlD,OAAOniD,GAAKlD,KAAKqlD,OAAOrkD,GAGrC,KAAK,GAAIkC,GAAI,EAAGA,EAAIlD,KAAK4jD,MAAM5iD,OAAQkC,KACX,IAApBlD,KAAKqlD,OAAOniD,KAERlD,KAAKqlD,OAAOniD,GADN,IAANA,EACiBlD,KAAK6jD,UAGL7jD,KAAKqlD,OAAOniD,EAAI,KAKjD8/C,EAAcrjD,UAAUkmD,SAAW,SAAUr2C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GAE1E,IAAK,GADDC,GAAWF,EACN7iD,EAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC1BlD,KAAKiD,OAAOC,KAAOlD,KAAK4kD,IACxB5kD,KAAKiD,OAAOC,GAAK+iD,EAGjBA,EAAWjmD,KAAKiD,OAAOC,EAG/BlD,MAAKkmD,oBAAoB12C,EAAOxO,EAAQigD,EAAO8E,EAAWC,IAE9DhD,EAAcrjD,UAAUumD,oBAAsB,SAAU12C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GACrF,IAAK,GAAI9iD,GAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC9B,GAAIlD,KAAKiD,OAAOC,KAAOlD,KAAKukD,GACxB,IAAK,GAAIxQ,GAAI7wC,EAAI,EAAG6wC,GAAKvkC,IAASukC,EAC9B,GAAI/zC,KAAKiD,OAAO8wC,KAAO/zC,KAAK+jD,GAAK/jD,KAAKiD,OAAO8wC,KAAO/zC,KAAKkkD,GAAKlkD,KAAKiD,OAAO8wC,KAAO/zC,KAAKmkD,GAAI,CAClFnkD,KAAKiD,OAAO8wC,KAAO/zC,KAAKmkD,KACxBnkD,KAAKiD,OAAOC,GAAKlD,KAAK0kD,GAE1B,OAKhB1kD,KAAKmmD,sBAAsB32C,EAAOxO,EAAQigD,EAAO8E,EAAWC,IAEhEhD,EAAcrjD,UAAUwmD,sBAAwB,SAAU32C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GACvF,IAAK,GAAI9iD,GAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC1BlD,KAAKiD,OAAOC,KAAOlD,KAAKmkD,KACxBnkD,KAAKiD,OAAOC,GAAKlD,KAAKkkD,EAG9BlkD,MAAKomD,6BAA6B52C,EAAOxO,EAAQigD,EAAO8E,EAAWC,IAEvEhD,EAAcrjD,UAAUymD,6BAA+B,SAAU52C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GAC9F,IAAK,GAAI9iD,GAAIsM,EAAQ,EAAGtM,EAAIlC,EAAS,IAAKkC,EACtC,GAAIlD,KAAKiD,OAAOC,KAAOlD,KAAKwkD,IAAMxkD,KAAKiD,OAAOC,KAAOlD,KAAK2kD,GAAI,CAC1D,GAAIgB,GAAU3lD,KAAKiD,OAAOC,EAAI,GAC1BgjB,EAAUlmB,KAAKiD,OAAOC,EAAI,EAC1ByiD,KAAY3lD,KAAKukD,IAAMr+B,IAAYlmB,KAAKukD,GACxCvkD,KAAKiD,OAAOC,GAAKlD,KAAKukD,GAEjBvkD,KAAKiD,OAAOC,KAAOlD,KAAK2kD,IAAMgB,IAAY3lD,KAAK0kD,IAAMx+B,IAAYlmB,KAAK0kD,KAC3E1kD,KAAKiD,OAAOC,GAAKlD,KAAK0kD,IAIlC1kD,KAAKqmD,8BAA8B72C,EAAOxO,EAAQigD,EAAO8E,EAAWC,IAExEhD,EAAcrjD,UAAU0mD,8BAAgC,SAAU72C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GAC/F,IAAK,GAAI9iD,GAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC9B,GAAIlD,KAAKiD,OAAOC,KAAOlD,KAAKykD,GAAI,CAC5B,GAAI56C,GAAI3G,EACJ6R,IACJA,GAAE7T,KAAKlB,KAAKykD,GACZ,IAAI6B,GAAItmD,KAAKumD,UAAU18C,EAAG7I,EAAQ+T,GAC9BU,EAAO5L,IAAM2F,EAAQu2C,EAAY/lD,KAAKiD,OAAO4G,EAAI,EAIrD,IAHI4L,IAASzV,KAAKukD,KACd9uC,EAAQ6wC,IAAMtlD,EAAUglD,EAAUhmD,KAAKiD,OAAOqjD,IAE9C7wC,IAASzV,KAAKukD,GACd,IAAK,GAAIxQ,GAAIlqC,EAAGkqC,EAAIuS,IAAKvS,EACrB/zC,KAAKiD,OAAO8wC,GAAK/zC,KAAKukD,EAG9BrhD,GAAIojD,EAGZtmD,KAAKwmD,mBAAmBh3C,EAAOxO,EAAQigD,EAAO8E,EAAWC,IAE7DhD,EAAcrjD,UAAU6mD,mBAAqB,SAAUh3C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GACpF,IAAK,GAAI9iD,GAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC1BlD,KAAKiD,OAAOC,KAAOlD,KAAKwkD,IAAMxkD,KAAKiD,OAAOC,KAAOlD,KAAKykD,IAAMzkD,KAAKiD,OAAOC,KAAOlD,KAAK2kD,KACpF3kD,KAAKiD,OAAOC,GAAKlD,KAAKilD,GAG9BjlD,MAAKymD,qBAAqBj3C,EAAOxO,EAAQigD,EAAO8E,EAAWC,IAE/DhD,EAAcrjD,UAAU8mD,qBAAuB,SAAUj3C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GACtF,IAAK,GAAI9iD,GAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC9B,GAAIlD,KAAKiD,OAAOC,KAAOlD,KAAKukD,GAAI,CAE5B,IAAK,GADDmC,GAAMX,EACDhS,EAAI7wC,EAAI,EAAG6wC,GAAKvkC,IAASukC,EAC9B,GAAI/zC,KAAKiD,OAAO8wC,KAAO/zC,KAAK+jD,GAAK/jD,KAAKiD,OAAO8wC,KAAO/zC,KAAKkkD,EAAG,CACxDwC,EAAM1mD,KAAKiD,OAAO8wC,EAClB,OAGJ2S,IAAQ1mD,KAAK+jD,IACb/jD,KAAKiD,OAAOC,GAAKlD,KAAK+jD,GAIlC/jD,KAAK2mD,sBAAsBn3C,EAAOxO,EAAQigD,EAAO8E,EAAWC,IAEhEhD,EAAcrjD,UAAU4mD,UAAY,SAAU/2C,EAAOxO,EAAQ4lD,GAEzD,MADEp3C,IACOA,EAAQxO,GAAQ,CAErB,IAAK,GADD6lD,GAAI7mD,KAAKiD,OAAOuM,GACXtM,EAAI,EAAGA,EAAI0jD,EAAS5lD,SAAUkC,EAC/B2jD,IAAMD,EAAS1jD,KACfsM,EAAQxP,KAAKumD,YAAY/2C,EAAOxO,EAAQ4lD,GAGhD,OAAOp3C,GAEX,MAAOxO,IAEXgiD,EAAcrjD,UAAUgnD,sBAAwB,SAAUn3C,EAAOxO,EAAQigD,EAAO8E,EAAWC,GACvF,IAAK,GAAI9iD,GAAIsM,EAAOtM,EAAIlC,IAAUkC,EAC9B,GAAIlD,KAAKiD,OAAOC,KAAOlD,KAAKglD,IAAMhlD,KAAKiD,OAAOC,KAAOlD,KAAKilD,IAAMjlD,KAAKiD,OAAOC,KAAOlD,KAAK8kD,GACpF9kD,KAAKiD,OAAOC,KAAOlD,KAAK+kD,EAAG,CAC3B,GAAIl7C,GAAI3G,EACJ4jD,GAAQ9mD,KAAK8kD,EAAG9kD,KAAK+kD,EAAG/kD,KAAKglD,GAAIhlD,KAAKilD,IACtCqB,EAAItmD,KAAKumD,UAAU18C,EAAG7I,EAAQ8lD,GAC9BC,EAAK,EACLC,EAAK,EACLC,EAAK,CACLp9C,KAAM2F,EACNu3C,EAAKhB,GAGLgB,EAAK/mD,KAAKiD,OAAO4G,EAAI,MACV7J,KAAK0kD,GACZqC,EAAK/mD,KAAKkkD,EAEL6C,IAAO/mD,KAAKukD,KACjBwC,EAAK/mD,KAAKkkD,GAGdoC,IAAMtlD,EACNgmD,EAAKhB,GAGLgB,EAAKhnD,KAAKiD,OAAOqjD,MACNtmD,KAAK0kD,GACZsC,EAAKhnD,KAAKkkD,EAEL8C,IAAOhnD,KAAKukD,KACjByC,EAAKhnD,KAAKkkD,GAId+C,EADAF,IAAOC,EACFD,EAGmB,IAAT,EAAR9F,GAAsBjhD,KAAK+jD,EAAI/jD,KAAKkkD,CAE/C,KAAK,GAAInQ,GAAIlqC,EAAGkqC,EAAIuS,IAAKvS,EACrB/zC,KAAKiD,OAAO8wC,GAAKkT,CAErB/jD,GAAIojD,IAITtD,KCt7BPkE,GAA6B,WAC7B,QAASA,KAILlnD,KAAKmnD,YAAc,IAInBnnD,KAAKonD,aAAe,IA8NxB,MA3MAF,GAAYvnD,UAAUmlB,OAAS,SAAUhB,EAAMnb,EAAM0+C,EAAKC,EAAWliC,GACjE,GAAY,MAARtB,EACA,KAAM,IAAIxN,OAAM,+BAEpB,IAAY,MAAR3N,EACA,KAAM,IAAI2N,OAAM,+BAEpB,IAAIrT,KAQJ,OAPI0F,GAAKqqC,QACL/vC,EAASjD,KAAKunD,aAAazjC,EAAMujC,EAAKjiC,EAAQzc,EAAM2+C,IAGpDrkD,MACO,GAAK6gB,EAET7gB,GAUXikD,EAAYvnD,UAAU6nD,YAAc,SAAU1jC,EAAMnb,EAAM0+C,EAAKC,EAAWliC,GACtE,GAAY,MAARtB,EACA,KAAM,IAAIxN,OAAM,+BAEpB,IAAY,MAAR3N,EACA,KAAM,IAAI2N,OAAM,+BAOpB,OAFYtW,MAAKynD,kBAAkB3jC,EAAMnb,EAAM0+C,EAAKC,EAAWliC,IAyBnE8hC,EAAYvnD,UAAU+nD,cAAgB,SAAU5jC,EAAMnb,EAAM0+C,EAAaM,EAAQC,GAG7E,GAAY,MAAR9jC,EACA,KAAM,IAAIxN,OAAM,+BAEpB,IAAY,MAAR3N,EACA,KAAM,IAAI2N,OAAM,+BAGpB,IADAqxC,EAAS,KACW,IAAhB7jC,EAAK9iB,OACL,OAASklB,SATF,EASiByhC,OAAQA,EAEpC,IACItxC,IADW,GAAI8oC,KACC6B,MAAMl9B,EAAM,GAE5Bu4B,EADe1zC,EAAKk/C,aACKxL,SAC7BsL,GAAS,GAAIG,aAAYzxC,EAAKrV,OAE9B,KAAK,GADDkC,GAAI,EACCzC,EAAI,EAAG2T,EAAMiC,EAAKrV,OAAQP,EAAI2T,EAAK3T,IAAK,CAC7C,GAAI2C,GAAKiT,EAAK5V,GACVkyC,EAAY0J,EAAUxG,SAASzyC,EACjB,QAAduvC,OAA2C,KAAdA,IAC7BgV,EAAOzkD,KAAO,EAAYsM,OAGlC,OAAS0W,SAzBK,EAyBayhC,OAAQA,IAGvCT,EAAYvnD,UAAU4nD,aAAe,SAAUzjC,EAAMujC,EAAKjiC,EAAQzc,EAAM2+C,GACpE,GAAkB,OAAdA,OAA2C,KAAdA,EAA2B,CACxD,GAAY,MAARxjC,EACA,KAAM,IAAIxN,OAAM,+BAEhBrT,GAAS,IAMb,OAJe,QAAXmiB,OAAqC,KAAXA,GAA0BA,EAAO2iC,gBAAkBrrC,mBAAiBkG,OAE9F3f,GADW,GAAIo/C,KACDO,yBAAyB9+B,EAAMujC,IAE1CpkD,EAGP,GAAY,MAAR6gB,EACA,KAAM,IAAIxN,OAAM,+BAEpB,IAAY,MAAR3N,EACA,KAAM,IAAI2N,OAAM,+BAEpB,IAAI0xC,GAAW,IACf,IAAe,OAAX5iC,OAAqC,KAAXA,GAA0BA,EAAO2iC,gBAAkBrrC,mBAAiBkG,KAAM,CACpG,GACIqlC,IADW,GAAI9I,KACA6B,MAAMl9B,EAAM,EAC/BkkC,GAAWhoD,KAAKunD,aAAaU,EAAKZ,EAAKjiC,GAM3C,GAAIniB,KAEJ,IAAIqkD,EAAW,CAGX,IAAK,GAFDY,GAAQF,EAASx1B,MAAM,IACvBrqB,EAAQ+/C,EAAMlnD,OACTkC,EAAI,EAAGA,EAAIiF,EAAOjF,IACvBglD,EAAMhlD,GAAKlD,KAAKmoD,SAASx/C,EAAMu/C,EAAMhlD,GAEzCD,GAASilD,OAGTjlD,MACO,GAAKjD,KAAKmoD,SAASx/C,EAAMq/C,EAEpC,OAAO/kD,IASfikD,EAAYvnD,UAAUwoD,SAAW,SAAUx/C,EAAMg/C,GAC7C,GAAI7jC,GAAO6jC,CACX,IAAY,MAARh/C,EACA,KAAM,IAAI2N,OAAM,+BAEpB,IAAY,MAARwN,EACA,KAAM,IAAIxN,OAAM,+BAEpB,IAAID,GAAOyN,EAEPu4B,EADe1zC,EAAKk/C,aACKxL,SAC7B1zC,GAAKu2C,WAAW7oC,GAEhBA,EAAOgmC,EAAUnC,cAAc7jC,EAC/B,IAAI6C,GAAQf,EAAUyB,eAAevD,GAAM,EAE3C,OADAA,GAAO8B,EAAU4B,aAAab,IAmClCguC,EAAYvnD,UAAU8nD,kBAAoB,SAAU3jC,EAAMnb,EAAM0+C,EAAKC,EAAWliC,GAC5E,GAAY,MAARtB,EACA,KAAM,IAAIxN,OAAM,+BAEpB,IAAY,MAAR3N,EACA,KAAM,IAAI2N,OAAM,+BAIpB,OAFmBtW,MAAKunD,aAAazjC,EAAMujC,EAAKjiC,GACvBoN,MAAM,KAG5B00B,MC1OX,SAAWkB,GAKPA,EAAcA,EAAwB,SAAI,GAAK,WAK/CA,EAAcA,EAAuB,QAAI,GAAK,WAC/CA,kBAAkBA,qBAMrB,SAAWC,GAKPA,EAAmBA,EAA4B,QAAI,GAAK,UAKxDA,EAAmBA,EAA+B,WAAI,GAAK,aAK3DA,EAAmBA,EAAqC,iBAAI,GAAK,oBAClEA,uBAAuBA,0BAE1B,SAAWC,GAKPA,EAAcA,EAAqB,MAAI,GAAK,QAK5CA,EAAcA,EAAoB,KAAI,GAAK,OAK3CA,EAAcA,EAAuB,QAAI,GAAK,UAK9CA,EAAcA,EAAsB,OAAI,GAAK,SAK7CA,EAAcA,EAA4B,aAAI,GAAK,eAKnDA,EAAcA,EAAwB,SAAI,IAAM,WAKhDA,EAAcA,EAA0B,WAAI,IAAM,aAKlDA,EAAcA,EAA4B,aAAI,KAAO,gBACtDA,kBAAkBA,oBCjFrB,IAAI1zC,IAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,uBAA2BC,QAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI1K,KAAK0K,GAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASK,KAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,GAAIyV,QAkBnFmzC,GAAkC,SAAU/yC,GAQ5C,QAAS+yC,GAAiBt7C,GACtB,GAAIyI,GAAQF,EAAO3V,KAAKG,OAASA,IA2BjC,OArBA0V,GAAM8yC,YAAc,GAAI7rC,GAAS,IAAK,IAAK,KAK3CjH,EAAM+yC,YAAa,EAKnB/yC,EAAMgzC,UAAY,KAKlBhzC,EAAMpG,qBAAuB,GAAItH,GACjC0N,EAAMizC,mBAAqB,GAAI/5C,GAC/B8G,EAAMizC,mBAAmBp5C,MAAM/O,SAASkV,EAAMpG,qBAAqBjH,KAAM,GAAI1G,GAAQ+T,EAAMpG,qBAAqBlG,UAChHsM,EAAMizC,mBAAmBp5C,MAAM/O,SAASkV,EAAMpG,qBAAqB1B,YAAa,GAAIkE,GAAU,IAC9F4D,EAAMzI,QAAUA,EAChByI,EAAMxM,WAAaoT,gBAAckC,IAC1B9I,EA+QX,MAlTAd,IAAU2zC,EAAkB/yC,GAqC5B9V,OAAOuC,eAAesmD,EAAiB5oD,UAAW,cAM9CuC,IAAK,WACD,MAAOlC,MAAKwoD,aAEhBpmD,IAAK,SAAU7B,GACXP,KAAKwoD,YAAcjoD,CACnB,IAAIqoD,GAAK5oD,KAAKiN,OACV1M,GAAM+d,QACNsqC,EAAGloD,OAAOV,KAAKsP,qBAAqBtC,YAGpC47C,EAAGr5C,MAAM/O,SAASR,KAAKsP,qBAAqBtC,WAAYzM,EAAM6e,QAAQpf,KAAKkJ,cAGnF7G,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,aAK9CuC,IAAK,WAGD,MAFSlC,MAAKiN,QACDsC,MAAMnP,SAASJ,KAAKsP,qBAAqBnC,WAC5C5M,OAEd6B,IAAK,SAAU7B,GACX,GAAIqoD,GAAK5oD,KAAKiN,QACV47C,EAAMD,EAAGr5C,MAAMnP,SAASJ,KAAKsP,qBAAqBnC,UAC3C,OAAN07C,OAA4B,KAAPA,GACtBA,EAAK,GAAIh7B,GAAWttB,GACpBqoD,EAAGr5C,MAAM/O,SAASR,KAAKsP,qBAAqBnC,UAAW07C,IAGvDA,EAAGtoD,MAAQA,GAGnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,YAK9CuC,IAAK,WACD,MAAOlC,MAAK0oD,WAEhBtmD,IAAK,SAAU7B,GACXP,KAAK0oD,UAAYnoD,EACJ,MAATA,OAAkC,KAAVA,EACxBP,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAKsP,qBAAqBlC,SAAU,GAAIqK,GAAmBzX,KAAK0oD,YAG5F1oD,KAAKiN,QAAQvM,OAAOV,KAAKsP,qBAAqBlC,WAGtD/K,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,QAK9CuC,IAAK,WAGD,MAFSlC,MAAKiN,QACAsC,MAAMnP,SAASJ,KAAKsP,qBAAqBrE,OAG3D7I,IAAK,SAAU7B,GACX,GAAIqoD,GAAK5oD,KAAKiN,OACD,OAAT1M,OAAkC,KAAVA,EACxBqoD,EAAGloD,OAAOV,KAAKsP,qBAAqBrE,MAGpC29C,EAAGr5C,MAAM/O,SAASR,KAAKsP,qBAAqBrE,KAAM1K,IAG1D8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,cAK9CuC,IAAK,WACD,MAAOlC,MAAK8oD,aAEhB1mD,IAAK,SAAU7B,GACX,GAAI2I,GAAalJ,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAKsP,qBAAqBpG,WACvE,IAAK3I,IAAUP,KAAK8oD,aAA+B,MAAd5/C,EAAqB,CACtDlJ,KAAK8oD,YAAcvoD,CACnB,IAAIwoD,GAAU/oD,KAAKgpD,uBAAuBzoD,EAC1CP,MAAKiN,QAAQsC,MAAM/O,SAASR,KAAKsP,qBAAqBpG,WAAY,GAAIvH,GAAQonD,MAGtF1mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,YAK9CuC,IAAK,WACD,MAAOlC,MAAKyoD,YAEhBrmD,IAAK,SAAU7B,GACXP,KAAKyoD,WAAaloD,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,qBAK9CuC,IAAK,WAID,MAH+B,OAA3BlC,KAAK2oD,qBACL3oD,KAAK2oD,mBAAqB,GAAI/5C,IAE3B5O,KAAK2oD,oBAEhBtmD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,WAK9CuC,IAAK,WACD,MAAOlC,MAAKipD,UAEhB7mD,IAAK,SAAU7B,GACX,GAAa,MAATA,EACA,KAAM,IAAI+V,OAAM,kCAEhB/V,KAAUP,KAAKipD,WACfjpD,KAAKipD,SAAW1oD,EAChBP,KAAKkpD,kBAAkB35C,MAAM/O,SAASR,KAAKsP,qBAAqBrC,QAAS,GAAIwK,GAAmBzX,KAAKipD,aAG7G5mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesmD,EAAiB5oD,UAAW,UAK9CuC,IAAK,WACD,MAAOlC,MAAKmpD,SAEhB/mD,IAAK,SAAU7B,GACX,GAAa,MAATA,EACA,KAAM,IAAI+V,OAAM,iCAEpB,IAAI/V,IAAUP,KAAKmpD,QAAS,CACxBnpD,KAAKmpD,QAAU5oD,EAAMsC,OACrB,IAAIsc,GAAI,GAAIrM,GAAS9S,KAAKmpD,QAAQj8C,OAAOoG,SACzCtT,MAAK2oD,mBAAmBp5C,MAAM/O,SAASR,KAAKsP,qBAAqBpC,OAAQiS,KAGjF9c,YAAY,EACZC,cAAc,IAYlBimD,EAAiB5oD,UAAU6gB,eAAiB,SAAUC,EAAOC,EAAcC,EAAcC,EAAaC,GAClG,GAAIC,IAAO,CACX,IAAIL,YAAiB8nC,GAAkB,CAC9BvoD,KAAKkJ,aAAe2X,IACrB7gB,KAAKkJ,WAAa2X,EAClB7gB,KAAKopD,iBAGT1oC,EAAa2Y,cAAc,UAAWr5B,KAAKyoD,WAE3C,IACIY,GADY1oC,EAAaA,eACN2oC,QAAQtpD,KAC/B0gB,GAAaga,qBAAqB,KAAM2uB,EAAQrpD,KAAKyoD,YACrD3nC,GAAO,EAEX,MAAOA,IAOXynC,EAAiB5oD,UAAUqhB,aAAe,SAAUN,KAQpD6nC,EAAiB5oD,UAAUqpD,uBAAyB,SAAU9/C,GAC1D,GAAIjG,EACJ,QAAQiG,GACJ,IAAKoT,iBAAckC,IACfvb,EAAS,YAGjB,MAAOA,IAMXslD,EAAiB5oD,UAAU4pD,uBAAyB,SAAU16C,GAC1D7O,KAAK2oD,mBAAqB95C,GAM9B05C,EAAiB5oD,UAAU6pD,uBAAyB,SAAU/oC,GAC1D,GAAc,MAATA,EACD,KAAM,IAAInK,OAAM,gCAEpB,IACIuyC,GADK7oD,KAAKiN,QACDsC,MAAMnP,SAASJ,KAAKsP,qBAAqBnC,UAC3C,OAAN07C,GACDpoC,EAAMxT,QAAQsC,MAAM/O,SAASR,KAAKsP,qBAAqBnC,UAAW,GAAI0gB,GAAWg7B,EAAGtoD,SAO5FgoD,EAAiB5oD,UAAU8pD,qBAAuB,SAAUhpC,GACxD,GAAIzT,GAAahN,KAAKgN,UACjBA,GAAWsR,UACZmC,EAAMzT,WAAaA,IAG3BtN,OAAOuC,eAAesmD,EAAiB5oD,UAAW,WAO9CuC,IAAK,WACD,MAAOlC,MAAKkpD,mBAEhB7mD,YAAY,EACZC,cAAc,IAEXimD,GACTnoC,GCjUEspC,GAA6B,WAC7B,QAASA,GAAYlqC,EAAMC,GAavB,GAPAzf,KAAKsP,qBAAuB,GAAItH,GAMhChI,KAAK2pD,qBAAsB,MACP,KAATnqC,OAGN,IAAIA,YAAgBF,QAAyB,KAATG,EAAsB,CAC3Dzf,KAAK8oB,QAAU,GAAIvT,EACnB,IAAIq0C,GAAW,GAAItqC,GAAME,EAAKlW,MAAOkW,EAAKjW,OAC1CvJ,MAAKu3B,QAAQqyB,GACb5pD,KAAK+a,iBAGL/a,MAAK8oB,QAAU,GAAIvT,GACnBvV,KAAKu3B,QAAQ,GAAIjY,GAAME,EAAMC,IAC7Bzf,KAAK+a,aA8Ib,MA3IArb,QAAOuC,eAAeynD,EAAY/pD,UAAW,QAKzCuC,IAAK,WACD,MAAOlC,MAAK6pD,cAEhBxnD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeynD,EAAY/pD,UAAW,SAIzCuC,IAAK,WACD,MAAOlC,MAAK0B,KAAK4H,OAErBjH,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeynD,EAAY/pD,UAAW,UAIzCuC,IAAK,WACD,MAAOlC,MAAK0B,KAAK6H,QAErBlH,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeynD,EAAY/pD,UAAW,YAIzCuC,IAAK,WACD,GAAwB,MAApBlC,KAAK8pD,iBAAmD,KAArB9pD,KAAK8pD,YAA6B,CACrE,GAAIC,GAAK,GAAIC,IAAwBhqD,MACjCod,EAAI,GAAI6sC,IAAYjqD,KAAK0B,KAAMqoD,EAAI/pD,KAAK8oB,QAC5C9oB,MAAK8pD,YAAc1sC,EAGnBpd,KAAK8pD,YAAYI,wBAGrB,MAAOlqD,MAAK8pD,aAEhBznD,YAAY,EACZC,cAAc,IAMlBonD,EAAY/pD,UAAUghB,aAAe,WAKjC,MAJsB,OAAlB3gB,KAAKoI,YACLpI,KAAKoI,UAAY,GAAI+hD,IACrBnqD,KAAK8oB,QAAQvZ,MAAM/O,SAASR,KAAKsP,qBAAqBlH,UAAWpI,KAAKoI,YAEnEpI,KAAKoI,WAOhBshD,EAAY/pD,UAAUob,WAAa,WAC/B/a,KAAKoqD,UACLpqD,KAAKqqD,cAMTX,EAAY/pD,UAAUyqD,QAAU,WAC5B,GAAI7pD,GAAQ,GAAIoB,GAAQ3B,KAAKsP,qBAAqBjG,QAClDrJ,MAAK8oB,QAAQvZ,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM9H,IAMhEmpD,EAAY/pD,UAAU0qD,WAAa,WAC/B,GAAI9pD,GAAQ,GAAIoB,GAAQ3B,KAAKsP,qBAAqBpE,KAClDlL,MAAK8oB,QAAQvZ,MAAM/O,SAASR,KAAKsP,qBAAqBvG,QAASxI,IAEnEmpD,EAAY/pD,UAAUwkC,MAAQ,SAAUziC,OAChB,KAATA,GACe,MAAlB1B,KAAKoI,YACLpI,KAAKoI,UAAY,KACjBpI,KAAK8oB,QAAQpoB,OAAOV,KAAKsP,qBAAqBlH,YAE7B,MAAjBpI,KAAKm/B,UACLn/B,KAAKm/B,SAASgF,MAAMnkC,KAAK0B,QAI7B1B,KAAKu3B,QAAQ71B,GACb1B,KAAKmkC,UAObulB,EAAY/pD,UAAU43B,QAAU,SAAU71B,GACtC,GAAI4I,GAAO,GAAIiV,GAAW,GAAIF,GAAO,EAAG,GAAI3d,GACxCc,EAAMsQ,EAASwB,cAAchK,EACjCtK,MAAK8oB,QAAQvZ,MAAM/O,SAASR,KAAKsP,qBAAqBrE,KAAMzI,GAC5DxC,KAAK6pD,aAAenoD,GAExBhC,OAAOuC,eAAeynD,EAAY/pD,UAAW,WAsBzCuC,IAAK,WACD,MAAOlC,MAAK8oB,SAEhBzmB,YAAY,EACZC,cAAc,IAEXonD,KCvLP90C,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,uBAA2BC,QAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI1K,KAAK0K,GAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASK,KAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,GAAIyV,QAwBnF+0C,GAA8B,SAAU30C,GAExC,QAAS20C,GAAaG,GAClB,GAAI50C,GAAQF,EAAO3V,KAAKG,KAAMsqD,IAAmBtqD,IAMjD,OADA0V,GAAM60C,WAAa,GAAI37C,GAChB8G,EAsNX,MA9NAd,IAAUu1C,EAAc30C,GAUxB9V,OAAOuC,eAAekoD,EAAaxqD,UAAW,SAM1CuC,IAAK,WACD,MAAOlC,MAAKwqD,YAEhBnoD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekoD,EAAaxqD,UAAW,YAK1CuC,IAAK,WACD,MAAOlC,MAAK6qB,aAEhBzoB,IAAK,SAAU7B,GACXP,KAAK6qB,YAActqB,GAEvB8B,YAAY,EACZC,cAAc,IAOlB6nD,EAAaxqD,UAAU2pD,QAAU,SAAU3lD,GACvC,GAAI8mD,GAAY9mD,EAAImQ,QAChB4D,EAAO,IAKX,IAJI1X,KAAK0qD,MAAMlpD,YAAYipD,KACvB/yC,EAAO1X,KAAK0qD,MAAMtqD,SAASqqD,IAGnB,MAAR/yC,EAAc,CACd,GAAIizC,GAAQ3qD,KAAK4qD,cACjBlzC,GAAO,GAAI/V,GAAQgpD,GACnB3qD,KAAK0qD,MAAMlqD,SAASiqD,EAAW/yC,GAC3B/T,YAAeolB,GACf/oB,KAAKyT,IAAI9P,EAAK+T,GAET/T,YAAe+lD,IACpB1pD,KAAKyT,IAAI9P,EAAK+T,GAET/T,YAAe4kD,KAAoB5kD,YAAeknD,IACvD7qD,KAAKyT,IAAI9P,EAAK+T,GAET/T,YAAei7B,IACpB5+B,KAAKyT,IAAI9P,EAAK+T,IAET/T,YAAe8iC,KAAY9iC,YAAe2jC,MAC/CtnC,KAAKyT,IAAI9P,EAAK+T,GAGtB,MAAOA,IAMXyyC,EAAaxqD,UAAU6qD,SAAW,WACT,MAAjBxqD,KAAK8qD,WACL9qD,KAAK8qD,SAAW,GAAIxsB,IAExB,IAAIysB,GAAQ/qD,KAAKuP,MAAMnP,SAASJ,KAAKsP,qBAAqB3G,KAC1D,IAAa,MAAToiD,EAAe,CAGFp6B,EAAc6C,YAAYu3B,GAE3C,MAAO/qD,MAAK8qD,UAMhBX,EAAaxqD,UAAUqrD,oBAAsB,SAAUC,GACnD,GAAwB,MAApBA,EACA,KAAM,IAAI30C,OAAM,yCAEpB,IAAI40C,GAAWlrD,KAAKuP,MAAMnP,SAASJ,KAAKsP,qBAAqBrG,QAC7C,OAAZiiD,IACAA,EAAW,GAAIp4C,GACf9S,KAAKuP,MAAM/O,SAASR,KAAKsP,qBAAqBrG,QAASiiD,GAE3D,IAAIxzC,GAAO,GAAI/V,GAAQspD,EAClBC,GAASl3C,SAAS0D,IACnBwzC,EAASz3C,IAAIiE,IAQrByyC,EAAaxqD,UAAUwrD,WAAa,SAAUzzC,GAG1C,IAAK,GAFDrX,GAAM,KACNO,EAAOZ,KAAK8qD,SAASlqD,OAChB4O,EAAQ,EAAGA,EAAQxP,KAAK8qD,SAASppD,OAAQ8N,IAC9C,GAAIxP,KAAK8qD,SAAS1qD,SAASQ,EAAK4O,MAAY,GAAI7N,GAAQ+V,GAAO,CAC3DrX,EAAMO,EAAK4O,EACX,OAGG,MAAPnP,GACAL,KAAK8qD,SAASpqD,OAAOL,IAO7B8pD,EAAaxqD,UAAUirD,aAAe,WAElC,MADWQ,IAAKC,oBAGpBlB,EAAaxqD,UAAU8T,IAAM,SAAU+L,EAAMC,GACzC,GAAID,YAAgBuJ,GAAS,CACzB,GAAIla,GAAa,KACbk8C,EAAQ/qD,KAAKuP,MAAMnP,SAASJ,KAAKsP,qBAAqB3G,KAC1D,IAAa,MAAToiD,EAAe,CACXp/B,EAAYo/B,CAChBl8C,GAAak8C,EACbl8C,EAAak8C,MAGbl8C,GAAa,GAAID,GACjB5O,KAAKuP,MAAM/O,SAASR,KAAKsP,qBAAqB3G,KAAMkG,EAExDA,GAAWU,MAAM/O,SAASif,EAAKlf,MAAO,GAAIkX,GAAmB+H,EAAK1L,cAEjE,IAAI0L,YAAgBkqC,IAAa,CAC9B4B,MAAW,EAGC,QAFhBA,EAAWtrD,KAAKuP,MAAMnP,SAASJ,KAAKsP,qBAAqBjG,YAGrDiiD,EAAW,GAAI18C,GACf5O,KAAKuP,MAAM/O,SAASR,KAAKsP,qBAAqBjG,QAASiiD,IAE3DA,EAAS/7C,MAAM/O,SAASif,EAAKlf,MAAO,GAAIkX,GAAmB+H,EAAK1L,cAE/D,IAAI0L,YAAgBY,IACrB,IAAIZ,YAAgB+oC,KAAoB/oC,YAAgBqrC,MAErC,OADXU,EAAU/rC,EAAK1L,SACE,CACjB,GAAI1K,GAAUpJ,KAAKuP,MAAMnP,SAASJ,KAAKsP,qBAAqBlG,QAE7C,OAAXA,IACAA,EAAU,GAAIwF,GACd5O,KAAKuP,MAAM/O,SAASR,KAAKsP,qBAAqBlG,QAASA,IAE3DA,EAAQmG,MAAM/O,SAASif,EAAKlf,MAAO,GAAIkX,GAAmB8zC,SAIjE,IAAI/rC,YAAgBof,IAAiB,CACtC,GAAI2sB,GAAU/rC,EAAK1L,QACf03C,EAAW,IAGC,QAFhBA,EAAWxrD,KAAKuP,MAAMnP,SAASJ,KAAKsP,qBAAqBnG,cAGrDqiD,EAAW,GAAI58C,GACf5O,KAAKuP,MAAM/O,SAASR,KAAKsP,qBAAqBnG,UAAWqiD,IAE7DA,EAASj8C,MAAM/O,SAASif,EAAKlf,MAAO,GAAIkX,GAAmB8zC,QAE1D,CAED,GAAID,GAAWtrD,KAAKF,WAAWyP,MAAMnP,SAASJ,KAAKsP,qBAAqBjG,SACpEoiD,MAAiB,OACW,KAArBzrD,KAAK6qB,cACZ4gC,EAAiBzrD,KAAK6qB,YAAY2F,SAAS1c,QAAQvE,MAAMnP,SAASJ,KAAKsP,qBAAqBlH,WAAWmH,MAAMnP,SAASJ,KAAKsP,qBAAqBjG,SAEvIrJ,MAAKF,WAAWyP,MAAMpO,QAAnC,IACIuqD,IAAqB,EACrBC,MAAe,EACnB,QAAgC,KAArB3rD,KAAK6qB,iBAA0D1R,WAAnBsyC,IAAkD,MAAlBA,GAIlF,OAAgC,KAArBzrD,KAAK6qB,YAEjB,IAAK,GADD+gC,GAAWH,EAAel8C,MAAMpO,SAC3B+B,EAAI,EAAGA,EAAI0oD,EAAS5qD,OAAQkC,QACN,KAAhB0oD,EAAS1oD,QAAqD,KAAxB0oD,EAAS1oD,GAAG4Q,SACrD83C,EAAS1oD,GAAG4Q,QAAQ2B,KAAK,KAAO+J,EAAK1L,QAAQ2B,KAAK,KAClDk2C,EAAeC,EAAS1oD,GACxBwoD,GAAqB,OATjCD,GAAiB,GAAI78C,GACrB5O,KAAK6qB,YAAY2F,SAAS1c,QAAQvE,MAAMnP,SAASJ,KAAKsP,qBAAqBlH,WAAWmH,MAAM/O,SAASR,KAAKsP,qBAAqBjG,QAASoiD,EAiB5I,IAJgB,MAAZH,IACAA,EAAW,GAAI18C,GACf5O,KAAKF,WAAWyP,MAAM/O,SAASR,KAAKsP,qBAAqBjG,QAASiiD,IAElEI,OAA8C,KAAjBC,EAC7BL,EAAS/7C,MAAM/O,SAASif,EAAKlf,MAAOorD,OAEnC,CACD,GAAIhgC,GAAY,GAAIlU,GAAmB+H,EAAK1L,QAC5Cw3C,GAAS/7C,MAAM/O,SAASif,EAAKlf,MAAOorB,OACJ,KAArB3rB,KAAK6qB,aACZ4gC,EAAel8C,MAAM/O,SAASif,EAAKlf,MAAOorB,MAMnDw+B,GACTv7C,GAOEw8C,GAAsB,WACtB,QAASA,MAaT,MAPAA,GAAKC,iBAAmB,WACpB,MAAO,uCAAuChpB,QAAQ,QAAS,SAAU9+B,GACrE,GAAI25C,GAAyB,GAAhBrqC,KAAKqqC,SAAgB,CAElC,QADmB,MAAN35C,EAAY25C,EAAmB,EAATA,EAAe,GACpCt9C,SAAS,OAGxBwrD,KCvRPx2C,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,uBAA2BC,QAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI1K,KAAK0K,GAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASK,KAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,GAAIyV,QAgBnFy1C,GAAgC,SAAUr1C,GAM1C,QAASq1C,GAAerrC,EAAMC,GAC1B,GAAI/J,GAAQF,EAAO3V,KAAKG,OAASA,IAKjC0V,GAAMm2C,WAAY,EAKlBn2C,EAAMo2C,UAAY,GAAIzsC,GAAO,EAAG,GAKhC3J,EAAMq2C,sBAAwB,GAAI/jD,EAClC,IAAIsC,GAAO,IAmBX,OAlBIkV,aAAgBM,GAChBxV,EAAOkV,EAEFA,YAAgBF,KACrBhV,EAAO,GAAIwV,GAAU,EAAG,EAAGN,EAAKlW,MAAOkW,EAAKjW,SAEnC,OAATkW,GAAiBA,YAAgBusC,MACjCt2C,EAAMu2C,MAAQxsC,GAElB/J,EAAMw2C,YAAc,GAAI32C,GACxBG,EAAMy2C,WAAa,GAAIhC,IACvBz0C,EAAMw2C,YAAY38C,MAAM/O,SAASkV,EAAMq2C,sBAAsB3jD,UAAWsN,EAAMy2C,YAC9Ez2C,EAAM02C,OAAO9hD,GACboL,EAAM22C,sBACO,OAAT5sC,GAAiBA,YAAgBusC,MACjCt2C,EAAMu2C,MAAQxsC,EACd/J,EAAMypB,SAASj2B,WAAauW,EAAKlE,SAASrS,YAEvCwM,EAqNX,MA9PAd,IAAUi2C,EAAgBr1C,GAmD1Bq1C,EAAelrD,UAAUob,WAAa,SAAUwK,EAAWsb,EAAMZ,EAAU/yB,GACvElN,KAAKisD,MAAQprB,EACb7gC,KAAK8rD,UAAY7rB,EACjBjgC,KAAKssD,sBAAwBp/C,EAC7BlN,KAAKusD,gBAAkBvsD,KAAKksD,YAC5BlsD,KAAKksD,YAAc,GAAI32C,EACvB,IAAIi3C,GAAe,GAAIrC,GAIvB,OAHAnqD,MAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsB3jD,UAAWokD,GACtExsD,KAAKosD,OAAO7mC,GACZvlB,KAAKqsD,sBACErsD,MAEXN,OAAOuC,eAAe4oD,EAAelrD,UAAW,YAM5CuC,IAAK,WACD,MAAOlC,MAAK8rD,WAEhB1pD,IAAK,SAAU7B,GACXP,KAAK8rD,UAAYvrD,GAErB8B,YAAY,EACZC,cAAc,IAMlBuoD,EAAelrD,UAAU0sD,oBAAsB,WAS3C,GARArsD,KAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsBn+C,YAAa,GAAIkE,GAAU,IAEtF9R,KAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsBl+C,UAAW,GAAIiE,GAAU,IAEpF9R,KAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsBj+C,WAAY,GAAIgE,GAAU,IAErF9R,KAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsBh+C,MAAO,GAAI+D,GAAW9R,KAAKysD,KAAKxsC,MAAQjgB,KAAKysD,KAAK1sC,OAC7G/f,KAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsB/9C,MAAO,GAAI8D,GAAW9R,KAAKysD,KAAKvsC,OAASlgB,KAAKysD,KAAKzsC,MAC3F,MAAdhgB,KAAKisD,OAAqC,MAAlBjsD,KAAK8rD,UAC9B,GAAmC,MAA9B9rD,KAAKssD,2BAAuE,KAA/BtsD,KAAKssD,sBAAwC,CAEvFI,EAAiB1sD,KAAKisD,MAAMvqD,KAAK6H,OAASvJ,KAAKulB,UAAU7jB,KAAK6H,OAAWvJ,KAAK8rD,UAAY,CAE9F9rD,MAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsB7+C,OAAQ,GAAI4F,IAAU,EAAG,EAAG,EAAG,EAAG9S,KAAK8rD,UAAUp5C,EAAGg6C,SAE9G,CACD,GAAIA,GAAgB,EAEhBp5C,EAAWtT,KAAKssD,sBAAsBp/C,OAAOoG,QAE7Co5C,GADC1sD,KAAKisD,MAAMvqD,KAAK6H,OAASvJ,KAAKulB,UAAU7jB,KAAK6H,OAC7BvJ,KAAKssD,sBAAsBp/C,OAAO2vB,QAC5C78B,KAAKisD,MAAMvqD,KAAK6H,OAASvJ,KAAKulB,UAAU7jB,KAAK6H,OAGlCvJ,KAAKisD,MAAMvqD,KAAK6H,OAASvJ,KAAKulB,UAAU7jB,KAAK6H,OAAUvJ,KAAKssD,sBAAsBp/C,OAAO2vB,QAE/G78B,KAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsB7+C,OAAQ,GAAI4F,IACnEQ,EAAS,GAAIA,EAAS,GAAIA,EAAS,GAAIA,EAAS,GAAIA,EAAS,GAAIo5C,OASjF7B,EAAelrD,UAAUysD,OAAS,SAAUO,GACxC3sD,KAAKysD,KAAOE,CACZ,IAAIriD,GAAO,GAAIiV,GAAWvf,KAAKysD,KAAK1sC,KAAM/f,KAAKysD,KAAKzsC,IAAKhgB,KAAKysD,KAAKxsC,MAAOjgB,KAAKysD,KAAKvsC,OACpFlgB,MAAKksD,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsB9gD,KAAM6H,EAASwB,cAAchK,KAE5F5K,OAAOuC,eAAe4oD,EAAelrD,UAAW,aAM5CuC,IAAK,WACD,MAAOlC,MAAKysD,MAEhBpqD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe4oD,EAAelrD,UAAW,QAK5CuC,IAAK,WACD,MAAOlC,MAAKysD,KAAK/qD,MAErBW,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe4oD,EAAelrD,UAAW,YAI5CuC,IAAK,WACD,GAAuB,MAAlBlC,KAAK4sD,eAA+C,KAAnB5sD,KAAK4sD,UAA4B,CACnE,GAAI7C,GAAK,GAAIC,IAAwBhqD,MACjCod,EAAI,GAAI6sC,IAAYjqD,KAAK0B,KAAMqoD,EAAI/pD,KAAKksD,YAC5ClsD,MAAK4sD,UAAYxvC,EACjBpd,KAAKmsD,WAAansD,KAAK2gB,eACvB3gB,KAAK4sD,UAAU1C,wBAEnB,MAAOlqD,MAAK4sD,WAEhBvqD,YAAY,EACZC,cAAc,IAMlBuoD,EAAelrD,UAAUghB,aAAe,WACpC,MAAO3gB,MAAKmsD,YAEhBzsD,OAAOuC,eAAe4oD,EAAelrD,UAAW,YAK5CuC,IAAK,WACD,MAAOlC,MAAK6rD,WAEhBzpD,IAAK,SAAU7B,GACXP,KAAK6rD,UAAYtrD,GAErB8B,YAAY,EACZC,cAAc,IAOlBuoD,EAAelrD,UAAUkD,MAAQ,WAC7B,GAAI4d,GAAQzgB,KAAK+a,WAAW/a,KAAKulB,UAAWvlB,KAAKisD,MAAOjsD,KAAKigC,SAAUjgC,KAAKssD,sBAQ5E,OAPmC,OAA9BtsD,KAAKssD,uBAAwE,MAArCtsD,KAAKssD,sBAAsBp/C,QAEpEuT,EAAMyrC,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsB7+C,OAAQ,GAAI4F,GAAS9S,KAAKssD,sBAAsBp/C,OAAOoG,WAEvHmN,EAAMyrC,YAAYz2C,KAAOzV,KAAKusD,gBAAgB92C,KAC9CgL,EAAM0rC,WAAa,GAAIhC,IAAanqD,KAAKmsD,YACzC1rC,EAAMyrC,YAAY38C,MAAM/O,SAASR,KAAK+rD,sBAAsB3jD,UAAWqY,EAAM0rC,YACtE1rC,GAWXoqC,EAAelrD,UAAU6gB,eAAiB,SAAUC,EAAOC,EAAcC,EAAcC,EAAaC,GAChG,GAAIC,IAAO,CACX,IAAIL,IAAUzgB,KAAM,CAEhB0gB,EAAa2Y,cAAc,UAAWr5B,KAAK6rD,UAE3C,IACIgB,GADalsC,EAAaA,eACP2oC,QAAQtpD,KAC/B0gB,GAAaga,qBAAqB,KAAMmyB,EAAO7sD,KAAK6rD,WACpD/qC,GAAO,MAEN,IAAIL,YAAiBoqC,GAAgB,CAEtCnqC,EAAa2Y,cAAc,UAAWr5B,KAAK6rD,UAE3C,IACIxC,GADY1oC,EAAaA,eACN2oC,QAAQtpD,KAC/B0gB,GAAaga,qBAAqB,KAAM2uB,EAAQrpD,KAAK6rD,WACrD/qC,GAAO,EAEX,MAAOA,IAOX+pC,EAAelrD,UAAUqhB,aAAe,SAAUN,KAIlDhhB,OAAOuC,eAAe4oD,EAAelrD,UAAW,WAO5CuC,IAAK,WACD,MAAOlC,MAAKksD,aAEhB7pD,YAAY,EACZC,cAAc,IAEXuoD,GACTzqC,GCnOE6pC,GAA6B,WAC7B,QAASA,GAAYzqC,EAAMC,EAAMC,GAK7B1f,KAAK6gB,kBAAoBvE,gBAAckC,IAKvCxe,KAAK8sD,0BAA4B7wC,oBAAkB8wC,KAKnD/sD,KAAKgtD,yBAA2B,EAKhChtD,KAAKitD,oBAAsB,EAK3BjtD,KAAKktD,oBAAsB,IAK3BltD,KAAKmtD,cAAgB,GAAIlvB,IAMzBj+B,KAAKotD,gBAAiB,EAMtBptD,KAAKqtD,eAAgB,EAMrBrtD,KAAK6+C,UAAW,EAMhB7+C,KAAKstD,iBAAkB,EAMvBttD,KAAKutD,OAAQ,EAMbvtD,KAAKwtD,WAAY,EAMjBxtD,KAAKytD,kBAAmB,EAKxBztD,KAAK0tD,iBAAmB,GAAIpuC,GAAM,EAAG,GAKrCtf,KAAK2tD,mBAAoB,EAKzB3tD,KAAKsP,qBAAuB,GAAItH,GAMhChI,KAAK6kB,wBAAyB,EAM9B7kB,KAAK4tD,iBAAkB,EAMvB5tD,KAAK6tD,oBAAsB,MAAO,OAAQ,YAAa,WAMvD7tD,KAAK8tD,kBAAmB,EAKxB9tD,KAAK+tD,iBAML/tD,KAAKguD,mBAAoB,EAMzBhuD,KAAKiuD,wBAA0B,KAK/BjuD,KAAKkuD,eAAiB,EACtBluD,KAAK2gB,aAAelB,EACpBzf,KAAKmuD,WAAa3uC,EAEdxf,KAAKouD,gBADL1uC,YAAgBmY,IACOnY,EAGA,GAAImY,IAAgBnY,GAE/C1f,KAAK+a,aAgiDT,MA9hDArb,QAAOuC,eAAegoD,EAAYtqD,UAAW,sBAMzCuC,IAAK,WACD,MAAOlC,MAAKquD,uBAEhBhsD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,QAKzCuC,IAAK,WACD,MAAOlC,MAAKmuD,YAEhB9rD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,2BAKzCuC,IAAK,WAID,WAHoD,KAAzClC,KAAKsuD,kCACZtuD,KAAKsuD,gCAAkC,GAEpCtuD,KAAKsuD,iCAEhBlsD,IAAK,SAAU7B,GACXP,KAAKsuD,gCAAkC/tD,GAE3C8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,cAKzCuC,IAAK,WACD,MAAO,IAAIod,GAAMtf,KAAKuuD,WAAWjlD,MAAOtJ,KAAKuuD,WAAWhlD,SAE5DlH,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,cAKzCuC,IAAK,WACD,MAAOlC,MAAK6gB,mBAEhBze,IAAK,SAAU7B,GACXP,KAAK6gB,kBAAoBtgB,GAE7B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,gBAKzCuC,IAAK,WACD,MAAOlC,MAAKouD,iBAEhB/rD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,UAKzCuC,IAAK,WAID,MAHiC,OAA7BlC,KAAKy8B,uBACLz8B,KAAKy8B,qBAAuB,GAAIH,KAE7Bt8B,KAAKy8B,sBAEhBp6B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,SAKzCuC,IAAK,WACD,MAAOlC,MAAKwuD,WAEhBnsD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,QAKzCuC,IAAK,WACD,MAAOlC,MAAKwuD,UAAU3tB,MAE1Bx+B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAegoD,EAAYtqD,UAAW,mBACzCuC,IAAK,WAID,MAHoC,OAAhClC,KAAKiuD,6BAA2E,KAAjCjuD,KAAKiuD,0BACpDjuD,KAAKiuD,wBAA0B,GAAIpvB,KAEhC7+B,KAAKiuD,yBAEhB5rD,YAAY,EACZC,cAAc,IAOlB2nD,EAAYtqD,UAAUob,WAAa,WAC/B/a,KAAKyuD,aAAc,EACnBzuD,KAAK87B,WAAa,KAClB97B,KAAK0uD,aAAe,KACpB1uD,KAAK2uD,YAAc,KACnB3uD,KAAK6gB,kBAAoBvE,gBAAckC,IACvCxe,KAAK4uD,gBAAiB,EACtB5uD,KAAKy8B,qBAAuB,KAC5Bz8B,KAAK8sD,2BAA8B,EACnC9sD,KAAKgtD,0BAA4B,EACjChtD,KAAKitD,qBAAuB,EAC5BjtD,KAAKktD,qBAAuB,IAE5BltD,KAAK6uD,oBAAsB,KAC3B7uD,KAAKuuD,WAAa,GAAIhvC,GAAW,GAAIF,GAAO,EAAG,GAAIrf,KAAK0B,MACxD1B,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAcjvB,MAE5E+rB,EAAYtqD,UAAUmvD,gBAAkB,SAAUC,EAAU9uB,EAAUv+B,GAClE,OAAoB,KAATA,EAAsB,CAC7B,GAAgB,MAAZqtD,EACA,KAAMz4C,OAAM,iCAEhBtW,MAAK8uD,gBAAgBC,EAAU9uB,EAAU8uB,EAASrtD,UAEjD,CAKD,GAAgB,MAAZqtD,EACA,KAAMz4C,OAAM,iCAEhB,IAAIymB,GAAUgyB,EAASzlD,MAAQ,EAAK5H,EAAK4H,MAAQylD,EAASzlD,MAAQ,EAC9D0zB,EAAU+xB,EAASxlD,OAAS,EAAK7H,EAAK6H,OAASwlD,EAASxlD,OAAS,EACjEylD,IAA0B,IAAXjyB,GAA2B,IAAXC,GAE/B5rB,EAAQpR,KAAKyC,OAEbyK,EAAS,GAAIovB,GACK,OAAlBt8B,KAAKwuD,WACLxuD,KAAKivD,sBAAsBhvB,EAASvtB,EAAGutB,EAASttB,EAAIjR,EAAK6H,OAAQ2D,GAEjE8hD,GACAhvD,KAAKkvD,kBAAkBnyB,EAAQC,EAAQ9vB,GAE3ClN,KAAKouD,gBAAgB5oD,UAAU0H,EAE/B,IACIm8C,GADYrpD,KAAK2gB,aAAaA,eACX2oC,QAAQyF,EAC/B/uD,MAAKouD,gBAAgBp2B,cAAcqxB,GAEnCrpD,KAAKw/B,QAAQpuB,EAEb,IAAIgM,GAAI2xC,EAAS5vB,QACjB,IAAS,MAAL/hB,EACA,IAAK,GAAI5N,GAAQ,EAAGA,EAAQ4N,EAAE4hB,gBAAgBA,gBAAgBh+B,OAAQwO,IAAS,CAC3E,GAAIuvB,GAAY3hB,EAAE4hB,gBAAgBA,gBAAgBxvB,GAC9C2/C,EAAc,GAAI9vC,GAAO0f,EAAUkB,SAASvtB,EAAIutB,EAASvtB,EAAGqsB,EAAUkB,SAASttB,EAAIstB,EAASttB,GAC5FutB,EAAkC,GAAvB6uB,EAASrtD,KAAK4H,MAAa,EAAI5H,EAAK4H,MAAQylD,EAASrtD,KAAK4H,MACrE62B,EAAmC,GAAxB4uB,EAASrtD,KAAK6H,OAAc,EAAI7H,EAAK6H,OAASwlD,EAASrtD,KAAK6H,MAC3EvJ,MAAKg/B,gBAAgBvrB,IAAI,GAAI+sB,IAAsBzB,EAAUgC,MAAOouB,EAAajvB,EAAUC,IAC3FngC,KAAK6gC,KAAKhyB,WAAWoB,SAG7BjQ,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAchvB,QACxEn+B,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAc/uB,QACxEp+B,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAc9uB,QACxEr+B,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAc92C,QAOhF4zC,EAAYtqD,UAAUyvD,WAAa,SAAU5vC,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,EAAMoqC,EAAMC,GACzF,GAAoB,gBAAT9vC,IAAqBC,YAAgBsJ,KAAYrJ,YAAgBmb,KAAmB,OAATnb,KAAmBC,YAAgBS,IAAqB,OAATT,IAAkC,gBAAToF,IAAqC,gBAATC,KAAsBC,YAAgBnD,IAA4B,OAATmD,QAAkC,KAAToqC,EACxQrvD,KAAK6kB,wBAAyB,EAC9B7kB,KAAKovD,WAAW5vC,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAOhlB,KAAKklB,WAAW5b,MAAQyb,EAAO,EAAGE,OAEtF,CACD,GAAI+E,GAAWtK,EACX6vC,EAAW5vC,EACX6vC,EAAWzqC,EACX0qC,EAAWzqC,EACX0qC,EAAWzqC,EACX0qC,EAAWN,EACXO,EAAWN,EAEXrsD,GADW,GAAI2hB,IACGE,OAAOtF,EAAMC,EAAMmwC,EAAU,GAAItwC,GAAMowC,EAAUC,GAAW3vD,KAAK6kB,uBAAwB7kB,KAAKklB,WACpH,KAAKjiB,EAAO4lB,MAAO,CACf,GAAIve,GAAOtK,KAAK6vD,4BAA4B5sD,EAAOilB,WAAYsnC,EAAUC,EAAUG,EAC/EF,IAAY,IACZF,EAAWllD,EAAKoI,EAChBg9C,EAAWplD,EAAKhB,OAEhBqmD,GAAY,IACZF,EAAWnlD,EAAKqI,EAChBg9C,EAAWrlD,EAAKf,QAEpBvJ,KAAK8vD,uBAAuB7sD,EAAQwc,EAAMuK,EAAUulC,EAAU,GAAIhwC,GAAWiwC,EAAUC,EAAUC,EAAUC,GAAWC,GACtH5vD,KAAKstD,iBAAkB,EACvBttD,KAAK0tD,iBAAmB,GAAIpuC,GAAM,EAAG,GAEzCtf,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAc92C,MACxErW,KAAKotD,gBAAiB,EACtBptD,KAAKquD,sBAAwBprD,EAC7BjD,KAAKqtD,eAAgB,IAG7BpD,EAAYtqD,UAAUowD,SAAW,SAAUvwC,EAAMC,EAAMC,EAAMC,EAAMoF,GAC/D,GAAItF,YAAgBJ,GAAQ,CACxB,GAAIyK,GAAWrK,EACXuK,EAAWtK,CACf1f,MAAK+vD,SAASvwC,EAAMsK,EAASpX,EAAGoX,EAASnX,EAAGqX,EAAStX,EAAGsX,EAASrX,OAEhE,CACD,GAAImX,GAAWrK,EACXuK,EAAWtK,EACX6vC,EAAW5vC,EACX6vC,EAAWzqC,CACf/kB,MAAKgwD,aAAaxwC,EAAM,KAAM,KAC9B,IAAIrI,GAAKnX,KAAK0gB,YACdvJ,GAAGvS,UAAUklB,EAAUE,GACvB7S,EAAGtS,kBAAkB0qD,EAAUC,GAC/Br4C,EAAGmhB,aACHt4B,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAcjvB,OAIhF+rB,EAAYtqD,UAAUswD,cAAgB,SAAUzwC,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GAC1E,GAAIxF,YAAgBqb,KAA0B,gBAATpb,GAAmB,CAChDuK,EAAWtK,CACf1f,MAAKiwD,cAAczwC,EAAM,KAAMC,EAAMuK,EAAUrK,EAAMoF,OAEpD,IAAIvF,YAAgBY,IAA4B,gBAATX,GAAmB,CACvDuK,EAAWtK,CACf1f,MAAKiwD,cAAc,KAAMzwC,EAAMC,EAAMuK,EAAUrK,EAAMoF,OAEpD,CACD,GAAIiF,GAAWtK,EACX6vC,EAAW5vC,EACX6vC,EAAWzqC,EACX0qC,EAAWzqC,CACf,IAAKvF,YAAgBorC,IAAiB,CAClC7qD,KAAK4uD,gBAAiB,CACtB,IAAIsB,GAAWlwD,KAAKkN,OAAOA,OAAO0vB,QAAU5S,EACxCmmC,MAAU,EAEVA,GADgB,MAAdnwD,KAAKowD,OAAsC,MAAnBpwD,KAAKowD,MAAMvvB,KACzB7gC,KAAKowD,MAAMvvB,KAAKn/B,KAAK6H,OAASvJ,KAAKkN,OAAOA,OAAO2vB,QAAW0yB,EAG5DvvD,KAAKklB,WAAW3b,OAASvJ,KAAKkN,OAAOA,OAAO2vB,QAAW0yB,EAEvE,EAAOtvB,SAAW,GAAI5gB,GAAO6wC,EAASC,GACtC,EAAOhxB,SAASj2B,WAAalJ,KAAKkJ,eAE5BuW,aAAgB8oC,MACtB9oC,EAAKvW,WAAalJ,KAAKkJ,WAEvBuW,aAAgBY,IAAiBZ,EAAKa,MAAMhC,UAC5CmB,EAAO,KAEX,IAAI6Z,GAAW9Z,EACXsK,EAAWrK,CACfzf,MAAKgwD,aAAa12B,EAAUxP,EAAU,MACtC9pB,KAAK0gB,aAAatb,gBAAgB4kB,EAAUulC,EAAUC,EAAUC,GAChEzvD,KAAKqwD,eAAe/2B,EAAUxP,GAAU,KAGhDmgC,EAAYtqD,UAAU0wD,eAAiB,SAAU7wC,EAAMC,EAAMC,EAAMC,GAC/D,GAAoB,iBAATD,GAAoB,CAC3B,GAAIsK,GAAWtK,CACf1f,MAAKqwD,eAAe7wC,EAAMC,EAAMpD,cAAYi0C,QAAStmC,OAEpD,CACD,GAEIumC,GAAgB,MAAR/wC,EACRgxC,EAAkB,MAAR/wC,EACVgxC,GAJAzmC,EAAWtK,KAIerD,cAAYq0C,SACtCH,IAASC,EACTxwD,KAAK0gB,aAAawX,eAAeu4B,GAE3BF,GAAUC,EAGXD,EACLvwD,KAAK0gB,aAAa4X,aAGlBt4B,KAAK0gB,aAAayX,SAASs4B,GAN3BzwD,KAAK0gB,aAAajZ,YAW9BwiD,EAAYtqD,UAAUgxD,UAAY,SAAUnxC,EAAMC,EAAMC,EAAMC,EAAMoF,GAChE,GAAoB,gBAATtF,IAAqC,gBAATC,QAAqC,KAATC,EAAsB,CACrF,GAAIje,GAAO8d,EAAKoxC,iBAChB5wD,MAAK2wD,UAAUnxC,EAAMC,EAAMC,EAAMhe,EAAK4H,MAAO5H,EAAK6H,YAEjD,CACD,GAAIugB,GAAWrK,EACXuK,EAAWtK,EAEX8vC,EAAWzqC,CACfvF,GAAK/c,MACL,IAAIyK,GAAS,GAAIovB,GACjBt8B,MAAKivD,sBAAsBnlC,EAAWE,EAAWwlC,EAAWtiD,GAC5DlN,KAAKkvD,kBAAkBvvC,EAAMoF,EAAM7X,GACnClN,KAAKouD,gBAAgBzrD,MAAM,KAC3B3C,KAAKouD,gBAAgB5oD,UAAU0H,EAE/B,IAAI9E,GAAYpI,KAAK2gB,aAAaA,mBACJ,KAAnB3gB,KAAKwuD,WAA0C,MAAbxuD,KAAK6gC,OAC9Cz4B,EAAUmT,SAAWvb,KAAK6gC,KAAKtlB,SAEnC,IAAIs1C,GAASzoD,EAAUkhD,QAAQ9pC,OACD,KAAnBxf,KAAKwuD,WACZxuD,KAAK6gC,KAAKiwB,aAAa1oD,GAE3BpI,KAAKouD,gBAAgBp2B,cAAc64B,GACnC7wD,KAAKouD,gBAAgBzrD,MAAMc,EAAU6B,cACrCtF,KAAKouD,gBAAgBzrD,MAAMc,EAAUO,QACrC,IAAI+sD,GAAW/wD,KAAK2gB,aAAaA,cACjCowC,GAAS/F,oBAAoBhrD,KAAKmtD,cAAchvB,QAChD4yB,EAAS/F,oBAAoBhrD,KAAKmtD,cAAc/uB,QAChD2yB,EAAS/F,oBAAoBhrD,KAAKmtD,cAAc9uB,QAChD0yB,EAAS/F,oBAAoBhrD,KAAKmtD,cAAc92C,QASxD4zC,EAAYtqD,UAAUqxD,cAAgB,SAAUC,EAAWhuD,EAAQ0F,EAAMuoD,EAAiB9rC,GACtF,GAAI7Q,EACJ,KAAKtR,EAAO4lB,OAASooC,EAAYhuD,EAAOkuD,WAAaF,GAAa,EAAG,CACjE,GAAIntC,GAAO7gB,EAAO0iB,MAAMsrC,GAEpBt+C,EADS3S,KAAKoxD,0BAA0BnuD,EAAOilB,WAAW3e,OAAQ2nD,EAAgB3nD,OAAQ6b,GAC7E8rC,EAAgBv+C,EAAK1P,EAAOulB,WAAayoC,EACtDtqC,EAAY7C,EAAKxa,MACjB+nD,EAASrxD,KAAKsxD,wBAAwB3qC,EAAWuqC,EAAgB5nD,MAAO8b,GACxEQ,EAAa5lB,KAAK6lB,cAAc/B,EAAMsB,EAAQ8rC,EAAgC,IAAdD,EACpEI,IAAYrxD,KAAK2oB,YAAYvD,GAAwB,EAAbQ,CACxC,IAAIlT,GAAIw+C,EAAgBx+C,EAAI2+C,EAExB/nD,EAAUtJ,KAAKuxD,cAAcztC,EAAMotC,EAAgB5nD,MAAO8b,GAAoC8rC,EAAgB5nD,MAAQsc,EAAjDe,EAAYf,EACjFrc,EAAStG,EAAOulB,UACpBjU,GAAS,GAAIgL,GAAW7M,EAAGC,EAAGrJ,EAAOC,OAGrCgL,GAAS,GAAIgL,GAAW,EAAG,EAAG,EAAG,EAErC,OAAOhL,IAMX01C,EAAYtqD,UAAUkwD,4BAA8B,SAAU2B,EAAU9+C,EAAGC,EAAGyS,GAC1E,GAAIqsC,GAAoB,GAAIlyC,GAAW7M,EAAGC,EAAG6+C,EAASloD,MAAOkoD,EAASloD,MACtE,IAAc,MAAV8b,EAAgB,CAChB,OAAQA,EAAOssC,WACX,IAAK11C,oBAAiB21C,OAClBF,EAAkB/+C,GAAK++C,EAAkBnoD,MAAQ,CACjD,MACJ,KAAK0S,oBAAiB41C,MAClBH,EAAkB/+C,GAAK++C,EAAkBnoD,MAGjD,OAAQ8b,EAAOysC,eACX,IAAK91C,wBAAqB+1C,OACtBL,EAAkB9+C,GAAK8+C,EAAkBloD,OAAS,CAClD,MACJ,KAAKwS,wBAAqBg2C,OACtBN,EAAkB9+C,GAAK8+C,EAAkBloD,QAIrD,MAAOkoD,IAMXxH,EAAYtqD,UAAUqyD,SAAW,SAAU5B,GACvCpwD,KAAKwuD,UAAY4B,CACjB,IAAIvvB,GAAOuvB,EAAMvvB,IACL,OAARA,OAAgC,KAATA,IACvBA,EAAKvwB,UAAYtQ,KAAKiyD,WAQ9BhI,EAAYtqD,UAAUsyD,SAAW,SAAUpxB,GACvC,GAAqC,MAAjCA,EAAK1B,SAASH,gBACd,IAAK,GAAI97B,GAAI,EAAGA,EAAI29B,EAAK1B,SAASH,gBAAgBA,gBAAgBh+B,OAAQkC,IAAK,CAC3E,GAAI67B,GAAY8B,EAAK1B,SAASH,gBAAgBA,gBAAgB97B,EAC9D67B,GAAUgC,MAAMmxB,YAAYrxB,EAAK1B,SAAUJ,EAAUkB,SAAUlB,EAAUmB,SAAUnB,EAAUoB,YAQzG8pB,EAAYtqD,UAAUmwD,uBAAyB,SAAU7sD,EAAQ0F,EAAMuzB,EAAKzb,EAAOywC,EAAiB9rC,GAChG,GAAKniB,EAAO4lB,MAsCR,KAAM,IAAIvS,OAAM,+BArChBtW,MAAKmyD,oBAAoBxpD,EAAMuzB,EAAKzb,EAAO2E,EAAQ8rC,EAEnD,IAAI74B,GAAyB,MAAVjT,EAAkBA,EAAOgtC,wBAA0B,GAClE/5B,KAAgBr4B,KAAKktD,qBAAwBltD,KAAKstD,kBAClDttD,KAAKouD,gBAAgB3nD,eAAe4xB,GACpCr4B,KAAKktD,oBAAsB70B,EAE/B,IAAI9uB,GAAoB,MAAV6b,GAAyC,IAAvBA,EAAOoB,YAAqB7d,EAAKY,OAAS6b,EAAOoB,YAAc7d,EAAKY,OAEhGuiC,EAAQ,CACZA,GAF2B,MAAV1mB,GAAkBA,EAAO61B,iBAAmB55B,oBAAkB65B,UAEzD3xC,GAAUZ,EAAKY,OAASZ,EAAK0gB,QAAQwxB,WAAWz1B,IAAY7b,EAASZ,EAAK0gB,QAAQuxB,UAAUx1B,GAClHplB,KAAK8rC,MAAQA,EACb9rC,KAAKouD,gBAAgB31B,cAAcy4B,EAAgBx+C,EAAGw+C,EAAgBv+C,EAAIm5B,GAC1E9rC,KAAKouD,gBAAgBt1B,YAAYvvB,EAGjC,KAAK,GAFD8oD,GAAe,EACfC,EAAkB,GACbpvD,EAAI,EAAGA,EAAID,EAAO0iB,MAAM3kB,OAAQkC,IAErC,GADAmvD,GAAgBpvD,EAAOulB,WAClB0oC,EAAgBv+C,EAAI0/C,EAAgBryD,KAAKklB,WAAW3b,OAAQ,CAC7DvJ,KAAKkuD,cAAgBhrD,CACrB,OAGR,IAAK,GAAI6wC,GAAI/zC,KAAKkuD,cAAgBna,EAAI9wC,EAAO0iB,MAAM3kB,QAAU+yC,GAAK,EAAIA,IAClEue,GAAmBrvD,EAAO0iB,MAAMouB,GAAG19B,IAEvC,IAAI9B,GAAS,GAAIgL,GAAW2xC,EAAgBx+C,EAAGw+C,EAAgBv+C,EAAGu+C,EAAgB5nD,MAAO4nD,EAAgB3nD,OACzGvJ,MAAKuyD,iBAAiBtvD,EAAQ0F,EAAMyc,EAAQ8rC,GAC5ClxD,KAAKwyD,uBAAuBt2B,EAAKzb,EAAOxd,EAAQ0F,EAAM4L,EAAQ6Q,GAC9DplB,KAAKwtD,WAAY,EACjBxtD,KAAKqtD,eAAgB,GACO,IAAxBrtD,KAAKkuD,eACMluD,KAAKyyD,cACXtzB,SAASiwB,WAAWkD,EAAiB3pD,EAAMuzB,EAAKzb,EAAOywC,EAAgBx+C,EAAG,EAAGw+C,EAAgB5nD,MAAO,EAAG8b,IAWxH6kC,EAAYtqD,UAAU8yD,YAAc,WAChC,GAAIC,GAAU1yD,KAAK8gC,YAAY4xB,QAE3BljD,EAAQkjD,EAAQpvD,QAAQtD,KAAK8gC,YAOjC,OANItxB,KAAUkjD,EAAQvqD,MAAQ,EACfuqD,EAAQj/C,MAGRi/C,EAAQC,WAAWnjD,EAAQ,IAI9Cy6C,EAAYtqD,UAAUizD,QAAU,SAAUrtC,EAAWkK,OAC7B,KAATA,EACPzvB,KAAK4yD,QAAQrtC,EAAWlJ,cAAYi0C,UAGpCtwD,KAAKouD,gBAAgBhpD,gBAAgBmgB,GACrCvlB,KAAKouD,gBAAgB7mD,SAAUkoB,IAASpT,cAAYq0C,aAO5DzG,EAAYtqD,UAAUwyD,oBAAsB,SAAUxpD,EAAMuzB,EAAKzb,EAAO2E,EAAQ7Q,GACxEkM,YAAiBoqC,KACjB7qD,KAAK4uD,gBAAiB,EACtBnuC,EAAM0e,SAASj2B,WAAalJ,KAAKkJ,YAE3BuX,YAAiB8nC,MACvBvoD,KAAK4uD,gBAAiB,EACtBnuC,EAAMvX,WAAalJ,KAAKkJ,WAE5B,IACI2pD,GAAK7yD,KAAK8yD,qBAAqB52B,EAAKzb,EAAO2E,EAC/CplB,MAAKgwD,aAAa9zB,EAAKzb,EAAO9X,EAAMyc,GACpCplB,KAAKouD,gBAAgB1pD,YACjB,IAAS1E,KAAK8sD,4BACd9sD,KAAKouD,gBAAgBr1B,qBAAqB85B,GAC1C7yD,KAAK8sD,0BAA4B+F,EAGrC,IAAIE,GAAgB,MAAV3tC,EAAkBA,EAAOoF,iBAAmB,CAClDuoC,KAAO/yD,KAAKgtD,0BAA6BhtD,KAAKstD,kBAC9CttD,KAAKouD,gBAAgBn1B,oBAAoB85B,GACzC/yD,KAAKgtD,yBAA2B+F,EAIpC,IAAIC,GAAgB,MAAV5tC,EAAkBA,EAAOqF,YAAc,CAC7CuoC,KAAOhzD,KAAKitD,sBACZjtD,KAAKouD,gBAAgBj1B,eAAe65B,GACpChzD,KAAKitD,oBAAsB+F,IAOnC/I,EAAYtqD,UAAUyxD,0BAA4B,SAAU6B,EAAYC,EAAc9tC,GAClF,GAAI0mB,GAAQ,CACZ,IAAIonB,GAAgB,GAAe,MAAV9tC,GAAkBA,EAAOysC,gBAAkB91C,uBAAqBuG,IACrF,OAAQ8C,EAAOysC,eACX,IAAK91C,wBAAqB+1C,OACtBhmB,GAASonB,EAAeD,GAAc,CACtC,MACJ,KAAKl3C,wBAAqBg2C,OACtBjmB,EAAQonB,EAAeD,EAInC,MAAOnnB,IAOXme,EAAYtqD,UAAU4yD,iBAAmB,SAAUtvD,EAAQ0F,EAAMyc,EAAQ8rC,GACrE,GAAIiC,GAAcnzD,KAAKoxD,0BAA0BnuD,EAAOilB,WAAW3e,OAAQ2nD,EAAgB3nD,OAAQ6b,EAC/E,KAAhB+tC,GACAnzD,KAAKouD,gBAAgB31B,cAAc,EAAG06B,EAM1C,KAAK,GAJDC,GAAUzqD,EACV+jC,EAAsB,MAAX0mB,GAAmBA,EAAQhZ,UAEtCz0B,GADoB,MAAXytC,GAAmBA,EAAQvX,YAC5B54C,EAAO0iB,OACVziB,EAAI,EAAGkR,EAAMuR,EAAM3kB,OAASkC,EAAIkR,GAAOlR,IAAMlD,KAAKkuD,cAAgBhrD,IAAK,CAC5E,GAAImwD,GAAW1tC,EAAMziB,GAEjByjB,GADO0sC,EAASh9C,KACJg9C,EAAS/pD,OACrBgqD,EAActzD,KAAKsxD,wBAAwB3qC,EAAWuqC,EAAgB5nD,MAAO8b,GAC7EQ,EAAa5lB,KAAK6lB,cAAcwtC,EAAUjuC,EAAQ8rC,EAAwB,IAANhuD,EAEpD,MADpBowD,GAAiBtzD,KAAK2oB,YAAYvD,GAAwB,EAAbQ,IACnB5lB,KAAKstD,iBAC3BttD,KAAKouD,gBAAgB31B,cAAc66B,EAAa,GAEhD5mB,EACA1sC,KAAKuzD,gBAAgBF,EAAUnC,EAAiBvoD,EAAMyc,GAGtDplB,KAAKwzD,cAAcH,EAAUnC,EAAiBvoD,EAAMyc,GAEpC,IAAhBkuC,GAAsBtzD,KAAKstD,iBAC3BttD,KAAKouD,gBAAgB31B,eAAe66B,EAAa,GAEjDtzD,KAAK6kB,wBAA0Bc,EAAM3kB,OAAS,IAC9ChB,KAAKouD,gBAAgB31B,eAAgBy4B,EAAkB,EAAE,GACzDA,EAAgBx+C,EAAI,EACpBw+C,EAAgB5nD,MAAQtJ,KAAKklB,WAAW5b,MACxCtJ,KAAK6kB,wBAAyB,EAC9B7kB,KAAK4tD,iBAAkB,GAG/B5tD,KAAK2gB,aAAaA,eAAeqqC,oBAAoBhrD,KAAKmtD,cAAc92C,MACpD,IAAhB88C,GACAnzD,KAAKouD,gBAAgB31B,cAAc,IAAK06B,EAAclwD,EAAOulB,aAEjExoB,KAAKouD,gBAAgBzpD,WAMzBslD,EAAYtqD,UAAU6zD,cAAgB,SAAUH,EAAUnC,EAAiBvoD,EAAMyc,GAC7EplB,KAAKyzD,YAAYJ,EAAUnC,EAAgB5nD,MAAO8b,EAClD,IAAI7kB,GAAQ,EACZ,KAAoC,IAAhC8yD,EAASh9C,KAAK/S,QAAQ,OAA+C,IAAhC+vD,EAASh9C,KAAK/S,QAAQ,KAC3D,IAAK,GAAIJ,GAAI,EAAGA,EAAImwD,EAASh9C,KAAKrV,OAAQkC,IACb,MAArBmwD,EAASh9C,KAAKnT,GACd3C,GAAS,MAEiB,MAArB8yD,EAASh9C,KAAKnT,GACnB3C,GAAS,MAGTA,GAAS8yD,EAASh9C,KAAKnT,EAIrB,MAAV3C,IACAA,EAAQ8yD,EAASh9C,KAErB,IAAIyN,GAAO,IAAMvjB,EAAQ,GACzBP,MAAKouD,gBAAgBh1B,iBAAiB,GAAIjhB,GAAU2L,KAMxDmmC,EAAYtqD,UAAU4zD,gBAAkB,SAAUF,EAAUnC,EAAiBvoD,EAAMyc,GAC/E,GAAItB,GAAOuvC,EAASh9C,KAEhBgxC,GADYgM,EAAS/pD,MACH,OAAX8b,OAAqC,KAAXA,GAA0BA,EAAOuD,aAClE+qC,EAA2B,OAAXtuC,OAAqC,KAAXA,IAAkD,IAAvBA,EAAOqF,aAAqBrF,EAAOssC,YAAc11C,mBAAiB23C,SACvIP,EAAUzqD,EACV8hB,EAAczqB,KAAKyzD,YAAYJ,EAAUnC,EAAgB5nD,MAAO8b,GAChEwuC,EAAY,GAAI1M,GACpB,IAAIG,GAAmB,OAAXjiC,OAAqC,KAAXA,GAA0BA,EAAO2iC,gBAAkBrrC,mBAAiBkG,KAAO,CAC7G,GAAIixC,GAAS,KACTC,EAAyB,OAAX1uC,OAAqC,KAAXA,GAA0BA,EAAOssC,YAAc11C,mBAAiB41C,MAQxG1J,EAAQ,IAIJA,IATJ2L,EAFW,OAAXzuC,OAAqC,KAAXA,GAA0BA,EAAO2iC,gBAAkBrrC,mBAAiBkG,KAErFgxC,EAAU9uC,OAAOhB,EAAMsvC,EAAUhuC,EAAO2iC,gBAAkBrrC,mBAAiBq3C,YAA6BL,EAActuC,GAGtHwuC,EAAU9uC,OAAOhB,EAAMsvC,EAASU,EAAYJ,EAActuC,IAG5DpkB,OAAS,EACD,OAAXokB,OAAqC,KAAXA,GAA0BA,EAAO2iC,gBAAkBrrC,mBAAiBkG,KAEtFgxC,EAAUpM,YAAY1jC,EAAMsvC,EAAUhuC,EAAO2iC,gBAAkBrrC,mBAAiBq3C,YAA6BL,EAActuC,GAG3HwuC,EAAUpM,YAAY1jC,EAAMsvC,EAASU,EAAYJ,EAActuC,IAIlEtB,GAEb9jB,KAAKg0D,kBAAkBH,EAAQ3L,EAAOkL,EAAShuC,EAAQqF,OAGvD,IAAIipC,EAAc,CACd,GAAIzwD,GAASjD,KAAKi0D,iBAAiBnwC,EAAMsvC,EAAS,MAC9CS,EAAS5wD,EAAOixD,OAChBhM,EAAQjlD,EAAOilD,KACnBloD,MAAKg0D,kBAAkBH,EAAQ3L,EAAOkL,EAAShuC,EAAQqF,OAEtD,CACD,GAAI0pC,GAAQn0D,KAAKo0D,iBAAiBtwC,EAAMsvC,GACpC7yD,EAAQP,KAAKq0D,iBAAiBF,EAClCn0D,MAAK0gB,aAAa0Y,iBAAiB74B,KAQ/C0pD,EAAYtqD,UAAUq0D,kBAAoB,SAAUH,EAAQ3L,EAAOv/C,EAAMyc,EAAQqF,GAE7E,GAAc,MAAVopC,EACA,KAAM,IAAIv9C,OAAM,mCAEpB,IAAa,MAAT4xC,EACA,KAAM,IAAI5xC,OAAM,kCAEpB,IAAY,MAAR3N,EACA,KAAM,IAAI2N,OAAM,iCAEpBtW,MAAK0gB,aAAa+X,eAClB,IAAI/lB,GAAI,EACJ4hD,EAAS,EACTxxC,EAAkB,EAClBwD,EAAkB,CACtB,KACmB,OAAXlB,OAAqC,KAAXA,IAC1BtC,EAAkBsC,EAAOtC,gBACzBwD,EAAkBlB,EAAOkB,gBACzBlB,EAAOtC,gBAAkB,EACzBsC,EAAOkB,gBAAkB,EAE7B,IAAIiuC,GAAa5rD,EAAKwxC,aAAaj3B,EAAgBpf,WAAYshB,GAAUqF,EACrED,EAA8B,MAAVpF,EAAkBA,EAAOoF,iBAAmB,CAEpE+pC,IAAc/pC,GADc,OAAXpF,OAAqC,KAAXA,GAA0C,IAAhBqF,EAAqBrF,EAAOqF,YAAc,EAE/G,KAAK,GAAIvnB,GAAI,EAAGA,EAAI2wD,EAAO7yD,OAAQkC,IAAK,CACpC,GAAIixD,GAAQN,EAAO3wD,GACf+gB,EAAOikC,EAAMhlD,GACbsxD,EAAa,CAIjB,IAHU,IAAN9hD,GACA1S,KAAK0gB,aAAa+X,cAAc/lB,EAAG,GAEnCuR,EAAKjjB,OAAS,EAAG,CACjBwzD,GAA+B7rD,EAAKkhB,cAAc5F,EAAMmB,GAAQ9b,MAChEkrD,GAAchqC,CACd,IAAIhoB,GAAMxC,KAAKq0D,iBAAiBF,EAChCn0D,MAAK0gB,aAAaiY,SAASn2B,GAE3BU,IAAM2wD,EAAO7yD,OAAS,IAEtBszD,GADA5hD,EAAI8hD,EAAaD,GAKrBD,EAAS,GACTt0D,KAAK0gB,aAAa+X,eAAe67B,EAAQ,WAI9B,OAAXlvC,OAAqC,KAAXA,IAC1BA,EAAOtC,gBAAkBA,EACzBsC,EAAOkB,gBAAkBA,KAOrC2jC,EAAYtqD,UAAUs0D,iBAAmB,SAAUnwC,EAAMsvC,EAASlL,GAC9D,GAAa,OAATpkC,EACA,KAAM,IAAIxN,OAAM,iCAEpB4xC,GAAQpkC,EAAK0O,MAAM,KAEnB,KAAK,GADD0hC,MACKhxD,EAAI,EAAGA,EAAIglD,EAAMlnD,OAAQkC,IAAK,CAEnC,GAAI+gB,GAAOikC,EAAMhlD,GACbixD,EAAQn0D,KAAKo0D,iBAAiBnwC,EAAMmvC,EACxCc,GAAOhxD,GAAKixD,EAEhB,OAASD,OAAQA,EAAQhM,MAAOA,IAKpC+B,EAAYtqD,UAAU00D,iBAAmB,SAAUF,GAC/C,GAAc,OAAVA,EACA,KAAM,IAAI79C,OAAM,kCAEpB,IAAI9T,GAAM,GAAI2V,GAAUg8C,EAGxB,OAFA3xD,GAAIiyD,WAAY,EAChBjyD,EAAI4W,OAASpB,eAAaC,cAAcoB,MACjC7W,GAKXynD,EAAYtqD,UAAUy0D,iBAAmB,SAAU/9C,EAAM+8C,GACrD,GAAIe,GAAQ,IACZ,IAAY,MAAR99C,EACA,KAAM,IAAIC,OAAM,iCAEpB,IAAe,MAAX88C,EACA,KAAM,IAAI98C,OAAM,oCAEpB,IAAI88C,EAAQvL,uBAAwBpM,IAAqB,CACrD,GAAIY,GAAY+W,EAAQvL,aAAaxL,SACrC+W,GAAQlU,WAAW7oC,GACnB89C,EAAQ9X,EAAUnC,cAAc7jC,EAChC,IAAI6C,GAAQf,EAAUyB,eAAeu6C,GAAO,EAC5CA,GAAQh8C,EAAU4B,aAAab,GAEnC,MAAOi7C,IAMXlK,EAAYtqD,UAAU8zD,YAAc,SAAUJ,EAAUqB,EAAatvC,GACjE,GAAItB,GAAOuvC,EAASh9C,KAChBsQ,EAAY0sC,EAAS/pD,MACrBioD,EAAgBvxD,KAAKuxD,cAAc8B,EAAUqB,EAAatvC,GAC1DuvC,EAA4B,MAAVvvC,GAAyC,IAAvBA,EAAOqF,YAC3CnH,EAAUJ,EAAgBwB,OAC1BkwC,EAAmB1xC,EAAgBG,cAAcS,EAAMR,GACvDgkC,EAAY,CAmBhB,OAlBIiK,IAEIoD,IACAhuC,GAAciuC,EAAmBxvC,EAAOqF,aAG5C68B,GADiBoN,EAAc/tC,GACNiuC,EACzB50D,KAAKouD,gBAAgBj1B,eAAemuB,IAIhCqN,EACA30D,KAAKouD,gBAAgBj1B,eAAe/T,EAAOqF,aAG3CzqB,KAAKouD,gBAAgBj1B,eAAe,GAGrCmuB,GAMX2C,EAAYtqD,UAAUwkC,MAAQ,SAAUziC,GACpC1B,KAAKmuD,WAAazsD,EAClB1B,KAAK0gB,aAAajf,QAClBzB,KAAK+a,aACL/a,KAAKkqD,yBAMTD,EAAYtqD,UAAU4xD,cAAgB,SAAU8B,EAAUqB,EAAatvC,GACnE,GAAItB,GAAOuvC,EAASh9C,KAChBsQ,EAAY0sC,EAAS/pD,MACrBurD,EAA0B,MAAVzvC,GAAkBA,EAAOssC,YAAc11C,mBAAiB23C,QACxEmB,EAAaJ,GAAe,GAAK/tC,EAAY+tC,EAC7CpxC,EAAUJ,EAAgBwB,OAE1BqwC,EADmB7xC,EAAgBG,cAAcS,EAAMR,GACvB,GAAKQ,EAAK,KAAOZ,EAAgBpf,WACjEkxD,GAAuB3B,EAASzsC,SAAWC,WAASe,aAAe,CAGvE,OADqBitC,IAAgBC,GAAaC,IAAcC,GAAsB5vC,EAAOssC,YAAc11C,mBAAiB23C,UAQhI1J,EAAYtqD,UAAU6yD,uBAAyB,SAAUt2B,EAAKzb,EAAOxd,EAAQ0F,EAAMuoD,EAAiB9rC,GAChG,GAAIzc,EAAKssD,WAAatsD,EAAKusD,UAAW,CAElC,GAAIC,GAAUn1D,KAAKo1D,2BAA2Bl5B,EAAKzb,EAAO9X,EAAMyc,EAChE,IAAe,MAAX+vC,EAAiB,CAEjB,GAAIE,GAASr1D,KAAKoxD,0BAA0BnuD,EAAOilB,WAAW3e,OAAQ2nD,EAAgB3nD,OAAQ6b,GAC1FkwC,EAAmB,CACvBA,GAAmBpE,EAAgBv+C,EAAI0iD,EAAS1sD,EAAK0gB,QAAQuxB,UAAUx1B,GAAU,IAAM+vC,EAAQ7rD,KAI/F,KAAK,GAHDisD,GAAmBrE,EAAgBv+C,EAAI0iD,EAAS1sD,EAAK0gB,QAAQC,UAAUlE,GAAU,EAAI,IAAM+vC,EAAQ7rD,MACnGqc,EAAQ1iB,EAAO0iB,MAEVziB,EAAI,EAAGkR,EAAMnR,EAAOkuD,UAAWjuD,EAAIkR,EAAKlR,IAAK,CAClD,GAAImwD,GAAW1tC,EAAMziB,GAEjByjB,GADO0sC,EAASh9C,KACJg9C,EAAS/pD,OACrB+nD,EAASrxD,KAAKsxD,wBAAwB3qC,EAAWuqC,EAAgB5nD,MAAO8b,GACxEQ,EAAa5lB,KAAK6lB,cAAcwtC,EAAUjuC,EAAQ8rC,EAAwB,IAANhuD,EACxEmuD,IAAYrxD,KAAK2oB,YAAYvD,GAAwB,EAAbQ,CACxC,IAAI4vC,GAAKtE,EAAgBx+C,EAAI2+C,EAEzBxzB,EAAO79B,KAAKuxD,cAAc8B,EAAUnC,EAAgB5nD,MAAO8b,GAAyCowC,EAAKtE,EAAgB5nD,MAAQsc,EAA3D4vC,EAAK7uC,EAAYf,CAE3F,IAAIjd,EAAKssD,UAAW,CACZtiD,EAAI2iD,CACRt1D,MAAK+vD,SAASoF,EAASK,EAAI7iD,EAAGkrB,EAAIlrB,GAClC2iD,GAAoBryD,EAAOulB,WAE/B,GAAI7f,EAAKusD,UAAW,CAChB,GAAIviD,GAAI4iD,CACRv1D,MAAK+vD,SAASoF,EAASK,EAAI7iD,EAAGkrB,EAAIlrB,GAClC4iD,GAAoBtyD,EAAOulB,WAE3BxoB,KAAK4tD,iBAAmBjoC,EAAM3kB,OAAS,IACvCkwD,EAAgBx+C,EAAI,EACpBw+C,EAAgB5nD,MAAQtJ,KAAKklB,WAAW5b,OAGhDtJ,KAAK4tD,iBAAkB,KAQnC3D,EAAYtqD,UAAUy1D,2BAA6B,SAAUl5B,EAAKzb,EAAO9X,EAAMyc,GAE3E,GAAIuB,GAAYhe,EAAK0gB,QAAQoX,QAAQrb,GAAU,GAC3C+vC,EAAU,IAQd,OANW,OAAPj5B,EACAi5B,EAAU,GAAIt6B,IAAOqB,EAAI5b,MAAOqG,GAElB,MAATlG,IACL00C,EAAU,GAAIt6B,IAAOpa,EAAOkG,IAEzBwuC,GAMXlL,EAAYtqD,UAAUmzD,qBAAuB,SAAU52B,EAAKzb,EAAO2E,GAC/D,GAAIytC,GAAK52C,oBAAkB2G,IAa3B,OAXIiwC,GADO,MAAP32B,GAAwB,MAATzb,EACVxE,oBAAkBw5C,WAEX,MAAPv5B,EACAjgB,oBAAkBy5C,OAGlBz5C,oBAAkB8wC,KAEb,MAAV3nC,GAAkBA,EAAO7d,WACzBsrD,GAAM52C,oBAAkB05C,UAErB9C,GAMX5I,EAAYtqD,UAAUkmB,cAAgB,SAAUwtC,EAAUjuC,EAAQwwC,EAAcvvC,GAC5E,GAAIT,GAAa,EACbiwC,GAAuBxC,EAASzsC,SAAWC,WAASC,oBAAsB,CAK9E,OAJc,OAAV1B,GAAkBywC,IAClBjwC,EAAa,EAAcR,EAAOtC,gBAAkBsC,EAAOkB,gBAC3DV,EAAcgwC,EAAatsD,MAAQ,EAAKuJ,KAAKJ,IAAImjD,EAAatsD,MAAOsc,GAAcA,GAEhFA,GAMXqkC,EAAYtqD,UAAU2xD,wBAA0B,SAAU3qC,EAAW+tC,EAAatvC,GAC9E,GAAI0mB,GAAQ,CACZ,IAAI4oB,GAAe,GAAe,MAAVtvC,GAAkBA,EAAOssC,YAAc11C,mBAAiB85C,KAC5E,OAAQ1wC,EAAOssC,WACX,IAAK11C,oBAAiB21C,OAClB7lB,GAAS4oB,EAAc/tC,GAAa,CACpC,MACJ,KAAK3K,oBAAiB41C,MAClB9lB,EAAQ4oB,EAAc/tC,EAIlC,MAAOmlB,IAMXme,EAAYtqD,UAAUgpB,YAAc,SAAUvD,GAC1C,GAAIiiC,GAAkB,OAAXjiC,OAAqC,KAAXA,GAA0BA,EAAOuD,WAMtE,OALe,QAAXvD,OAAqC,KAAXA,GACtBA,EAAO2iC,gBAAkBrrC,mBAAiBkG,UAAwC,KAAzBwC,EAAO2iC,gBAChEV,GAAM,GAGPA,GAEX4C,EAAYtqD,UAAUqwD,aAAe,SAAU9zB,EAAKzb,EAAO9X,EAAMyc,GAC7D,OAAsB,KAAXA,EACPplB,KAAKgwD,aAAa9zB,EAAKzb,EAAO9X,EAAM,UAEnC,CACG8X,YAAiB8nC,MACjBvoD,KAAK4uD,gBAAiB,EACtBnuC,EAAMvX,WAAalJ,KAAKkJ,YAExBuX,YAAiBoqC,MACjB7qD,KAAK4uD,gBAAiB,EACtBnuC,EAAM0e,SAASj2B,WAAalJ,KAAKkJ,WAGvB,QAAVuX,OAE8B,KAAnBzgB,KAAKwuD,WAA+C,MAAlBxuD,KAAKwuD,YACf,IAA3BxuD,KAAK2tD,oBACL3tD,KAAK+1D,eAAiB/1D,KAAKwuD,UAAU3tB,KAAKtlB,SAASrS,WACnDlJ,KAAKg2D,eAAiBh2D,KAAKwuD,UAAU3tB,KAAK1B,SAASj2B,WACnDlJ,KAAKkJ,WAAalJ,KAAKwuD,UAAU3tB,KAAKtlB,SAASrS,WAC/ClJ,KAAK6gB,kBAAoB7gB,KAAKwuD,UAAU3tB,KAAKtlB,SAASrS,WACtDlJ,KAAK2tD,mBAAoB,GAGjC3tD,KAAKi2D,sBAAsBj2D,KAAK6gB,oBAEpB,MAAPqb,QAEyB,KAAnBl8B,KAAKwuD,WAA+C,MAAlBxuD,KAAKwuD,YAE9CxuD,KAAKkJ,WAAalJ,KAAKwuD,UAAU3tB,KAAKtlB,SAASrS,WAC/ClJ,KAAK6gB,kBAAoB7gB,KAAKwuD,UAAU3tB,KAAKtlB,SAASrS,YAE1DlJ,KAAKi2D,sBAAsBj2D,KAAK6gB,oBAEpC7gB,KAAKk2D,WAAWh6B,GAvBA,GAwBhBl8B,KAAKm2D,aAAa11C,GAxBF,GAyBhBzgB,KAAKo2D,YAAYztD,EAAMyc,GAzBP,KAgCxB6kC,EAAYtqD,UAAUs2D,sBAAwB,SAAUI,GAC3Cr2D,KAAK2gB,aAAaA,cACtB3gB,MAAK4uD,iBACF5uD,KAAK6gB,mBAAqBvE,gBAAcoC,WACxC1e,KAAKouD,gBAAgB/0B,cAAc,SAAWr5B,KAAK6tD,mBAAmB7tD,KAAK6gB,oBAAoB,GAC/F7gB,KAAKouD,gBAAgB/0B,cAAc,SAAWr5B,KAAK6tD,mBAAmB7tD,KAAK6gB,oBAAoB,GAC/F7gB,KAAK4uD,gBAAiB,IAGtB5uD,KAAKouD,gBAAgB/0B,cAAc,cAAc,GACjDr5B,KAAKouD,gBAAgB/0B,cAAc,cAAc,GACjDr5B,KAAK4uD,gBAAiB,KAQlC3E,EAAYtqD,UAAUu2D,WAAa,SAAUh6B,EAAK72B,GACnC,MAAP62B,IACAl8B,KAAK87B,WAAaI,EAElBA,EAAI1b,eAAexgB,KAAK87B,WAAY97B,KAAKouD,gBAAiBpuD,KAAK2gB,aAActb,EAAWrF,KAAKkJ,WAAYlJ,KAAKkN,OAAOrK,SAErH7C,KAAK87B,WAAaI,EAAIr5B,UAO9BonD,EAAYtqD,UAAUw2D,aAAe,SAAU11C,EAAOpb,GAClD,GAAa,MAATob,OAAkC,KAAVA,EAAuB,CAC/C,GAAI1L,GAAI0L,EAAM5d,QACVyzD,EAAMvhD,CACV,MAAY,OAARuhD,OAA+B,KAARA,GAAyB71C,YAAiBJ,IAAoBI,YAAiBoqC,KAAiB,CACvH,GAAI1rC,GAAIm3C,EAAIppD,OACRA,EAASlN,KAAKkN,OAAOrK,OACf,OAALsc,IACDA,EAAEie,SAASlwB,GACXA,EAASiS,GAEbm3C,EAAIppD,OAASA,EAEjBlN,KAAK0uD,aAAe4H,EACpBvhD,EAEEyL,eAAexgB,KAAK0uD,aAAc1uD,KAAKouD,gBAAiBpuD,KAAK2gB,aAActb,EAAWrF,KAAKkJ,YAE7FlJ,KAAK0uD,aAAejuC,EACpBA,EAAQ,OAOhBwpC,EAAYtqD,UAAUy2D,YAAc,SAAUztD,EAAMyc,EAAQ/f,GACxD,GAAY,MAARsD,EAAc,CACd,GAAI4tD,GAAyB,MAAVnxC,EAAkBA,EAAO61B,eAAiB55B,oBAAkBuB,KAE3E4zC,EAA4C,MAA5Bx2D,KAAK6uD,oBAA+B7uD,KAAK6uD,oBAAoB5T,eAAiB55B,oBAAkBuB,IACpH,IAAIvd,GAAasD,IAAS3I,KAAK2uD,aAAe4H,IAAgBC,EAAc,CACxE,GAAIpuD,GAAYpI,KAAK2gB,aAAaA,cAClC3gB,MAAK2uD,YAAchmD,EACnB3I,KAAK6uD,oBAAsBzpC,CAC3B,IAAI1jB,GAAOiH,EAAK0gB,QAAQoX,QAAQrb,EAEhCplB,MAAKstD,iBAAkB,CACvB,IAAI5hD,GAAWtD,EAAUkhD,QAAQ3gD,EACjC3I,MAAKouD,gBAAgB9nD,QAAQqC,EAAM+C,EAAUhK,MAIzDuoD,EAAYtqD,UAAU82D,gBAAkB,SAAUj3C,EAAMC,EAAMC,GAC1D,OAAoB,KAATD,EACPzf,KAAKguD,mBAAoB,EACzBhuD,KAAKy2D,gBAAgBj3C,EAAMA,EAAMjD,eAAasX,YAE7C,IAAoB,gBAATpU,QAAqC,KAATC,EACxC1f,KAAKy2D,gBAAgBj3C,EAAMC,EAAMlD,eAAasX,YAE7C,CACyB,MAAtB7zB,KAAK02D,gBACL12D,KAAK02D,cAAgB,GAAIp4B,IAE7B,IAAIq4B,GAAS,KACTC,EAAK,GAAIC,IAAiBr3C,EAAMC,EAAMC,EACtC1f,MAAK02D,cAAcl1D,YAAYo1D,KAC/BD,EAAS32D,KAAK02D,cAAct2D,SAASw2D,IAE3B,MAAVD,IACAA,EAAS,GAAI/3B,IAAgBpf,EAAMC,EAAMC,GACzC1f,KAAK02D,cAAcl2D,SAASo2D,EAAID,GAEpC,IACIG,GADY92D,KAAK2gB,aAAaA,eACX2oC,QAAQqN,EACtB32D,MAAK0gB,aACXhZ,iBAAiBovD,KAG5B7M,EAAYtqD,UAAUo3D,qBAAuB,SAAUrkD,EAAGC,EAAGoN,EAAMC,EAAKC,EAAOC,GAC3E,GAAIxN,YAAa6M,QAA2B,KAAN5M,EAClC3S,KAAKuuD,WAAa77C,EAClB1S,KAAKouD,gBAAgBv0B,aAAa,iBAClC75B,KAAKouD,gBAAgBhpD,gBAAgBsN,GACrC1S,KAAKouD,gBAAgBroD,YACrB/F,KAAKouD,gBAAgB7mD,UAAS,GAC9BvH,KAAKouD,gBAAgBv0B,aAAa,iCAClC75B,KAAKs/B,mBAAmB5sB,EAAEA,EAAGA,EAAEC,OAE9B,IAAiB,gBAAND,GAAgB,CAC5B,GAAIskD,GAAW,GAAIz3C,GAAWQ,EAAMC,EAAKhgB,KAAK0B,KAAK4H,MAAQyW,EAAOE,EAAOjgB,KAAK0B,KAAK6H,OAASyW,EAAME,EAClGlgB,MAAKuuD,WAAayI,EAClBh3D,KAAKouD,gBAAgBv0B,aAAa,iBAClC75B,KAAKouD,gBAAgBhpD,gBAAgB4xD,GACrCh3D,KAAKouD,gBAAgBroD,YACrB/F,KAAKouD,gBAAgB7mD,UAAS,GAC9BvH,KAAKouD,gBAAgBv0B,aAAa,iCAClC75B,KAAKs/B,mBAAmB5sB,EAAGC,KAOnCs3C,EAAYtqD,UAAU+5B,QAAU,SAAU/mB,GACtC,OAAQA,GAyBZs3C,EAAYtqD,UAAU2/B,mBAAqB,SAAU1C,EAASC,GAC1D,GAAI3vB,GAAS,GAAIovB,GACjBt8B,MAAKivD,sBAAsBryB,EAASC,EAAS3vB,GAC7ClN,KAAKouD,gBAAgB5oD,UAAU0H,GAC/BlN,KAAKkN,OAAOkwB,SAASlwB,IAMzB+8C,EAAYtqD,UAAUsvD,sBAAwB,SAAUv8C,EAAGC,EAAGivB,GAE1D,MADAA,GAAMjF,UAAUjqB,EAAG1S,KAAK05B,QAAQ/mB,IACzBivB,GA2BXqoB,EAAYtqD,UAAUs3D,eAAiB,SAAUl6B,EAAQC,GACrD,GAAI9vB,GAAS,GAAIovB,GACjBt8B,MAAKkvD,kBAAkBnyB,EAAQC,EAAQ9vB,GACvClN,KAAKouD,gBAAgB5oD,UAAU0H,GAC/BlN,KAAKkN,OAAOkwB,SAASlwB,IAMzB+8C,EAAYtqD,UAAUuvD,kBAAoB,SAAUx8C,EAAGC,EAAGivB,GAKtD,MAJa,OAATA,IACAA,EAAQ,GAAItF,KAEhBsF,EAAM9E,MAAMpqB,EAAGC,GACRivB,GAwBXqoB,EAAYtqD,UAAUu3D,gBAAkB,SAAUj6B,GAC9C,GAAI/vB,GAAS,GAAIovB,GACjBt8B,MAAKm3D,mBAAmBl6B,EAAO/vB,GAC/BlN,KAAKouD,gBAAgB5oD,UAAU0H,GAC/BlN,KAAKkN,OAAOkwB,SAASlwB,IAMzB+8C,EAAYtqD,UAAUuqD,sBAAwB,WAE1ClqD,KAAKouD,gBAAgBv0B,aAAa,0CAE9B75B,KAAKo3D,2BAA8Bp3D,KAAK0B,KAAY,QAChC,MAAhB1B,KAAKq3D,UACDr3D,KAAKo3D,0BAA4Bp3D,KAAK0B,KAAK6H,QAA2C,IAAjCvJ,KAAKo3D,wBAC1Dp3D,KAAKs/B,mBAAmB,EAAGt/B,KAAK05B,QAAQ15B,KAAK0B,KAAK6H,SAGlDvJ,KAAKs/B,mBAAmB,EAAGt/B,KAAK05B,QAAQ15B,KAAKo3D,4BAS7DnN,EAAYtqD,UAAUw3D,mBAAqB,SAAUl6B,EAAO2E,GAKxD,MAJa,OAATA,OAAkC,KAAVA,IACxBA,EAAQ,GAAItF,KAEhBsF,EAAM52B,OAAOhL,KAAK05B,QAAQuD,IACnB2E,GA0BXqoB,EAAYtqD,UAAU8C,KAAO,WACzB,GAAI2O,GAAQ,GAAIkmD,IAAiBt3D,KAAMA,KAAKkN,OAAOrK,QAWnD,OAVAuO,GAAMqP,MAAQzgB,KAAK0uD,aACnBt9C,EAAM8qB,IAAMl8B,KAAK87B,WACjB1qB,EAAMzI,KAAO3I,KAAK2uD,YAClBv9C,EAAMlI,WAAalJ,KAAK6gB,kBACxBzP,EAAMoZ,iBAAmBxqB,KAAKgtD,yBAC9B57C,EAAMqZ,YAAczqB,KAAKitD,oBACzB77C,EAAMinB,YAAcr4B,KAAKktD,oBACzB97C,EAAMmmD,kBAAoBv3D,KAAK8sD,0BAC/B9sD,KAAK+tD,cAAc7sD,KAAKkQ,GACxBpR,KAAKouD,gBAAgB51B,oBACdpnB,GAEX64C,EAAYtqD,UAAU6/B,QAAU,SAAUpuB,GACtC,OAAqB,KAAVA,EACHpR,KAAK+tD,cAAc/sD,OAAS,GAC5BhB,KAAKw3D,qBAIT,KAA2C,IAAvCx3D,KAAK+tD,cAAczqD,QAAQ8N,GAC3B,KACsC,IAA9BpR,KAAK+tD,cAAc/sD,QAGRhB,KAAKw3D,mBACHpmD,MAWjC64C,EAAYtqD,UAAU63D,eAAiB,WACnC,GAAIpmD,GAAQpR,KAAK+tD,cAAc0J,KAW/B,OAVAz3D,MAAKy8B,qBAAuBrrB,EAAMlE,OAClClN,KAAK0uD,aAAet9C,EAAMqP,MAC1BzgB,KAAK87B,WAAa1qB,EAAM8qB,IACxBl8B,KAAK2uD,YAAcv9C,EAAMzI,KACzB3I,KAAK6gB,kBAAoBzP,EAAMlI,WAC/BlJ,KAAKgtD,yBAA2B57C,EAAMoZ,iBACtCxqB,KAAKitD,oBAAsB77C,EAAMqZ,YACjCzqB,KAAKktD,oBAAsB97C,EAAMinB,YACjCr4B,KAAK8sD,0BAA4B17C,EAAMmmD,kBACvCv3D,KAAKouD,gBAAgB71B,uBACdnnB,GAgCX64C,EAAYtqD,UAAU+3D,SAAW,SAAUx7B,EAAKzb,EAAOk3C,GAC/Cl3C,YAAiBoqC,KACjB7qD,KAAK4uD,gBAAiB,EACtBnuC,EAAM0e,SAASj2B,WAAalJ,KAAKkJ,YAE5BuX,YAAiB8nC,MACtBvoD,KAAK4uD,gBAAiB,EACtBnuC,EAAMvX,WAAalJ,KAAKkJ,YAE5BlJ,KAAKgwD,aAAa9zB,EAAKzb,EAAO,MAC9BzgB,KAAK43D,YAAYD,EAAKE,WAAYF,EAAKG,WACvC93D,KAAKqwD,eAAen0B,EAAKzb,EAAOk3C,EAAKI,UAAU,IAGnD9N,EAAYtqD,UAAUq4D,QAAU,SAAUx4C,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,GACtExF,YAAgBF,GAChBvf,KAAKg4D,QAAQx4C,EAAMC,EAAK/M,EAAG+M,EAAK9M,EAAG8M,EAAKnW,MAAOmW,EAAKlW,OAAQmW,EAAMC,GAGpD,IAATsF,IACDjlB,KAAKgwD,aAAaxwC,EAAM,KAAM,MAC9Bxf,KAAKi4D,iBAAiBx4C,EAAMC,EAAOD,EAAOE,EAAQD,EAAOqF,EAAOC,EAAMC,GACtEjlB,KAAKqwD,eAAe7wC,EAAM,MAAM,KAQ5CyqC,EAAYtqD,UAAUi4D,YAAc,SAAUp4C,EAAMC,GAEhD,IAAK,GADDy4C,GAAM14C,EAAKxe,OACNkC,EAAI,EAAGA,EAAIg1D,IAAOh1D,EAAG,CAC1B,GAAIi1D,GAAY,EACZv6B,EAAQpe,EAAKtc,EACjB,QAAUuc,EAAKvc,GAAM+mD,EAAgC,qBACjD,IAAK3B,iBAAc8P,MACfp4D,KAAKouD,gBAAgBxpD,UAAUg5B,EAAMlrB,EAAGkrB,EAAMjrB,EAC9C,MACJ,KAAK21C,iBAAc+P,QACf,GAAIC,GAAK,GAAIj5C,GAAO,EAAG,GACnBk5C,EAAK,GAAIl5C,GAAO,EAAG,GACnB26B,EAAUh6C,KAAKw4D,gBAAgBh5C,EAAMC,EAAMvc,EAAGo1D,EAAIC,EACtDv4D,MAAKouD,gBAAgB3zB,oBAAoBmD,EAAOoc,EAAQse,GAAIte,EAAQue,IACpEr1D,EAAI82C,EAAQ92C,CACZ,MACJ,KAAKolD,iBAAcmQ,KACfz4D,KAAKouD,gBAAgBvpD,kBAAkB+4B,EACvC,MACJ,SACI,KAAM,IAAItnB,OAAM,mDAExB6hD,EAAY14C,EAAKvc,GACjBlD,KAAK04D,WAAWP,KAQxBlO,EAAYtqD,UAAU64D,gBAAkB,SAAUG,EAAQ/U,EAAO1gD,EAAGo1D,EAAIC,GAGpE,KADEr1D,GACK0gD,EAAM1gD,GAAK+mD,EAAY2O,uBAA0BtQ,gBAAc+P,QAWlE,KAAM,IAAI/hD,OAAM,+BARhB,IAFAgiD,EAAKK,EAAOz1D,KACVA,GACK0gD,EAAM1gD,GAAK+mD,EAAY2O,uBAA0BtQ,gBAAc+P,QAIlE,KAAM,IAAI/hD,OAAM,+BAMxB,OATQiiD,GAAKI,EAAOz1D,IASXA,EAAGA,EAAGo1D,GAAIA,EAAIC,GAAIA,IAM/BtO,EAAYtqD,UAAU+4D,WAAa,SAAUrwD,IAClCA,EAAQigD,gBAA2B,gBAAOA,gBAAcuQ,cAC3D74D,KAAKouD,gBAAgBroD,aAO7BkkD,EAAYtqD,UAAUs4D,iBAAmB,SAAUzC,EAAIsD,EAAIj7B,EAAIC,EAAIi7B,EAAUC,GACzE,GAAIL,GAAS34D,KAAKi5D,aAAazD,EAAIsD,EAAIj7B,EAAIC,EAAIi7B,EAAUC,EACzD,IAAuB,IAAlBL,EAAO33D,OAAZ,CAGA,GAAIk4D,IAAMP,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAC9F34D,MAAKouD,gBAAgBxpD,UAAUs0D,EAAG,GAAIA,EAAG,GACzC,IAAIh2D,GAAI,CACR,KAAKA,EAAI,EAAGA,EAAIy1D,EAAO33D,OAAQkC,GAAQ,EACnCg2D,GAAMP,EAAOz1D,GAAIy1D,EAAOz1D,EAAI,GAAIy1D,EAAOz1D,EAAI,GAAIy1D,EAAOz1D,EAAI,GAAIy1D,EAAOz1D,EAAI,GAAIy1D,EAAOz1D,EAAI,GAAIy1D,EAAOz1D,EAAI,GAAIy1D,EAAOz1D,EAAI,IACtHlD,KAAKouD,gBAAgB3zB,oBAAoBy+B,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,MAOvFjP,EAAYtqD,UAAUs5D,aAAe,SAAUE,EAAOC,EAAOC,EAAOC,EAAOC,EAAIC,GAC3E,GAAKL,EAAQE,EAAQ,CACbI,MAAM,EACVA,GAAMN,EACNA,EAAQE,EACRA,EAAQI,EAEZ,GAAKH,EAAQF,EAAQ,CACjB,GAAIK,OAAM,EACVA,GAAML,EACNA,EAAQE,EACRA,EAAQG,EAEZ,GAAIC,GACAC,CACC9mD,MAAKksC,IAAIya,IAAO,IACjBE,EAAaF,EACbG,EAAe,GAIfD,EAAcF,GADdG,EAAgB9mD,KAAK0iC,KAAM1iC,KAAKksC,IAAIya,GAAM,IAU9C,KAAK,GAPDI,IAAST,EAAQE,GAAS,EAC1BQ,GAAST,EAAQE,GAAS,EAC1BQ,GAAOT,EAAQF,GAAS,EACxBY,GAAOT,EAAQF,GAAS,EACxBY,EAAYN,GAAc7mD,KAAK2pB,GAAK,KACpCy9B,EAASpnD,KAAKksC,IAAI,EAAM,GAAO,EAAMlsC,KAAKqqB,IAAI88B,IAAYnnD,KAAKsqB,IAAI68B,IACnEE,KACKh3D,EAAI,EAAIA,EAAIy2D,EAAez2D,IAAK,CACrC,GAAIi3D,IAAiBZ,EAAMr2D,EAAIw2D,IAAgB7mD,KAAK2pB,GAAK,KACrD49B,GAAiBb,GAAOr2D,EAAI,GAAKw2D,IAAgB7mD,KAAK2pB,GAAK,KAC3D69B,EAAQxnD,KAAKqqB,IAAIi9B,GACjBG,EAAQznD,KAAKqqB,IAAIk9B,GACjBG,EAAQ1nD,KAAKsqB,IAAIg9B,GACjBK,EAAQ3nD,KAAKsqB,IAAIi9B,EAChBV,GAAa,EAEdQ,EAAWh5D,KAAM04D,EAAQE,EAAKO,EAASR,EAAQE,EAAKQ,EAASX,EAAQE,GAAMO,EAAQJ,EAAQM,GAAWV,EAAQE,GAAMQ,EAAQN,EAAQI,GAAWT,EAAQE,GAAMQ,EAAQL,EAAQO,GAAWX,EAAQE,GAAMS,EAAQP,EAAQK,GAAWV,EAAQE,EAAKQ,EAAST,EAAQE,EAAKS,GAIpQN,EAAWh5D,KAAM04D,EAAQE,EAAKO,EAASR,EAAQE,EAAKQ,EAASX,EAAQE,GAAMO,EAAQJ,EAAQM,GAAWV,EAAQE,GAAMQ,EAAQN,EAAQI,GAAWT,EAAQE,GAAMQ,EAAQL,EAAQO,GAAWX,EAAQE,GAAMS,EAAQP,EAAQK,GAAWV,EAAQE,EAAKQ,EAAST,EAAQE,EAAKS,GAG5Q,MAAON,IAOXjQ,EAAY2O,oBAAsB,GAMlC3O,EAAYwQ,oBAAqB,EAC1BxQ,KAQPD,GAAyC,WAMzC,QAASA,GAAwBz5C,GAC7BvQ,KAAKuQ,OAASA,EASlB,MAHAy5C,GAAwBrqD,UAAUghB,aAAe,WAC7C,MAAO3gB,MAAKuQ,OAAOoQ,gBAEhBqpC,KAGPsN,GAAkC,WAClC,QAASA,GAAiBn4B,EAAUjyB,GAMhClN,KAAK06D,0BAA4Bz+C,oBAAkB8wC,KAMnD/sD,KAAKwiB,yBAA2B,EAMhCxiB,KAAKyiB,oBAAsB,EAM3BziB,KAAK26D,oBAAsB,IAM3B36D,KAAK46D,cAAgBt+C,gBAAckC,QACX,KAAb2gB,IACPn/B,KAAK8pD,YAAc3qB,EACnBn/B,KAAKy8B,qBAAuBvvB,GA0IpC,MAvIAxN,QAAOuC,eAAeq1D,EAAiB33D,UAAW,YAM9CuC,IAAK,WACD,MAAOlC,MAAK8pD,aAEhBznD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,UAK9CuC,IAAK,WACD,MAAOlC,MAAKy8B,sBAEhBp6B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,oBAK9CuC,IAAK,WACD,MAAOlC,MAAKwiB,0BAEhBpgB,IAAK,SAAU7B,GACXP,KAAKwiB,yBAA2BjiB,GAEpC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,eAK9CuC,IAAK,WACD,MAAOlC,MAAKyiB,qBAEhBrgB,IAAK,SAAU7B,GACXP,KAAKyiB,oBAAsBliB,GAE/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,eAK9CuC,IAAK,WACD,MAAOlC,MAAK26D,qBAEhBv4D,IAAK,SAAU7B,GACXP,KAAK26D,oBAAsBp6D,GAE/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,OAK9CuC,IAAK,WACD,MAAOlC,MAAK66D,QAEhBz4D,IAAK,SAAU7B,GACXP,KAAK66D,OAASt6D,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,SAK9CuC,IAAK,WACD,MAAOlC,MAAK67B,UAEhBz5B,IAAK,SAAU7B,GACXP,KAAK67B,SAAWt7B,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,QAK9CuC,IAAK,WACD,MAAOlC,MAAK86D,SAEhB14D,IAAK,SAAU7B,GACXP,KAAK86D,QAAUv6D,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,cAK9CuC,IAAK,WACD,MAAOlC,MAAK46D,eAEhBx4D,IAAK,SAAU7B,GACXP,KAAK46D,cAAgBr6D,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq1D,EAAiB33D,UAAW,qBAK9CuC,IAAK,WACD,MAAOlC,MAAK06D,2BAEhBt4D,IAAK,SAAU7B,GACXP,KAAK06D,0BAA4Bn6D,GAErC8B,YAAY,EACZC,cAAc,IAEXg1D,KAGPT,GAAkC,WAMlC,QAASA,GAAiBkE,EAAUC,EAAYC,GAC5Cj7D,KAAK+6D,SAAWA,EAChB/6D,KAAKg7D,WAAaA,EAClBh7D,KAAKi7D,UAAYA,EAErB,MAAOpE,MCl7DPqE,GAA8B,WAC9B,QAASA,GAAar6B,EAAMs6B,GA8BxB,GAxBAn7D,KAAK46D,cAAgBt+C,gBAAckC,IAMnCxe,KAAKo7D,WAAY,EAMjBp7D,KAAKq7D,UAAW,EAMhBr7D,KAAKs7D,cAAgB,EAKrBt7D,KAAKsP,qBAAuB,GAAItH,GACnB,OAAT64B,EACA,KAAM,IAAIvqB,OAAM,6BAIpB,IAFAtW,KAAKu7D,QAAU16B,EACf7gC,KAAKw7D,mBAAoB,MACc,KAA5BL,EACPn7D,KAAK8oB,QAAU,GAAIvT,OAElB,IAAI4lD,YAAmC5lD,IAAyC,OAA5B4lD,EAAkC,CACvF,GAAgC,OAA5BA,EACA,KAAM,IAAI7kD,OAAM,+BAEpBtW,MAAK8oB,QAAUqyC,MAGfn7D,MAAK8oB,QAAU,GAAIvT,GACnBvV,KAAKw7D,kBAAoBL,EAmLjC,MAhLAz7D,QAAOuC,eAAei5D,EAAav7D,UAAW,cAM1CuC,IAAK,WACD,MAAOlC,MAAK46D,eAEhBx4D,IAAK,SAAU7B,GACXP,KAAK46D,cAAgBr6D,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAei5D,EAAav7D,UAAW,QAK1CuC,IAAK,WACD,MAAOlC,MAAKu7D,SAEhBl5D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAei5D,EAAav7D,UAAW,WAK1CuC,IAAK,WACD,MAAOlC,MAAKy7D,SAEhBr5D,IAAK,SAAU7B,GACXP,KAAKy7D,QAAUl7D,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAei5D,EAAav7D,UAAW,QAK1CuC,IAAK,WACD,MAAOlC,MAAK07D,WAEhBt5D,IAAK,SAAU7B,GACXP,KAAK07D,UAAYn7D,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAei5D,EAAav7D,UAAW,WAK1CuC,IAAK,WACD,MAAOlC,MAAKo7D,WAEhBh5D,IAAK,SAAU7B,GACXP,KAAKo7D,UAAY76D,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAei5D,EAAav7D,UAAW,YAK1CuC,IAAK,WAID,MAHyB,OAApBlC,KAAK8pD,aACN9pD,KAAK27D,mBAAmB37D,KAAK6gC,MAE1B7gC,KAAK8pD,aAEhBznD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAei5D,EAAav7D,UAAW,UAK1CuC,IAAK,WACD,MAAkB,OAAdlC,KAAKowD,OACLpwD,KAAKowD,MAAQ,GAAIwL,IAAuB57D,KAAK6gC,MAC7C7gC,KAAKowD,MAAMiL,UAAW,EACfr7D,KAAKowD,OAGLpwD,KAAKowD,OAGpB/tD,YAAY,EACZC,cAAc,IAOlB44D,EAAav7D,UAAU8T,IAAM,WACzB,GAAI28C,GAAQ,GAAI8K,GAAal7D,KAAKu7D,QAElC,OADAnL,GAAM14C,KAAO,GACN04C,GAMX8K,EAAav7D,UAAUk8D,KAAO,SAAUvpD,GACpC,MAAe,KAAXA,EACO,EAEFA,EAAS,EACP,GAGC,GAOhB4oD,EAAav7D,UAAUg8D,mBAAqB,SAAU96B,GAClD,GAAIi7B,GAAQj7B,EACRkpB,EAAK,GAAIC,IAAwBhqD,KAAK6gC,KAI1C,IAHA7gC,KACK8pD,YAAc,GAAIG,IAAYppB,EAAKn/B,KAAMqoD,EAAI/pD,KAAK8oB,SACvD9oB,KAAK8pD,YAAYsN,wBAA0B,EAC9B,MAAT0E,EAAe,CACf,GAAIC,GAAKD,EAAMpJ,QAAQnqD,MACb,OAANwzD,IACA/7D,KAAK8pD,YAAY5gD,WAAa6yD,EAAGxgD,SAASrS,WAC1ClJ,KAAKkJ,WAAa6yD,EAAGxgD,SAASrS,YAItC,GAAI8yD,GAAUh8D,KAAK67D,KAAKh7B,EAAKo7B,OAAOtpD,KAAO3S,KAAK67D,KAAKh7B,EAAKo7B,OAAOvpD,IAE7DmuB,EAAKo7B,OAAOvpD,GAAK,GAAKmuB,EAAKo7B,OAAOtpD,GAAK,QACvC3S,KAAK8pD,YAAYI,uBAKrB,IAAIgS,GAAWJ,EAAMpJ,QAAQyJ,gBAAgBL,GAAO,GAChDhlC,EAAUglC,EAAMpJ,QAAQ0J,aAAatlC,OACrC92B,MAAKw7D,kBACD36B,EAAKo7B,OAAOvpD,GAAK,GAAKmuB,EAAKo7B,OAAOtpD,GAAK,GACvC3S,KAAK8pD,YAAYiN,qBAAqBmF,GAI1Cl8D,KAAKm/B,SAAS43B,qBAAqBmF,EAASxpD,EAAGwpD,EAASvpD,EAAGmkB,EAAQ/W,KAAM+W,EAAQ9W,IAAK8W,EAAQ7W,MAAO6W,EAAQ5W,QAEjHlgB,KAAK8pD,YAAYkI,SAAShyD,OAG9BN,OAAOuC,eAAei5D,EAAav7D,UAAW,WAM1CuC,IAAK,WACD,MAAOlC,MAAK8oB,SAEhBzmB,YAAY,EACZC,cAAc,IAEX44D,KCvOPmB,GAA+B,WAM/B,QAASA,MAgCT,MA7BA38D,QAAOuC,eAAeo6D,EAAc18D,UAAW,SAM3CuC,IAAK,WAID,WAH+B,KAApBlC,KAAK+yC,aACZ/yC,KAAK+yC,eAEF/yC,KAAK+yC,WAAW/xC,QAE3BqB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeo6D,EAAc18D,UAAW,QAK3CuC,IAAK,WAID,WAH+B,KAApBlC,KAAK+yC,aACZ/yC,KAAK+yC,eAEF/yC,KAAK+yC,YAEhB1wC,YAAY,EACZC,cAAc,IAEX+5D,KC1CPznD,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,uBAA2BC,QAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI1K,KAAK0K,GAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASK,KAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,GAAIyV,QAenFwmD,GAAwC,SAAUpmD,GAElD,QAASomD,GAAuB/6B,GAC5B,GAAInrB,GAAQF,EAAO3V,KAAKG,OAASA,IAkBjC,IAZA0V,EAAM4mD,iBAAmB,EAMzB5mD,EAAM2lD,UAAW,EAKjB3lD,EAAM6mD,gBAAkB,GAAI3tD,GACxBiyB,YAAgB27B,IAAa,CAI7B9mD,EAAMmrB,KAAOA,CACb,IAAI47B,GAAQ57B,CAEZnrB,GAAMgnD,YAAYD,GAGtB,MAAO/mD,GAuPX,MArRAd,IAAUgnD,EAAwBpmD,GAgClComD,EAAuBj8D,UAAU4P,MAAQ,SAAUC,EAAOjP,GACtD,GAAqB,gBAAViP,QAAuC,KAAVjP,EAEpC,MADUP,MAAK28D,KAAKntD,EAIpB,IAAa,MAATjP,EACA,KAAM,IAAI+V,OAAM,+BAEpB,IAAI/V,EAAMsgC,OAAS7gC,KAAK6gC,KACpB,KAAM,IAAIvqB,OAAM,yDAW5BslD,EAAuBj8D,UAAU8T,IAAM,SAAUmpD,EAAeC,GAC5D,OAA6B,KAAlBD,EAA+B,CACtC,GAAIxM,GAAQ,GAAI8K,IAAal7D,KAAK6gC,KAGlC,OAFAuvB,GAAM14C,KAAO,GACb1X,KAAKyT,IAAI28C,GACFA,EAEN,GAAIwM,YAAyB1B,IAAc,CAK5C,GAAI1rD,GAAQxP,KAAK28D,KAAKz7D,KAAK07D,EAG3B,OADA58D,MAAK88D,SAASttD,EAAOotD,GACdptD,EAGP,MAAO,IAOfosD,EAAuBj8D,UAAUm9D,SAAW,SAAUttD,EAAO4gD,GACzD,GAAIzkC,GAAY,GAAIlU,GAAmB24C,EACvCpwD,MAAK6gC,KAAK73B,SAASyK,IAAIkY,IAe3BiwC,EAAuBj8D,UAAU6U,OAAS,SAAUhF,EAAO4gD,GASvD,IAAK,GAFDuM,MACA37D,EAAShB,KAAK28D,KAAK37D,OACdkC,EAAIsM,EAAOtM,EAAIlC,EAAQkC,IAC5By5D,EAAKz7D,KAAKlB,KAAK28D,KAAKlF,MAExBz3D,MAAK28D,KAAKz7D,KAAKkvD,EACf,KAASltD,EAAI,EAAGA,EAAIy5D,EAAK37D,OAAQkC,IAC7BlD,KAAK28D,KAAKz7D,KAAKy7D,EAAKz5D,GAGxBlD,MAAK+8D,YAAYvtD,EAAO4gD,IAM5BwL,EAAuBj8D,UAAUo9D,YAAc,SAAUvtD,EAAO4gD,GAC5D,GAAa,MAATA,EACA,KAAM,IAAI95C,OAAM,8BAEpB,IAAIqV,GAAY,GAAIlU,GAAmB24C,EACvCpwD,MAAK6gC,KAAK73B,SAASwL,OAAOhF,EAAOmc,IAOrCiwC,EAAuBj8D,UAAU+8D,YAAc,SAAUM,GAIrD,GAAIh0D,GAAWhJ,KAAK6gC,KAAK73B,QACVhJ,MAAK6gC,KAAKlgB,cAMZq8C,GAAWl6D,UAOxB,IAAIm6D,GAAa,GAAI1nD,GACjB2nD,EAAgB,GAAI3nD,GA4GpB4nD,IACJA,GAASj8D,KA5GO,KA6GhB+7D,EAAWxnD,KAAO0nD,EAClBn0D,EAASwL,OAAO,EAAG,GAAIiD,GAAmBwlD,KAC1CE,MACSj8D,KA9GU,KA+GnBg8D,EAAcznD,KAAO0nD,EACrBn0D,EAASwL,OAAOxL,EAASb,MAAO,GAAIsP,GAAmBylD,KAM3DtB,EAAuBj8D,UAAU2D,QAAU,SAAU8sD,GACjD,GAAa,MAATA,EACA,KAAM,IAAI95C,OAAM,+BAGpB,OADYtW,MAAK28D,KAAKr5D,QAAQ8sD,IAG3BwL,GACTS,ICvSEG,GAA6B,WAM7B,QAASA,GAAY3tD,GAMjB7O,KAAKo9D,eAAiB,EAMtBp9D,KAAKmtC,UAAW,EAMhBntC,KAAKsP,qBAAuB,GAAItH,GAChChI,KAAKq9D,eAAiBxuD,EAwI1B,MAtIAnP,QAAOuC,eAAeu6D,EAAY78D,UAAW,WAMzCuC,IAAK,WAID,MAAOlC,MAAKs9D,YAEhBl7D,IAAK,SAAU7B,GACXP,KAAKs9D,WAAa/8D,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu6D,EAAY78D,UAAW,cAKzCuC,IAAK,WACD,MAAOlC,MAAKq9D,gBAEhBh7D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu6D,EAAY78D,UAAW,WAKzCuC,IAAK,WACD,MAAOlC,MAAKq9D,gBAEhBh7D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu6D,EAAY78D,UAAW,gBAKzCuC,IAAK,WACD,GAAIkuD,GAAQpwD,KAAKu9D,OACb/tD,EAAQxP,KAAKw9D,iBAEjB,OADkBpN,GAAM7gD,MAAMC,IAGlCnN,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu6D,EAAY78D,UAAW,qBAKzCuC,IAAK,WACD,GAAmC,IAA/BlC,KAAKy9D,gBAAgBt1D,QAAuC,IAAxBnI,KAAKo9D,cAAsB,CAC/D,GAAIhN,GAAQpwD,KAAKy9D,gBAAgBhqD,KACjCzT,MAAKo9D,cAAgBp9D,KAAKy9D,gBAAgBn6D,QAAQ8sD,GAEtD,MAAOpwD,MAAKo9D,eAMhBh7D,IAAK,SAAU7B,GACX,GAAIA,EAAQ,GAAKA,EAAQP,KAAKu9D,OAAOp1D,MAAQ,EACzC,KAAM,IAAImO,OAAM,4FAGhBtW,MAAKo9D,cAAgB78D,EACrBP,KAAKmtC,UAAW,GAGxB9qC,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeu6D,EAAY78D,UAAW,UAKzCuC,IAAK,WAID,MAH4B,OAAxBlC,KAAKy9D,qBAA2D,KAAzBz9D,KAAKy9D,kBAC5Cz9D,KAAKy9D,gBAAkB,GAAI7B,IAAuB57D,OAE/CA,KAAKy9D,iBAEhBp7D,YAAY,EACZC,cAAc,IAMlBk6D,EAAY78D,UAAUghB,aAAe,WAKjC,MAJsB,OAAlB3gB,KAAKoI,YACLpI,KAAKoI,UAAY,GAAI+hD,IACrBnqD,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBlH,UAAWpI,KAAKoI,YAEtEpI,KAAKoI,WAEhB1I,OAAOuC,eAAeu6D,EAAY78D,UAAW,YAKzCuC,IAAK,WACD,GACI8G,GADMhJ,KAAKq9D,eAAe9tD,MAAMnP,SAASJ,KAAKsP,qBAAqBtG,SAOvE,OAJgB,OAAZA,IACAA,EAAW,GAAI8J,GACf9S,KAAKq9D,eAAe9tD,MAAM/O,SAASR,KAAKsP,qBAAqBtG,SAAUA,IAEpEA,GAEX3G,YAAY,EACZC,cAAc,IAMlBk6D,EAAY78D,UAAUmxD,aAAe,SAAUnO,GAC3C3iD,KAAKoI,UAAYu6C,EACjB3iD,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBlH,UAAWpI,KAAKoI,WACzEpI,KAAKmtC,UAAW,GAEbqvB,KChKPkB,GAAyC,WACzC,QAASA,GAAwB78B,GAM7B7gC,KAAK29D,6BAA+B,mDAKpC39D,KAAK49D,2BAA6B,6CAKlC59D,KAAKsP,qBAAuB,GAAItH,GAKhChI,KAAK69D,oBAAsB,GAAI/qD,GAK/B9S,KAAK89D,aACe,KAATj9B,IACP7gC,KAAK6gC,KAAOA,GA6GpB,MA1GAnhC,QAAOuC,eAAey7D,EAAwB/9D,UAAW,eAKrDuC,IAAK,WACD,MAAOlC,MAAK69D,qBAEhBz7D,IAAK,SAAU7B,GACXP,KAAK69D,oBAAsBt9D,GAE/B8B,YAAY,EACZC,cAAc,IAOlBo7D,EAAwB/9D,UAAU8T,IAAM,SAAUsqD,GAE9C/9D,KAAKg+D,MAAMD,IAOfL,EAAwB/9D,UAAUq+D,MAAQ,SAAUD,GAChD,OAAsC,KAA3BA,EAAWE,YAoDlB,MAFAF,GAAWG,QAAQl+D,KAAK6gC,MACxB7gC,KAAK69D,oBAAoBpqD,IAAI,GAAIgE,GAAmBsmD,IAC7C/9D,KAAK89D,MAAM58D,KAAK68D,EAnDvB,IACII,IADS,GAAIv5C,IACSE,OAAOi5C,EAAW1nD,KAAM0nD,EAAWp1D,KAAMo1D,EAAW19B,aAAc,GAAI/gB,GAAOy+C,EAAWxpD,aAAe,IAAI,EAAO,GAAI+K,GAAM,EAAG,IACrJ8+C,EAAeL,EAAWxpD,OAAO5B,CACrC,IAAkC,IAA9BwrD,EAAax4C,MAAM3kB,OAAc,CAC7BU,EAAOq8D,EAAWp1D,KAAKkhB,cAAcs0C,EAAax4C,MAAM,GAAGtP,KAC/D0nD,GAAWxpD,OAAS,GAAIgL,GAAW,GAAIF,GAAO0+C,EAAWxpD,OAAO7B,EAAG0rD,GAAe18D,GAClFq8D,EAAW1nD,KAAO8nD,EAAax4C,MAAM,GAAGtP,KAExCrW,KAAK6gC,KAAK1B,SAASiwB,WAAW2O,EAAW1nD,KAAM0nD,EAAWp1D,KAAM,KAAMo1D,EAAWt9C,MAAOs9C,EAAWxpD,OAAO7B,EAAGqrD,EAAWxpD,OAAO5B,EAAGorD,EAAWxpD,OAAOjL,MAAOy0D,EAAWxpD,OAAOhL,OAAQ,MAErLw0D,EAAWG,QAAQl+D,KAAK6gC,MACxB7gC,KAAKq+D,SAASN,GACd/9D,KAAK69D,oBAAoBpqD,IAAI,GAAIgE,GAAmBsmD,IACpD/9D,KAAK89D,MAAM58D,KAAK68D,OAGhB,KAAK,GAAI76D,GAAI,EAAGA,EAAIi7D,EAAax4C,MAAM3kB,OAAQkC,IAAK,CAChD,GAAIxB,GAAOq8D,EAAWp1D,KAAKkhB,cAAcs0C,EAAax4C,MAAMziB,GAAGmT,KAC/D,IAAU,IAANnT,EACA66D,EAAWxpD,OAAS,GAAIgL,GAAWw+C,EAAWxpD,OAAO7B,EAAG0rD,EAAc18D,EAAK4H,MAAO5H,EAAK6H,QACvFw0D,EAAW1nD,KAAO8nD,EAAax4C,MAAMziB,GAAGmT,KAExCrW,KAAK6gC,KAAK1B,SAASiwB,WAAW2O,EAAW1nD,KAAM0nD,EAAWp1D,KAAM,KAAMo1D,EAAWt9C,MAAOs9C,EAAWxpD,OAAO7B,EAAG0rD,EAAc18D,EAAK4H,MAAO5H,EAAK6H,OAAQ,MAEpJw0D,EAAWG,QAAQl+D,KAAK6gC,MACxB7gC,KAAKq+D,SAASN,GACd/9D,KAAK69D,oBAAoBpqD,IAAI,GAAIgE,GAAmBsmD,IACpD/9D,KAAK89D,MAAM58D,KAAK68D,GAEhBK,GAAgBL,EAAWxpD,OAAOhL,WAEjC,CACD,GAAIa,GAAQ2zD,EAAWl7D,OACvBuH,GAAMmK,OAAS,GAAIgL,GAAW,GAAIF,GAAO0+C,EAAWxpD,OAAO7B,EAAG0rD,GAAe18D,GAC7E0I,EAAMiM,KAAO8nD,EAAax4C,MAAMziB,GAAGmT,KAEnCrW,KAAK6gC,KAAK1B,SAASiwB,WAAWhlD,EAAMiM,KAAMjM,EAAMzB,KAAM,KAAMyB,EAAMqW,MAAOrW,EAAMmK,OAAO7B,EAAGtI,EAAMmK,OAAO5B,EAAGvI,EAAMmK,OAAOjL,MAAOc,EAAMmK,OAAOhL,OAAQ,MAElJa,EAAM8zD,QAAQl+D,KAAK6gC,MACnB7gC,KAAKq+D,SAASj0D,GACdpK,KAAK69D,oBAAoBpqD,IAAI,GAAIgE,GAAmBrN,IACpDpK,KAAK89D,MAAM58D,KAAKkJ,GAEhBg0D,GAAgBh0D,EAAMmK,OAAOhL,UAgBjDm0D,EAAwB/9D,UAAU0+D,SAAW,SAAUN,GACnD,GAAIhL,GAAKz2C,gBAAckC,IACnBmc,EAAUojC,EAAWz9C,MAAMlB,QAAQ2zC,EACvCgL,GAAWlvD,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqB/L,EAAGo3B,IAEtEj7B,OAAOuC,eAAey7D,EAAwB/9D,UAAW,WAMrDuC,IAAK,WACD,MAAOlC,MAAK69D,qBAEhBx7D,YAAY,EACZC,cAAc,IAEXo7D,KCpJP9oD,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,uBAA2BC,QAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI1K,KAAK0K,GAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASK,KAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,GAAIyV,QAgCnF42C,GAAyB,SAAUx2C,GAOnC,QAASw2C,KACL,GAAIt2C,GAAQF,EAAO3V,KAAKG,KAAM,GAAI4O,KAAoB5O,IAetD,OARA0V,GAAM4oD,qBAAuB,KAM7B5oD,EAAMpF,UAAY,KAClBoF,EAAMqF,aACCrF,EAmMX,MAzNAd,IAAUo3C,EAASx2C,GAwBnB9V,OAAOuC,eAAe+pD,EAAQrsD,UAAW,YAMrCuC,IAAK,WACD,MAAqB,QAAjBlC,KAAK0yD,SAA4C,OAAxB1yD,KAAK0yD,QAAQnqD,OAC/BvI,KAAK0yD,QAAQnqD,OAAOgT,SAGpB,MAGflZ,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+pD,EAAQrsD,UAAW,YAwBrCuC,IAAK,WACD,GAAIe,GAASjD,KAAKu+D,aAAap/B,QAE/B,OADAl8B,GAAO69B,YAAc9gC,KACdiD,GAEXZ,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+pD,EAAQrsD,UAAW,cAKrCuC,IAAK,WACD,GAAqB,OAAjBlC,KAAK0yD,QACL,KAAM,IAAIp8C,OAAM,6CAEpB,OAA+B,QAAxBtW,KAAK0yD,QAAQnqD,OAAkBvI,KAAK0yD,QAAQ8L,eAAe17D,WAAa9C,KAAK0yD,QAAQnqD,OAAOgT,SAASzY,YAEhHT,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+pD,EAAQrsD,UAAW,QAKrCuC,IAAK,WACD,MAAOlC,MAAK0yD,QAAQ0J,aAAa16D,MAErCW,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+pD,EAAQrsD,UAAW,UAKrCuC,IAAK,WACD,MAAOlC,MAAK0yD,QAAQ0J,aAAaH,QAErC55D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+pD,EAAQrsD,UAAW,eAKrCuC,IAAK,WAQD,MAPiC,OAA7BlC,KAAKs+D,uBACLt+D,KAAKs+D,qBAAuB,GAAIZ,IAAwB19D,MAExDA,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqB9E,OAAQxK,KAAKs+D,qBAAqBxqD,SAE3F9T,KAAKs+D,qBAAqBG,YAAcz+D,KAAK6O,WAAWU,MAAMnP,SAASJ,KAAKsP,qBAAqB9E,SAE9FxK,KAAKs+D,sBAEhBj8D,YAAY,EACZC,cAAc,IAOlB0pD,EAAQrsD,UAAUob,WAAa,WAC3B/a,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM,GAAI1G,GAAQ,SAC3E3B,KAAK6O,WAAWgC,sBAAwB,GAAIgB,GAAyB7R,OAMzEgsD,EAAQrsD,UAAU++D,WAAa,SAAUhM,GACrC1yD,KAAK0yD,QAAUA,EACf1yD,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqB/G,OAAQ,GAAIkP,GAAmBi7C,KAM5F1G,EAAQrsD,UAAUg/D,cAAgB,WAC9B3+D,KAAK4+D,cAAe,GAyBxB5S,EAAQrsD,UAAUk/D,cAAgB,WAC9B,GAAIrkC,GAAcx6B,KAAK0yD,QAAQyJ,gBAAgBn8D,MAAM,EACrD,OAAO,IAAIsf,GAAMkb,EAAYlxB,MAAOkxB,EAAYjxB,SAMpDyiD,EAAQrsD,UAAUmR,cAAgB,WAC9B,GAAIguD,GAAM9+D,KAAKub,aACIpC,WAAR2lD,IAA4B,MAAPA,GAC5B9+D,KAAK++D,kBAAkBD,GAEL,MAAlB9+D,KAAKsQ,eAA+C,KAAnBtQ,KAAKsQ,WACtCtQ,KAAKsQ,UAAUtQ,OAOvBgsD,EAAQrsD,UAAUo/D,kBAAoB,SAAUxjD,GAG5C,GADuBvb,KAAK0yD,QAAQsM,kBAAkBzjD,EAAUvb,MAAM,GAChD,CAClB,GAAIi/D,GAAY,GAAI/D,IAAal7D,MAAM,EAGvC,IAFAA,KAAKu9D,OAAO/oD,OAAO,EAAGyqD,GACtBj/D,KAAK0yD,QAAQwM,cAAcl/D,KAAMi/D,EAAW1jD,GAAU,GAC3B,OAAvB0jD,EAAU9/B,cAAmD,KAAvB8/B,EAAU9/B,SAChD,IAAK,GAAIj8B,GAAI,EAAGA,EAAI+7D,EAAU9/B,SAASH,gBAAgBA,gBAAgBh+B,OAAQkC,IAAK,CAChF,GAAI67B,GAAYkgC,EAAU9/B,SAASH,gBAAgBA,gBAAgB97B,EACnE67B,GAAUgC,MAAMmxB,YAAY+M,EAAU9/B,SAAUJ,EAAUkB,SAAUlB,EAAUmB,SAAUnB,EAAUoB,WAM9G,GADwBngC,KAAK0yD,QAAQsM,kBAAkBzjD,EAAUvb,MAAM,GAChD,CACnB,GAAIm/D,GAAa,GAAIjE,IAAal7D,MAAM,EACxCA,MAAKu9D,OAAO9pD,IAAI0rD,GAChBn/D,KAAK0yD,QAAQwM,cAAcl/D,KAAMm/D,EAAY5jD,GAAU,KAGxDywC,GACTwQ,ICjQE4C,GAAoC,WACpC,QAASA,GAAmBv+B,GAEpB7gC,KAAKu7D,YADW,KAAT16B,EACQA,EAGA,KAcvB,MAXAnhC,QAAOuC,eAAem9D,EAAmBz/D,UAAW,QAKhDuC,IAAK,WACD,MAAOlC,MAAKu7D,SAEhBl5D,YAAY,EACZC,cAAc,IAEX88D,KCpBPC,GAA0C,WAM1C,QAASA,GAAyB3M,GAO9B,GADA1yD,KAAKs9D,WAAa,KACH,MAAX5K,EACA,KAAMp8C,OAAM,mCAEhBtW,MAAK0yD,QAAUA,EAuCnB,MArCAhzD,QAAOuC,eAAeo9D,EAAyB1/D,UAAW,WAMtDuC,IAAK,WACD,MAAOlC,MAAKs9D,YAEhBl7D,IAAK,SAAU7B,GACXP,KAAKs9D,WAAa/8D,GAEtB8B,YAAY,EACZC,cAAc,IAOlB+8D,EAAyB1/D,UAAUqU,SAAW,SAAU6sB,GACpD,MAAO7gC,MAAK0yD,QAAQ1+C,SAAS6sB,IAMjCw+B,EAAyB1/D,UAAUe,OAAS,SAAUmgC,GAClD7gC,KAAK0yD,QAAQhyD,OAAOmgC,IAMxBw+B,EAAyB1/D,UAAU8T,IAAM,WACrC,MAAOzT,MAAK0yD,QAAQj/C,OAEjB4rD,KCrDPC,GAAqC,WAMrC,QAASA,MA2RT,MAxRA5/D,QAAOuC,eAAeq9D,EAAoB3/D,UAAW,QAOjDuC,IAAK,WACD,MAAOlC,MAAKu/D,cAEhBn9D,IAAK,SAAU7B,GACXP,KAAKu/D,aAAev/D,KAAKw/D,aAAaj/D,EAAO01B,eAAa6/B,OAE9DzzD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,OAKjDuC,IAAK,WACD,MAAOlC,MAAKy/D,aAEhBr9D,IAAK,SAAU7B,GACXP,KAAKy/D,YAAcz/D,KAAKw/D,aAAaj/D,EAAO01B,eAAa3T,MAE7DjgB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,SAKjDuC,IAAK,WACD,MAAOlC,MAAK0/D,eAEhBt9D,IAAK,SAAU7B,GACXP,KAAK0/D,cAAgB1/D,KAAKw/D,aAAaj/D,EAAO01B,eAAa27B,QAE/DvvD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,UAKjDuC,IAAK,WACD,MAAOlC,MAAK2/D,gBAEhBv9D,IAAK,SAAU7B,GACXP,KAAK2/D,eAAiB3/D,KAAKw/D,aAAaj/D,EAAO01B,eAAa87B,SAEhE1vD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,YAKjDuC,IAAK,WACD,MAAOlC,MAAK4/D,UAEhBx9D,IAAK,SAAU7B,GACXP,KAAK4/D,SAAW5/D,KAAKw/D,aAAaj/D,EAAO01B,eAAa6/B,OAE1DzzD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,WAKjDuC,IAAK,WACD,MAAOlC,MAAK6/D,SAEhBz9D,IAAK,SAAU7B,GACXP,KAAK6/D,QAAU7/D,KAAKw/D,aAAaj/D,EAAO01B,eAAa3T,MAEzDjgB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,aAKjDuC,IAAK,WACD,MAAOlC,MAAK8/D,WAEhB19D,IAAK,SAAU7B,GACXP,KAAK8/D,UAAY9/D,KAAKw/D,aAAaj/D,EAAO01B,eAAa27B,QAE3DvvD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,cAKjDuC,IAAK,WACD,MAAOlC,MAAK+/D,YAEhB39D,IAAK,SAAU7B,GACXP,KAAK+/D,WAAa//D,KAAKw/D,aAAaj/D,EAAO01B,eAAa87B,SAE5D1vD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,WAKjDuC,IAAK,WACD,MAAOlC,MAAKggE,SAEhB59D,IAAK,SAAU7B,GACXP,KAAKggE,QAAUhgE,KAAKw/D,aAAaj/D,EAAO01B,eAAa6/B,OAEzDzzD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,UAKjDuC,IAAK,WACD,MAAOlC,MAAKigE,QAEhB79D,IAAK,SAAU7B,GACXP,KAAKigE,OAASjgE,KAAKw/D,aAAaj/D,EAAO01B,eAAa3T,MAExDjgB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,YAKjDuC,IAAK,WACD,MAAOlC,MAAKkgE,UAEhB99D,IAAK,SAAU7B,GACXP,KAAKkgE,SAAWlgE,KAAKw/D,aAAaj/D,EAAO01B,eAAa27B,QAE1DvvD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq9D,EAAoB3/D,UAAW,aAKjDuC,IAAK,WACD,MAAOlC,MAAKmgE,WAEhB/9D,IAAK,SAAU7B,GACXP,KAAKmgE,UAAYngE,KAAKw/D,aAAaj/D,EAAO01B,eAAa87B,SAE3D1vD,YAAY,EACZC,cAAc,IAOlBg9D,EAAoB3/D,UAAUygE,QAAU,SAAUv/B,GAC9C,GAAY,MAARA,EACA,KAAM,IAAIvqB,OAAM,6BAYpB,OARWtW,MAAKqgE,OAAOx/B,GAEU,MAAjB7gC,KAAKsgE,SAAoBtgE,KAAKsgE,SAAWtgE,KAAK+f,KAG9B,MAAhB/f,KAAKugE,QAAmBvgE,KAAKugE,QAAUvgE,KAAK+f,MAShEu/C,EAAoB3/D,UAAU6gE,OAAS,SAAU3/B,GAC7C,GAAY,MAARA,EACA,KAAM,IAAIvqB,OAAM,6BAYpB,OARWtW,MAAKqgE,OAAOx/B,GAES,MAAhB7gC,KAAKygE,QAAmBzgE,KAAKygE,QAAUzgE,KAAKggB,IAG7B,MAAfhgB,KAAK0gE,OAAkB1gE,KAAK0gE,OAAS1gE,KAAKggB,KAS9Ds/C,EAAoB3/D,UAAUghE,SAAW,SAAU9/B,GAC/C,GAAY,MAARA,EACA,KAAM,IAAIvqB,OAAM,6BAYpB,OARWtW,MAAKqgE,OAAOx/B,GAEW,MAAlB7gC,KAAK4gE,UAAqB5gE,KAAK4gE,UAAY5gE,KAAKigB,MAG/B,MAAjBjgB,KAAK6gE,SAAoB7gE,KAAK6gE,SAAW7gE,KAAKigB,OASlEq/C,EAAoB3/D,UAAUmhE,UAAY,SAAUjgC,GAChD,GAAY,MAARA,EACA,KAAM,IAAIvqB,OAAM,6BAYpB,OARWtW,MAAKqgE,OAAOx/B,GAEY,MAAnB7gC,KAAK+gE,WAAsB/gE,KAAK+gE,WAAa/gE,KAAKkgB,OAGhC,MAAlBlgB,KAAKghE,UAAqBhhE,KAAKghE,UAAYhhE,KAAKkgB,QASpEo/C,EAAoB3/D,UAAU0gE,OAAS,SAAUx/B,GAC7C,GAAI54B,GAAQ44B,EAAK6xB,QAAQn3C,SAAStT,KASlC,QAPIA,EAAMg5D,oBAAoBz/D,YAAYq/B,GAC9B54B,EAAMg5D,oBAAoB7gE,SAASygC,GAAQ,EAG3C54B,EAAM3E,QAAQu9B,GAAQ,GAEb,GAAO,GAOhCy+B,EAAoB3/D,UAAU6/D,aAAe,SAAU0B,EAAiB74D,GACpE,GAAuB,MAAnB64D,EAAyB,CACzB,OAAqC,KAAzBA,EAAgB74D,MAA0B64D,EAAgB74D,OAAS4tB,eAAarT,KACxF,KAAM,IAAItM,OAAM,uFAEpB4qD,GAAgB74D,KAAOA,EAE3B,MAAO64D,IAEJ5B,KCvSP1qD,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,uBAA2BC,QAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI1K,KAAK0K,GAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASK,KAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,GAAIyV,QAUnF+rD,GAAoC,SAAU3rD,GAO9C,QAAS2rD,KACL,GAAIzrD,GAAQF,EAAO3V,KAAKG,OAASA,IAEjC,OADA0V,GAAM0rD,UAAY1rD,EAAM2rD,SAAW3rD,EAAM4rD,WAAa5rD,EAAM6rD,YAAc7rD,EAAM8rD,YAAa,EACtF9rD,EAyEX,MAlFAd,IAAUusD,EAAoB3rD,GAW9B9V,OAAOuC,eAAek/D,EAAmBxhE,UAAW,6BAMhDuC,IAAK,WACD,MAAOlC,MAAKohE,WAEhBh/D,IAAK,SAAU7B,GACXP,KAAKohE,UAAY7gE,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek/D,EAAmBxhE,UAAW,4BAKhDuC,IAAK,WACD,MAAOlC,MAAKqhE,UAEhBj/D,IAAK,SAAU7B,GACXP,KAAKqhE,SAAW9gE,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek/D,EAAmBxhE,UAAW,8BAKhDuC,IAAK,WACD,MAAOlC,MAAKshE,YAEhBl/D,IAAK,SAAU7B,GACXP,KAAKshE,WAAa/gE,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek/D,EAAmBxhE,UAAW,+BAKhDuC,IAAK,WACD,MAAOlC,MAAKuhE,aAEhBn/D,IAAK,SAAU7B,GACXP,KAAKuhE,YAAchhE,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAek/D,EAAmBxhE,UAAW,uBAKhDuC,IAAK,WACD,MAAOlC,MAAKwhE,YAEhBp/D,IAAK,SAAU7B,GACXP,KAAKwhE,WAAajhE,GAEtB8B,YAAY,EACZC,cAAc,IAEX6+D,GACT7B,ICxFEmC,GAA4B,WAC5B,QAASA,GAAWlmD,EAAU6gD,GAO1Bp8D,KAAK0hE,UAAY,GAAItC,IAKrBp/D,KAAK2hE,YAKL3hE,KAAKsP,qBAAuB,GAAItH,GAChChI,KAAK6qB,YAActP,MACS,KAAjB6gD,GACPp8D,KAAK23B,SAAWpc,EAAS6gD,aAAav5D,QACtC7C,KAAK4hE,gBAAkB5hE,KAAK23B,SAAS90B,UAGrC7C,KAAK23B,SAAWykC,EAAav5D,QAC7B7C,KAAK4hE,gBAAkB5hE,KAAK23B,SAAS90B,SAEzC7C,KAAK+a,aAudT,MArdArb,QAAOuC,eAAew/D,EAAW9hE,UAAW,UAMxCuC,IAAK,WACD,MAAOlC,MAAK6hE,mBAEhBz/D,IAAK,SAAU7B,GACXP,KAAK6hE,kBAAoBthE,EACzBP,KAAK0yD,QAAQnjD,MAAM/O,SAASR,KAAKsP,qBAAqB/G,OAAQ,GAAIkP,GAAmBlX,KAEzF8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew/D,EAAW9hE,UAAW,kBAKxCuC,IAAK,WACD,MAAOlC,MAAK6qB,aAEhBxoB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew/D,EAAW9hE,UAAW,gBAKxCuC,IAAK,WACD,MAAOlC,MAAK23B,UAEhBv1B,IAAK,SAAU7B,GACX,GAAa,MAATA,EAIA,KAAM+V,OAAM,yBAHZtW,MAAK23B,SAAWp3B,GAMxB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew/D,EAAW9hE,UAAW,WAKxCuC,IAAK,WACD,MAAOlC,MAAK0yD,SAEhBrwD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew/D,EAAW9hE,UAAW,SAKxCuC,IAAK,WACD,MAAOlC,MAAK8hE,gBAAgB35D,OAEhC9F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew/D,EAAW9hE,UAAW,YAKxCuC,IAAK,WAID,MAHyB,OAArBlC,KAAK+hE,eACL/hE,KAAK+hE,aAAe,GAAIZ,KAErBnhE,KAAK+hE,cAEhB3/D,IAAK,SAAU7B,GACXP,KAAK+hE,aAAexhE,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew/D,EAAW9hE,UAAW,YAKxCuC,IAAK,WACD,MAAOlC,MAAK6hE,kBAAkBtmD,UAElClZ,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew/D,EAAW9hE,UAAW,SAKxCuC,IAAK,WAID,MAH4B,OAAxBlC,KAAKgiE,qBAA2D,KAAzBhiE,KAAKgiE,kBAC5ChiE,KAAKgiE,gBAAkB,GAAI3C,IAAyBr/D,OAEjDA,KAAKgiE,iBAEhB3/D,YAAY,EACZC,cAAc,IAOlBm/D,EAAW9hE,UAAUgzD,SAAW,WAC5B,MAAO3yD,MAAK2hE,UAMhBF,EAAW9hE,UAAUsiE,iBAAmB,SAAUphC,EAAMjD,GACpD,GAAIrpB,GAASvU,KAAKm8D,gBAAgBt7B,GAAM,EAGxC,OAFAjD,GAAMlrB,GAAK6B,EAAO7B,EAClBkrB,EAAMjrB,EAAI3S,KAAKo8D,aAAa7yD,OAAUq0B,EAAQ,EACvCA,GAOX6jC,EAAW9hE,UAAUuiE,gBAAkB,SAAUvqC,GAC7C33B,KAAK23B,SAAWA,EAChB33B,KAAKoR,MAAMomB,YAAcG,EAASH,YAClCx3B,KAAKoR,MAAMpG,OAAS2sB,EAAS3sB,OAC7BhL,KAAKoR,MAAM1P,KAAOi2B,EAASj2B,KAC3B1B,KAAKoR,MAAM6qD,OAAStkC,EAASskC,QAMjCwF,EAAW9hE,UAAUob,WAAa,WAC9B/a,KAAK8hE,gBAAkB,GAAIhvD,GAC3B9S,KAAK0yD,QAAU,GAAI9jD,GACnB5O,KAAKoR,MAAQ,GAAI+wD,IAAkBniE,KAAK6qB,aACxC7qB,KAAK0yD,QAAQvhD,iBAAmB,GAAIS,GAAwB5R,KAAMA,KAAKoR,OACvEpR,KAAKoiE,UAAY,GAAItwD,GAAU,GAC/B9R,KAAK0yD,QAAQnjD,MAAM/O,SAASR,KAAKsP,qBAAqBnH,MAAOnI,KAAKoiE,WAClEpiE,KAAK0yD,QAAQnjD,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM,GAAI1G,GAAQ3B,KAAKsP,qBAAqBrH,QAClGjI,KAAK0yD,QAAQnjD,MAAM/O,SAASR,KAAKsP,qBAAqBpH,KAAMlI,KAAK8hE,kBAUrEL,EAAW9hE,UAAUq/D,kBAAoB,SAAUzjD,EAAUslB,EAAMwhC,GAC/D,GAAIC,GAAkBtiE,KAAKuiE,qBAAqBhnD,EAAUslB,EAAMwhC,GAC5DG,EAAmBxiE,KAAKyiE,oBAAoB5hC,EAAMwhC,EACtD,OAAQC,GAAgBthE,OAAS,GAAKwhE,EAAiBxhE,OAAS,GAYpEygE,EAAW9hE,UAAU4iE,qBAAuB,SAAUhnD,EAAUslB,EAAMwhC,GAClE,GAAIK,KAqBJ,OApBI1iE,MAAK+uD,SAAS4T,0BAA8D,MAAlCpnD,EAASwzC,SAASyR,OAAO3/B,MAC5DtlB,EAASwzC,SAASyR,OAAO3/B,GAAMwhC,aAAcA,GAAiB9mD,EAASwzC,SAASyR,OAAO3/B,GAAMwhC,YAAcA,IAC9GK,EAAUxhE,KAAKqa,EAASwzC,SAASyR,OAAO3/B,IAG5C7gC,KAAK+uD,SAAS6T,6BAAoE,MAArCrnD,EAASwzC,SAAS+R,UAAUjgC,MAClEtlB,EAASwzC,SAAS+R,UAAUjgC,GAAMwhC,aAAcA,GAAiB9mD,EAASwzC,SAAS+R,UAAUjgC,GAAMwhC,YAAcA,IACpHK,EAAUxhE,KAAKqa,EAASwzC,SAAS+R,UAAUjgC,IAG/C7gC,KAAK+uD,SAAS8T,2BAAgE,MAAnCtnD,EAASwzC,SAASqR,QAAQv/B,MAC9DtlB,EAASwzC,SAASqR,QAAQv/B,GAAMwhC,aAAcA,GAAiB9mD,EAASwzC,SAASqR,QAAQv/B,GAAMwhC,YAAcA,IAChHK,EAAUxhE,KAAKqa,EAASwzC,SAASqR,QAAQv/B,IAG7C7gC,KAAK+uD,SAAS+T,4BAAkE,MAApCvnD,EAASwzC,SAAS4R,SAAS9/B,MAChEtlB,EAASwzC,SAAS4R,SAAS9/B,GAAMwhC,aAAcA,GAAiB9mD,EAASwzC,SAAS4R,SAAS9/B,GAAMwhC,YAAcA,IAClHK,EAAUxhE,KAAKqa,EAASwzC,SAAS4R,SAAS9/B,IAG3C6hC,GAUXjB,EAAW9hE,UAAU8iE,oBAAsB,SAAU5hC,EAAMwhC,GACvD,GAAIK,KAmBJ,IAlBkC,MAA9B1iE,KAAK+uD,SAASyR,OAAO3/B,OACjBkhC,EAAe/hE,KAAK+uD,SAASyR,OAAO3/B,IACpBwhC,aAAcA,GAAiBN,EAAaM,YAAcA,IAC1EK,EAAUxhE,KAAK6gE,GAGc,MAAjC/hE,KAAK+uD,SAAS+R,UAAUjgC,OACpBkhC,EAAe/hE,KAAK+uD,SAAS+R,UAAUjgC,IACvBwhC,aAAcA,GAAiBN,EAAaM,YAAcA,IAC1EK,EAAUxhE,KAAK6gE,GAGY,MAA/B/hE,KAAK+uD,SAASqR,QAAQv/B,OAClBkhC,EAAe/hE,KAAK+uD,SAASqR,QAAQv/B,IACrBwhC,aAAcA,GAAiBN,EAAaM,YAAcA,IAC1EK,EAAUxhE,KAAK6gE,GAGa,MAAhC/hE,KAAK+uD,SAAS4R,SAAS9/B,GAAe,CACtC,GAAIkhC,GAAe/hE,KAAK+uD,SAAS4R,SAAS9/B,KACnCkhC,EAAaM,aAAcA,GAAiBN,EAAaM,YAAcA,IAC1EK,EAAUxhE,KAAK6gE,GAGvB,MAAOW,IAOXjB,EAAW9hE,UAAU8T,IAAM,SAAUotB,GACjC,OAAoB,KAATA,EAAsB,CAC7B,GAAIkiC,GAAS,GAAI/W,GAEjB,OADAhsD,MAAKyT,IAAIsvD,GACFA,EAGP,GAAIl/D,GAAI7D,KAAKgjE,cAAcniC,EAC3B7gC,MAAK2hE,SAASzgE,KAAK2/B,GACnB7gC,KAAK8hE,gBAAgBruD,IAAI5P,GACzBg9B,EAAK69B,WAAW1+D,MAChB6gC,EAAK89B,gBACL3+D,KAAKijE,gBAAgBpiC,IAO7B4gC,EAAW9hE,UAAUqjE,cAAgB,SAAUniC,GAI3C,IAAK,GAHDpN,GAAK,GAAIhc,GAAmBopB,GAC5B7sB,GAAW,EACX+nD,EAAK/7D,KAAKuI,OACLiH,EAAQ,EAAGA,EAAQusD,EAAGrJ,QAAQ1xD,OAAQwO,IAAS,CACpD,GAAIkjD,GAAUqJ,EAAGrJ,QAAQljD,EACzBwE,GAAWA,GAAY0+C,EAAQ1+C,SAAS6sB,GAE5C,MAAOpN,IAMXguC,EAAW9hE,UAAUqU,SAAW,SAAU6sB,GAEtC,MAAQ,IADI7gC,KAAKsD,QAAQu9B,IAO7B4gC,EAAW9hE,UAAU2D,QAAU,SAAUu9B,GACrC,IAAK,GAAIrxB,GAAQ,EAAGA,EAAQxP,KAAK2hE,SAAS3gE,OAAQwO,IAC9C,GAAIxP,KAAK2hE,SAASnyD,KAAWqxB,EACzB,MAAO7gC,MAAK2hE,SAASr+D,QAAQu9B,EAGrC,IAAIh9B,GAAI,GAAI4T,GAAmBopB,EAC/B,OAAO7gC,MAAK8hE,gBAAgBx+D,QAAQO,IAOxC49D,EAAW9hE,UAAUsjE,gBAAkB,SAAUpiC,GAE7C,GAAIqiC,GAAO,GAAI9D,IAAmBv+B,EAClC7gC,MAAKmjE,YAAYD,GACJljE,KAAKuI,OACXgT,SAAStT,MAAMk7D,YAAYD,GAClCljE,KAAKoiE,UAAUhwD,SAAWpS,KAAKmI,OAOnCs5D,EAAW9hE,UAAUwjE,YAAc,SAAUD,KAG7CzB,EAAW9hE,UAAUw8D,gBAAkB,SAAU38C,EAAMC,EAAMC,GACzD,GAAIF,YAAgBwsC,KAA2B,iBAATvsC,GAAoB,CACtD,GACI2jD,GAAapjE,KAAKuI,OAAOgT,QAE7B,OADSvb,MAAKm8D,gBAAgBiH,EAAY5jD,EAAMC,GAIhDD,EAAOA,EACPC,EAAOA,EACPC,EAAOA,CACP,IAAInL,GAAS,GAAIgL,GAAW,EAAG,EAAG,EAAG,EACrChL,GAAOhL,OAAS,EAASvJ,KAAKo8D,aAAa16D,KAAK6H,OAASvJ,KAAKo8D,aAAaxkC,gBAAgBruB,OAC3FgL,EAAOjL,MAAQ,EAAStJ,KAAKo8D,aAAa16D,KAAK4H,MAAQtJ,KAAKo8D,aAAaxkC,gBAAgBtuB,KACzF,IAAIyW,GAAO/f,KAAKqjE,mBAAmB7jD,EAAMC,EAAMC,GAC3C4jD,EAAQtjE,KAAKujE,mBAAmB/jD,EAAMC,EAAMC,GAC5CO,EAAQjgB,KAAKwjE,oBAAoBhkD,EAAMC,EAAMC,GAC7CQ,EAASlgB,KAAKyjE,sBAAsBjkD,EAAMC,EAAMC,EAKpD,OAJAnL,GAAO7B,GAAKqN,EACZxL,EAAO5B,GAAK2wD,EACZ/uD,EAAOjL,OAAUyW,EAAOE,EACxB1L,EAAOhL,QAAW+5D,EAAQpjD,EACnB3L,GAOfktD,EAAW9hE,UAAU0jE,mBAAqB,SAAU9nD,EAAUslB,EAAM6iC,GAChE,GAAgB,MAAZnoD,EACA,KAAM,IAAIjF,OAAM,iCAEpB,IAAY,MAARuqB,EACA,KAAM,IAAIvqB,OAAM,6BAEpB,IAAI/V,GAAQ,EAAmBP,KAAKo8D,aAAatlC,QAAQ/W,KAAO,EAC5D4jD,EAAgD,MAA/B3jE,KAAK+uD,SAASqR,QAAQv/B,GAAiB7gC,KAAK+uD,SAASqR,QAAQv/B,GAAMv3B,MAAQ,EAC5Fs6D,EAAuD,MAAnCroD,EAASwzC,SAASqR,QAAQv/B,GAAiBtlB,EAASwzC,SAASqR,QAAQv/B,GAAMv3B,MAAQ,CAE3G,OADA/I,IAAUP,KAAK+uD,mCAAsCl8C,KAAKsV,IAAIw7C,EAAeC,GAAoBD,GAOrGlC,EAAW9hE,UAAU4jE,mBAAqB,SAAUhoD,EAAUslB,EAAM6iC,GAChE,GAAgB,MAAZnoD,EACA,KAAM,IAAIjF,OAAM,iCAEpB,IAAY,MAARuqB,EACA,KAAM,IAAIvqB,OAAM,6BAEpB,IAAI/V,GAAQ,EAAmBP,KAAKo8D,aAAatlC,QAAQ9W,IAAM,EAC3D6jD,EAAgD,MAA9B7jE,KAAK+uD,SAASyR,OAAO3/B,GAAiB7gC,KAAK+uD,SAASyR,OAAO3/B,GAAMt3B,OAAS,EAC5Fu6D,EAAuD,MAAlCvoD,EAASwzC,SAASyR,OAAO3/B,GAAiBtlB,EAASwzC,SAASyR,OAAO3/B,GAAMt3B,OAAS,CAE3G,OADAhJ,IAAUP,KAAK+uD,kCAAqCl8C,KAAKsV,IAAI07C,EAAgBC,GAAqBD,GAOtGpC,EAAW9hE,UAAU6jE,oBAAsB,SAAUjoD,EAAUslB,EAAM6iC,GACjE,GAAgB,MAAZnoD,EACA,KAAM,IAAIjF,OAAM,iCAEpB,IAAY,MAARuqB,EACA,KAAM,IAAIvqB,OAAM,6BAEpB,IAAI/V,GAAQ,EAAmBP,KAAKo8D,aAAatlC,QAAQ7W,MAAQ,EAC7D0jD,EAAiD,MAAhC3jE,KAAK+uD,SAAS4R,SAAS9/B,GAAiB7gC,KAAK+uD,SAAS4R,SAAS9/B,GAAMv3B,MAAQ,EAC9Fs6D,EAAwD,MAApCroD,EAASwzC,SAAS4R,SAAS9/B,GAAiBtlB,EAASwzC,SAAS4R,SAAS9/B,GAAMv3B,MAAQ,CAE7G,OADA/I,IAAUP,KAAK+uD,oCAAuCl8C,KAAKsV,IAAIw7C,EAAeC,GAAoBD,GAOtGlC,EAAW9hE,UAAU8jE,sBAAwB,SAAUloD,EAAUslB,EAAM6iC,GACnE,GAAgB,MAAZnoD,EACA,KAAM,IAAIjF,OAAM,iCAEpB,IAAY,MAARuqB,EACA,KAAM,IAAIvqB,OAAM,6BAEpB,IAAI/V,GAAQ,EAAmBP,KAAKo8D,aAAatlC,QAAQ5W,OAAS,EAC9D2jD,EAAmD,MAAjC7jE,KAAK+uD,SAAS+R,UAAUjgC,GAAiB7gC,KAAK+uD,SAAS+R,UAAUjgC,GAAMt3B,OAAS,EAClGu6D,EAA0D,MAArCvoD,EAASwzC,SAAS+R,UAAUjgC,GAAiBtlB,EAASwzC,SAAS+R,UAAUjgC,GAAMt3B,OAAS,CAEjH,OADAhJ,IAAUP,KAAK+uD,qCAAwCl8C,KAAKsV,IAAI07C,EAAgBC,GAAqBD,GAOzGpC,EAAW9hE,UAAUe,OAAS,SAAUmgC,GACpC,GAAY,MAARA,EACA,KAAMvqB,OAAM,gCAEhB,IAAI9G,GAAQxP,KAAK2hE,SAASr+D,QAAQu9B,EAClC7gC,MAAK8hE,gBAAgBntD,SAASnF,EAE9B,KAAK,GADDu0D,MACKhwB,EAAI,EAAGA,EAAIvkC,EAAOukC,IACvBgwB,EAAe7iE,KAAKlB,KAAK2hE,SAAS5tB,GAEtC,KAASA,EAAIvkC,EAAQ,EAAGukC,EAAI/zC,KAAK2hE,SAAS3gE,OAAQ+yC,IAC9CgwB,EAAe7iE,KAAKlB,KAAK2hE,SAAS5tB,GAEtC/zC,MAAK2hE,SAAWoC,GAMpBtC,EAAW9hE,UAAUqkE,kBAAoB,SAAUC,EAAWC,EAAgB9yD,GAC1E,GAAImD,GAAS,GAAIgL,GAAWnO,EAAM6qD,OAAQ7qD,EAAM1P,KAChDuiE,GAAU10D,MAAM/O,SAASR,KAAKsP,qBAAqBhH,SAAUwK,EAASwB,cAAcC,GACpF,IAAIvJ,GAAS,CACbA,GAASm5D,GAAqBC,aAAehzD,EAAMpG,MACnD,IAAIiyB,GAAQ,GAAInrB,GAAU9G,EAC1Bi5D,GAAU10D,MAAM/O,SAASR,KAAKsP,qBAAqBtE,OAAQiyB,IAO/DwkC,EAAW9hE,UAAU2Q,UAAY,SAAUc,EAAO1O,GAC9C,GAAIo8D,GAAMp8D,EAAO6Y,QACjBvb,MAAKgkE,kBAAkBhkE,KAAK0yD,QAASoM,EAAI1C,aAAchrD,IAM3DqwD,EAAW9hE,UAAUu/D,cAAgB,SAAUr+B,EAAMuvB,EAAO70C,EAAU8mD,GAClE,GAAIC,GAAkBtiE,KAAKuiE,qBAAqBhnD,EAAUslB,EAAMwhC,GAC5DgC,EAAiBrkE,KAAKyiE,oBAAoB5hC,EAAMwhC,EACpDriE,MAAKskE,oBAAoBlU,EAAO70C,EAAU+mD,GAC1CtiE,KAAKskE,oBAAoBlU,EAAO70C,EAAU8oD,IAM9C5C,EAAW9hE,UAAU2kE,oBAAsB,SAAUlU,EAAO70C,EAAUmnD,GAClE,GAAiB,MAAbA,GAAqBA,EAAU1hE,OAAS,EAExC,IAAK,GADDoT,GAAMsuD,EAAU1hE,OACXkC,EAAI,EAAGA,EAAIkR,EAAKlR,IACNw/D,EAAUx/D,GAChBo9B,KAAK8vB,EAAO70C,IAI1BkmD,KAGPU,GAAmC,WAMnC,QAASA,GAAkB5mD,GACvBvb,KAAKm3B,gBAAkB5b,EAAS6gD,aAAa5kC,YAC7Cx3B,KAAKukE,WAAahpD,EAAS6gD,aAAapxD,OACxChL,KAAKg3B,SAAWzb,EAAS6gD,aAAa16D,KACtC1B,KAAKq3B,WAAa9b,EAAS6gD,aAAaH,OA2D5C,MAzDAv8D,QAAOuC,eAAekgE,EAAkBxiE,UAAW,eAM/CuC,IAAK,WACD,MAAOlC,MAAKm3B,iBAEhB/0B,IAAK,SAAU7B,GACXP,KAAKm3B,gBAAkB52B,GAE3B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekgE,EAAkBxiE,UAAW,UAK/CuC,IAAK,WACD,MAAOlC,MAAKukE,YAEhBniE,IAAK,SAAU7B,GACXP,KAAKukE,WAAahkE,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekgE,EAAkBxiE,UAAW,QAK/CuC,IAAK,WACD,MAAOlC,MAAKg3B,UAEhB50B,IAAK,SAAU7B,GACXP,KAAKg3B,SAAWz2B,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekgE,EAAkBxiE,UAAW,UAK/CuC,IAAK,WACD,MAAOlC,MAAKq3B,YAEhBj1B,IAAK,SAAU7B,GACXP,KAAKq3B,WAAa92B,GAEtB8B,YAAY,EACZC,cAAc,IAEX6/D,KC/jBPgC,GAAsC,WAMtC,QAASA,GAAqB5oD,GAK1Bvb,KAAKwwB,YAKLxwB,KAAKsP,qBAAuB,GAAItH,GAIhChI,KAAK6qB,YAActP,EAAS1Y,QAC5B7C,KAAK+a,aA+IT,MA7IArb,QAAOuC,eAAekiE,EAAqBxkE,UAAW,WAKlDuC,IAAK,WACD,MAAOlC,MAAKwwB,UAEhBnuB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekiE,EAAqBxkE,UAAW,YAKlDuC,IAAK,WACD,MAAOlC,MAAK6qB,aAEhBxoB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekiE,EAAqBxkE,UAAW,SAKlDuC,IAAK,WACD,MAAOlC,MAAKwwB,SAASxvB,QAEzBqB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekiE,EAAqBxkE,UAAW,WAKlDuC,IAAK,WACD,MAAOlC,MAAKiI,OAEhB5F,YAAY,EACZC,cAAc,IAOlB6hE,EAAqBxkE,UAAUob,WAAa,WACxC/a,KAAKwkE,aAAe,GAAI1yD,GAAU,GAClC9R,KAAK6hE,kBAAoB,GAAI/uD,GAC7B9S,KAAKiI,MAAQ,GAAI2G,GACjB5O,KAAKiI,MAAMqI,UAAY,GAAIkB,GAAkCxR,MAC7DA,KAAKiI,MAAMsH,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM,GAAI1G,GAAQ,UACtE3B,KAAKiI,MAAMsH,MAAM/O,SAASR,KAAKsP,qBAAqBpH,KAAMlI,KAAK6hE,mBAC/D7hE,KAAKiI,MAAMsH,MAAM/O,SAASR,KAAKsP,qBAAqBnH,MAAOnI,KAAKwkE,cAChExkE,KAAKiI,MAAMsH,MAAM/O,SAASR,KAAKsP,qBAAqBlH,UAAW,GAAIwG,IACnE5O,KAAKkiE,gBAAgBliE,KAAKiI,MAAOjI,KAAK6qB,YAAYuxC,eAMtD+H,EAAqBxkE,UAAU8kE,qBAAuB,SAAUj1D,GAC5D,GAAIA,EAAQ,GAAKA,GAASxP,KAAKmI,MAC3B,KAAM,IAAImO,OAAM,6BAEpB,OAAOtW,MAAKwwB,SAAShhB,IAMzB20D,EAAqBxkE,UAAUuiE,gBAAkB,SAAU+B,EAAW7H,GAOlE,GAAI7nD,GAAS,GAAIgL,GAAW,GAAIF,GAAU+8C,EAAa16D,KACvDuiE,GAAU10D,MAAM/O,SAASR,KAAKsP,qBAAqBhH,SAAUwK,EAASwB,cAAcC,KAMxF4vD,EAAqBxkE,UAAU8T,IAAM,SAAUi/C,GAC3C,OAAuB,KAAZA,EAAyB,CAChC,GAAIgS,GAAY,GAAIjD,IAAWzhE,KAAK6qB,YAEpC,OADA7qB,MAAKyT,IAAIixD,GACFA,EAMP,GAAI7gE,GAAI7D,KAAK2kE,aAAajS,EAI1B,OAHA1yD,MAAKwwB,SAAStvB,KAAKwxD,GACnBA,EAAQnqD,OAASvI,KACjBA,KAAK6hE,kBAAkBpuD,IAAI5P,GACpB7D,KAAKwwB,SAASltB,QAAQovD,IAOrCyR,EAAqBxkE,UAAUglE,aAAe,SAAUjS,GACpD,GAAI7uD,GAAI,GAAI4T,GAAmBi7C,EAChB1yD,MAAK6hE,kBAAkB7tD,SAASnQ,EAI/C,OAAOA,IAMXsgE,EAAqBxkE,UAAUilE,WAAa,WACxC,GAAIz8D,GAAQ,CAEZ,OADAnI,MAAKwwB,SAASq0C,QAAQ,SAAUxgE,GAAK,MAAQ8D,IAAS9D,EAAE8D,QACjDA,GAOXg8D,EAAqBxkE,UAAU2Q,UAAY,WACvCtQ,KAAKwkE,aAAapyD,SAAWpS,KAAK4kE,cAQtCT,EAAqBC,aAAe,GAC7BD,KC1KPW,GAA2C,WAM3C,QAASA,GAA0BvpD,GAK/Bvb,KAAK+kE,uBAAyB,GAAIjlE,GAClCE,KAAKub,SAAWA,EAoJpB,MAlJA7b,QAAOuC,eAAe6iE,EAA0BnlE,UAAW,SAMvDuC,IAAK,WACD,MAAOlC,MAAK4kE,cAEhBviE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6iE,EAA0BnlE,UAAW,uBAKvDuC,IAAK,WACD,MAAOlC,MAAK+kE,wBAEhB1iE,YAAY,EACZC,cAAc,IAElBwiE,EAA0BnlE,UAAU8T,IAAM,SAAUotB,GAChD,OAAoB,KAATA,EAAsB,CAC7B,GAAIkiC,GAAS,GAAI/W,GAEjB,OADAhsD,MAAKyT,IAAIsvD,GACFA,EAGO/iE,KAAKglE,iBACXvxD,IAAIotB,IAOpBikC,EAA0BnlE,UAAUqlE,eAAiB,WACjD,GAAIjJ,GAAK/7D,KAAKub,SAASiV,QAKvB,OAJ0B,KAAtBurC,EAAGrJ,QAAQ1xD,QACX+6D,EAAGtoD,MAEOsoD,EAAGrJ,QAAQqJ,EAAGrJ,QAAQ1xD,OAAS,IAOjD8jE,EAA0BnlE,UAAUwjE,YAAc,SAAUD,KAU5D4B,EAA0BnlE,UAAUilE,WAAa,WAG7C,IAAK,GAFD7I,GAAK/7D,KAAKub,SAASiV,SACnBroB,EAAQ,EACHqH,EAAQ,EAAGA,EAAQusD,EAAGrJ,QAAQ1xD,OAAQwO,IAC3CrH,GAAS4zD,EAAGrJ,QAAQljD,GAAOrH,KAE/B,OAAOA,IAMX28D,EAA0BnlE,UAAUslE,eAAiB,SAAUz1D,GAC3D,MAAOxP,MAAKklE,QAAQ11D,IAMxBs1D,EAA0BnlE,UAAUulE,QAAU,SAAU11D,GACpD,GAAKA,EAAQ,GAAOA,GAASxP,KAAKmI,MAC9B,KAAMmO,OAAM,kEAOhB,KAAK,GALDuqB,GAAO,KACPskC,EAAoB,EACpBX,EAAe,EACfY,EAAY,EACZpkE,EAAShB,KAAKub,SAASiV,SAASroB,MAC3BjF,EAAI,EAAGA,EAAIlC,EAAQkC,IAAK,CAC7B,GAAIwvD,GAAU1yD,KAAKub,SAASiV,SAASkiC,QAAQxvD,EAI7C,IAHAshE,EAAe9R,EAAQvqD,MACvBi9D,EAAY51D,EAAQ21D,EAEf31D,GAAS21D,GAAqBC,EAAYZ,EAAe,CAC1D3jC,EAAO6xB,EAAQC,WAAWyS,EAC1B,OAEJD,GAAqBX,EAEzB,MAAO3jC,IAMXikC,EAA0BnlE,UAAU2D,QAAU,SAAUu9B,GACpD,GAAIrxB,IAAS,CACb,IAAY,MAARqxB,EACA,KAAM,IAAIvqB,OAAM,8BAIhB,KAAK,GADD+uD,GAAW,EACNniE,EAAI,EAAGkR,EAAMpU,KAAKub,SAASiV,SAASroB,MAAOjF,EAAIkR,EAAKlR,IAAK,CAC9D,GAAIwvD,GAAU1yD,KAAKub,SAASiV,SAASi0C,qBAAqBvhE,EAE1D,KADAsM,EAAQkjD,EAAQpvD,QAAQu9B,KACX,EAAG,CACZrxB,GAAS61D,CACT,OAGA71D,GAAS,EAEb61D,GAAY3S,EAAQvqD,MAG5B,MAAOqH,IAMXs1D,EAA0BnlE,UAAUe,OAAS,SAAUmgC,GACnD,GAAY,MAARA,EACA,KAAMvqB,OAAM,gCAGhB,KACK,GAFDo8C,GAAU,KAELxvD,EAAI,EAAGC,EAAQnD,KAAKub,SAASiV,SAASroB,MAAOjF,EAAIC,EAAOD,IAE7D,IADAwvD,EAAU1yD,KAAKub,SAASiV,SAASi0C,qBAAqBvhE,IAC1C+E,MAAM+L,SAAS6sB,GAAO,CAC9B6xB,EAAQzqD,MAAMvH,OAAOmgC,EACrB,OAGR,MAAO6xB,IAEJoS,KC9JPQ,GAAoC,WAMpC,QAASA,KACLtlE,KAAKulE,oBACLvlE,KAAKwlE,kBAAoB,GAAI1lE,GAqEjC,MA9DAwlE,GAAmB3lE,UAAU8lE,OAAS,SAAU9hE,GAC5C,GAAIV,GAAS,KACTyiE,EAAQ1lE,KAAK2lE,SAAShiE,EAQ1B,OAPa,OAAT+hE,EACAA,EAAQ1lE,KAAK4lE,iBAERF,EAAM1kE,OAAS,IACpBiC,EAASyiE,EAAM,IAEnBA,EAAMxkE,KAAKyC,GACJV,GAOXqiE,EAAmB3lE,UAAUimE,eAAiB,WAC1C,GAAIF,KAEJ,OADA1lE,MAAKulE,iBAAiBrkE,KAAKwkE,GACpBA,GAMXJ,EAAmB3lE,UAAUgmE,SAAW,SAAU1iE,GAC9C,GAAIyiE,GAAQ,IACZ,IAAe,OAAXziE,EAEA,IAAK,GADDmR,GAAMpU,KAAKulE,iBAAiBvkE,OACvBkC,EAAI,EAAGA,EAAIkR,EAAKlR,IAAK,CAC1B,GAAIlD,KAAKulE,iBAAiBvkE,OAAS,EAAG,CAClC,GAAI6kE,GAAS7lE,KAAKulE,iBAAiBriE,EACnC,IAAI2iE,EAAO7kE,OAAS,EAAG,CACnB,GAAI8kE,GAAiBD,EAAO,EAC5B,IAAI5iE,EAAOgnB,SAAS67C,GAAiB,CACjCJ,EAAQG,CACR,YAIJ7lE,MAAK+lE,YAAYF,GAGzBzxD,EAAMpU,KAAKulE,iBAAiBvkE,OAGpC,MAAO0kE,IAKXJ,EAAmB3lE,UAAUomE,YAAc,SAAUL,GACjD,GAAc,OAAVA,EAAgB,CAChB,GAAIl2D,GAAQxP,KAAKulE,iBAAiBjiE,QAAQoiE,EAC1C1lE,MAAKulE,iBAAiBS,MAAMx2D,EAAOA,EAAQ,KAGnD81D,EAAmB3lE,UAAUqsB,QAAU,WACnChsB,KAAKwlE,sBAAoBrsD,GACzBnZ,KAAKulE,qBAAmBpsD,IAErBmsD,KCrFP1wD,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,uBAA2BC,QAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI1K,KAAK0K,GAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,GAE5B,OAAO,UAAUD,EAAGC,GAEhB,QAASK,KAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,GAAIyV,QAmCnFmX,GAA6B,SAAU/W,GAEvC,QAAS+W,GAAY05C,GACjB,GAAIvwD,GAAQF,EAAO3V,KAAKG,OAASA,IAMjC0V,GAAMwwD,cAAgB,GAMtBxwD,EAAMgL,aAAe,KACrBhL,EAAM6F,SAAW7F,CACjB,IAAIywD,IAAU,MACW,KAAdF,GACP15C,EAAY65C,gBAAkB,GAAId,IAClCa,GAAU,GAGVA,EAAUF,CAEd,IAAIz5C,GAAU,GAAItB,EAClBxV,GAAMiX,wBAAwBH,EAC9B,IAAI1pB,GAAa,GAAI6tB,EACrB7tB,GAAWmjE,UAAYE,EACvBrjE,EAAWyY,SAAW7F,EACtBA,EAAMkX,cAAc9pB,EACpB,IAAIgqB,GAAU,GAAIyD,EAOlB,OANA7a,GAAMmX,WAAWC,GACjBN,EAAQ/Y,IAAIqZ,GACZA,EAAQzR,UAAY,EACpB3F,EAAMmsD,kBAAoB,GAAIsC,IAAqBzuD,GACnDA,EAAM2wD,uBAAyB,GAAIvB,IAA0BpvD,GAC7DoX,EAAQ7kB,MAAQyN,EAAMmsD,kBACfnsD,EA8PX,MAnSAd,IAAU2X,EAAa/W,GAuCvB9V,OAAOuC,eAAesqB,EAAa,eAM/BrqB,IAAK,WAID,MAHgC,OAA5BlC,KAAKsmE,sBACLtmE,KAAKsmE,oBAAsB,GAAIC,IAAgBrlD,gBAAcslD,UAAW,IAErExmE,KAAKsmE,qBAEhBjkE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesqB,EAAY5sB,UAAW,YAKzCuC,IAAK,WACD,MAAOlC,MAAK6hE,mBAEhBx/D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesqB,EAAY5sB,UAAW,gBAKzCuC,IAAK,WAID,MAHqB,OAAjBlC,KAAK23B,WACL33B,KAAK23B,SAAW,GAAId,IAAgB72B,KAAKkmE,gBAEtClmE,KAAK23B,UAiChBv1B,IAAK,SAAU7B,GACXP,KAAK23B,SAAWp3B,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesqB,EAAY5sB,UAAW,SAkBzCuC,IAAK,WACD,MAAOlC,MAAKqmE,wBAEhBhkE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesqB,EAAa,SAK/BrqB,IAAK,WACD,WAA2C,KAAhCqqB,EAAY65C,iBAAkE,MAA/B75C,EAAY65C,gBAC3D,GAAId,IAER/4C,EAAY65C,iBAMvBhkE,IAAK,SAAU7B,GACXP,KAAKomE,gBAAkB7lE,GAE3B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesqB,EAAa,eAK/BrqB,IAAK,WACD,MAAOlC,MAAKymE,gBAMhBrkE,IAAK,SAAU7B,GACXP,KAAKymE,eAAiBlmE,GAE1B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesqB,EAAY5sB,UAAW,cAMzCuC,IAAK,WACD,MAAKlC,MAAK46D,gBAAkBt+C,gBAAckC,KAAUxe,KAAK46D,gBAAkBt+C,gBAAcsC,MACjF5e,KAAK46D,gBAAkBt+C,gBAAcoC,UAClC1e,KAAK46D,cAGLt+C,gBAAckC,KAG7Bpc,IAAK,SAAU7B,GACNA,IAAU+b,gBAAckC,KAAUje,IAAU+b,gBAAcsC,MAC1Dre,IAAU+b,gBAAcoC,UACzB1e,KAAK46D,cAAgBr6D,EAGrBP,KAAK46D,cAAgBt+C,gBAAckC,KAG3Cnc,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAesqB,EAAY5sB,UAAW,YAMzCuC,IAAK,WAID,MAHyB,OAArBlC,KAAK+hE,eACL/hE,KAAK+hE,aAAe,GAAIzC,KAErBt/D,KAAK+hE,cAEhB3/D,IAAK,SAAU7B,GACXP,KAAK+hE,aAAexhE,GAExB8B,YAAY,EACZC,cAAc,IAElBiqB,EAAY5sB,UAAU+tB,QAAU,SAAUzpB,EAAQwb,EAAMC,GAEpD,GADA1f,KAAK0mE,qBACU,OAAXziE,EACA,KAAM,IAAIqS,OAAM,iCAEpBtW,MAAK0gB,aAAezc,CACpB,IAAIvB,GAAS,GAAIkoB,GAAU3mB,EAE3B,IADAvB,EAAO6Y,SAAWvb,KACE,iBAATyf,QAAsC,KAATC,EACpC,MAAO1f,MAAK8C,WAAWL,KAAKC,EAG5B1C,MAAK8C,WAAWL,KAAKC,EAAQ+c,IAOrC8M,EAAY5sB,UAAU+mE,mBAAqB,WACd,IAArB1mE,KAAKiI,MAAME,OACXnI,KAAKiI,MAAMwL,OAsBnB8Y,EAAY5sB,UAAUqsB,QAAU,WAC5BhsB,KAAK8sB,YAAU3T,GACfnZ,KAAKkJ,eAAaiQ,GAClBnZ,KAAKozB,qBAAmBja,GACxBnZ,KAAKqmE,2BAAyBltD,GAC9BnZ,KAAKssB,mBAAiBnT,GACtBnZ,KAAKo8D,iBAAejjD,GACpBnZ,KAAK+hE,iBAAe5oD,GACpBnZ,KAAK46D,kBAAgBzhD,GACrBnZ,KAAK6hE,sBAAoB1oD,GACzBoT,EAAYo6C,MAAM36C,UAClBhsB,KAAK8C,WAAWkuB,WAAWhF,UAC3BO,EAAYo6C,UAAQxtD,GACpBnZ,KAAK0gB,aAAasL,WAOtBO,EAAY+5C,oBAAsB,KAMlC/5C,EAAYk6C,gBAAiB,EACtBl6C,GACTF,GCzUEu6C,GAA+C,WAC/C,QAASA,MAwkBT,MAlkBAA,GAA8BC,WAAa,SAAUzyB,EAAYnrB,EAAWvnB,GACxE,GAAI2nB,GAAU,IACd,QAAQ+qB,GACJ,IAAKlzB,iBAAcslD,UACfn9C,EAAUrpB,KAAK8mE,oBAAoB1yB,EAAYnrB,EAAWvnB,EAC1D,MACJ,KAAKwf,iBAAc6lD,QACf19C,EAAUrpB,KAAKgnE,kBAAkB5yB,EAAYnrB,EAAWvnB,EACxD,MACJ,KAAKwf,iBAAc+lD,WACf59C,EAAUrpB,KAAKknE,gBAAgB9yB,EAAYnrB,EAAWvnB,EACtD,MACJ,KAAKwf,iBAAc+yB,OACf5qB,EAAUrpB,KAAKmnE,iBAAiB/yB,EAAYnrB,EAAWvnB,EACvD,MACJ,KAAKwf,iBAAckmD,aACf/9C,EAAUrpB,KAAKqnE,uBAAuBjzB,EAAYnrB,EAAWvnB,EAC7D,MACJ,SACI2nB,EAAUrpB,KAAK8mE,oBAAoB5lD,gBAAcslD,UAAWv9C,EAAWvnB,GAM/E,MAHA2nB,GAAQ3R,KAAO08B,EAAWx0C,WAC1BypB,EAAQssB,oBAAsB31C,KAAKsnE,qBACnCj+C,EAAQusB,sBAAwB51C,KAAKsnE,qBAC9Bj+C,GAOXu9C,EAA8BE,oBAAsB,SAAU1yB,EAAYnrB,EAAWvnB,GACjF,GAAI2nB,GAAU,GAAIsxB,GAiClB,QAhCK1xB,EAAYhI,eAAasI,MAAQ,IAAMN,EAAYhI,eAAauI,QAAU,GAC3EH,EAAQpd,OAASjM,KAAKunE,0BACtBl+C,EAAQnd,QAAUlM,KAAKwnE,2BACvBn+C,EAAQgrB,eAAiBr0C,KAAKynE,wBAC9Bp+C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAK0nE,gBACjDr+C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAEpC+c,EAAYhI,eAAasI,MAAQ,GACvCF,EAAQpd,OAASjM,KAAK2nE,oBACtBt+C,EAAQnd,QAAUlM,KAAK4nE,qBACvBv+C,EAAQgrB,eAAiBr0C,KAAK6nE,kBAC9Bx+C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAK0nE,gBACjDr+C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAEpC+c,EAAYhI,eAAauI,QAAU,GACzCH,EAAQpd,OAASjM,KAAK8nE,sBACtBz+C,EAAQnd,QAAUlM,KAAK+nE,uBACvB1+C,EAAQgrB,eAAiBr0C,KAAKgoE,oBAC9B3+C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKioE,YACjD5+C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAG1Cmd,EAAQpd,OAASjM,KAAKkoE,gBACtB7+C,EAAQnd,QAAUlM,KAAKmoE,iBACvB9+C,EAAQgrB,eAAiBr0C,KAAKooE,cAC9B/+C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKioE,YACjD5+C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,SAEvCmd,GAMXu9C,EAA8BI,kBAAoB,SAAU5yB,EAAYnrB,EAAWvnB,GAC/E,GAAI2nB,GAAU,GAAIsxB,GAiClB,QAhCK1xB,EAAYhI,eAAasI,MAAQ,IAAMN,EAAYhI,eAAauI,QAAU,GAC3EH,EAAQpd,OAASjM,KAAKqoE,wBACtBh/C,EAAQnd,QAAUlM,KAAKsoE,yBACvBj/C,EAAQgrB,eAAiBr0C,KAAKuoE,sBAC9Bl/C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKwoE,YACjDn/C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAEpC+c,EAAYhI,eAAasI,MAAQ,GACvCF,EAAQpd,OAASjM,KAAKyoE,kBACtBp/C,EAAQnd,QAAUlM,KAAK0oE,mBACvBr/C,EAAQgrB,eAAiBr0C,KAAK2oE,gBAC9Bt/C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKwoE,YACjDn/C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAEpC+c,EAAYhI,eAAauI,QAAU,GACzCH,EAAQpd,OAASjM,KAAK4oE,oBACtBv/C,EAAQnd,QAAUlM,KAAK6oE,qBACvBx/C,EAAQgrB,eAAiBr0C,KAAK8oE,kBAC9Bz/C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKwoE,YACjDn/C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAG1Cmd,EAAQpd,OAASjM,KAAK+oE,cACtB1/C,EAAQnd,QAAUlM,KAAKgpE,eACvB3/C,EAAQgrB,eAAiBr0C,KAAKipE,YAC9B5/C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKwoE,YACjDn/C,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,SAEvCmd,GAMXu9C,EAA8BM,gBAAkB,SAAU9yB,EAAYnrB,EAAWvnB,GAC7E,GAAI2nB,GAAU,GAAIsxB,GAiClB,QAhCK1xB,EAAYhI,eAAasI,MAAQ,IAAMN,EAAYhI,eAAauI,QAAU,GAC3EH,EAAQpd,OAASjM,KAAKkpE,sBACtB7/C,EAAQnd,QAAUlM,KAAKmpE,uBACvB9/C,EAAQgrB,eAAiBr0C,KAAKopE,oBAC9B//C,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKqpE,4BACjDhgD,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAEpC+c,EAAYhI,eAAasI,MAAQ,GACvCF,EAAQpd,OAASjM,KAAKspE,gBACtBjgD,EAAQnd,QAAUlM,KAAKupE,iBACvBlgD,EAAQgrB,eAAiBr0C,KAAKwpE,cAC9BngD,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKypE,qBACjDpgD,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAEpC+c,EAAYhI,eAAauI,QAAU,GACzCH,EAAQpd,OAASjM,KAAK0pE,kBACtBrgD,EAAQnd,QAAUlM,KAAK2pE,mBACvBtgD,EAAQgrB,eAAiBr0C,KAAK4pE,gBAC9BvgD,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAK6pE,uBACjDxgD,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,UAG1Cmd,EAAQpd,OAASjM,KAAK8pE,YACtBzgD,EAAQnd,QAAUlM,KAAK+pE,aACvB1gD,EAAQgrB,eAAiBr0C,KAAKgqE,UAC9B3gD,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKiqE,iBACjD5gD,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,SAEvCmd,GAMXu9C,EAA8BO,iBAAmB,SAAU/yB,EAAYnrB,EAAWvnB,GAC9E,GAAI2nB,GAAU,GAAIsxB,GAOlB,OANAtxB,GAAQpd,OAASjM,KAAKkqE,aACtB7gD,EAAQnd,QAAUlM,KAAKmqE,cACvB9gD,EAAQgrB,eAAiBr0C,KAAKoqE,WAC9B/gD,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKqqE,aACjDhhD,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,QACnCmd,GAMXu9C,EAA8BS,uBAAyB,SAAUjzB,EAAYnrB,EAAWvnB,GACpF,GAAI2nB,GAAU,GAAIsxB,GAOlB,OANAtxB,GAAQpd,OAASjM,KAAKsqE,mBACtBjhD,EAAQnd,QAAUlM,KAAKuqE,oBACvBlhD,EAAQgrB,eAAiBr0C,KAAKwqE,iBAC9BnhD,EAAQ3nB,KAAOA,EACf2nB,EAAQosB,WAAa,GAAI6F,IAAmBt7C,KAAKyqE,mBACjDphD,EAAQ9f,OAAS8f,EAAQpd,OAASod,EAAQnd,QACnCmd,GAMXu9C,EAA8BU,qBAAuB,KAKrDV,EAA8BsB,gBAAkB,IAKhDtB,EAA8BuB,kBAAoB,IAKlDvB,EAA8BwB,cAAgB,YAK9CxB,EAA8Be,oBAAsB,IAKpDf,EAA8BgB,sBAAwB,IAKtDhB,EAA8BiB,kBAAoB,iBAKlDjB,EAA8BkB,sBAAwB,IAKtDlB,EAA8BmB,wBAA0B,IAKxDnB,EAA8BoB,oBAAsB,oBAKpDpB,EAA8BW,0BAA4B,IAK1DX,EAA8BY,4BAA8B,IAK5DZ,EAA8Ba,wBAA0B,wBAKxDb,EAA8BmC,cAAgB,IAK9CnC,EAA8BoC,gBAAkB,IAKhDpC,EAA8BqC,YAAc,UAK5CrC,EAA8B6B,kBAAoB,IAKlD7B,EAA8B8B,oBAAsB,IAKpD9B,EAA8B+B,gBAAkB,eAKhD/B,EAA8BgC,oBAAsB,IAKpDhC,EAA8BiC,sBAAwB,IAKtDjC,EAA8BkC,kBAAoB,kBAKlDlC,EAA8ByB,wBAA0B,IAKxDzB,EAA8B0B,0BAA4B,IAK1D1B,EAA8B2B,sBAAwB,sBAKtD3B,EAA8BkD,YAAc,IAK5ClD,EAA8BmD,cAAgB,IAK9CnD,EAA8BoD,UAAY,cAK1CpD,EAA8B0C,gBAAkB,IAKhD1C,EAA8B2C,kBAAoB,IAKlD3C,EAA8B4C,cAAgB,aAK9C5C,EAA8B8C,kBAAoB,IAKlD9C,EAA8B+C,oBAAsB,IAKpD/C,EAA8BgD,gBAAkB,eAKhDhD,EAA8BsC,sBAAwB,IAKtDtC,EAA8BuC,wBAA0B,IAKxDvC,EAA8BwC,oBAAsB,mBAKpDxC,EAA8BsD,aAAe,KAK7CtD,EAA8BuD,eAAiB,IAK/CvD,EAA8BwD,WAAa,SAK3CxD,EAA8B0D,mBAAqB,IAKnD1D,EAA8B2D,qBAAuB,IAKrD3D,EAA8B4D,iBAAmB,eAKjD5D,EAA8BqB,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAM,EAC1E,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTrB,EAA8Bc,gBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAM,EAC1E,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTd,EAA8B4B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IA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AAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTzC,EAA8ByD,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxCzD,EAA8B6D,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,I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"}