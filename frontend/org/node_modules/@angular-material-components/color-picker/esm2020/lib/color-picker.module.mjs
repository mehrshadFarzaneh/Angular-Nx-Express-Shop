import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';
import { MatLegacyCardModule as MatCardModule } from '@angular/material/legacy-card';
import { MatLegacyDialogModule as MatDialogModule } from '@angular/material/legacy-dialog';
import { MatIconModule } from '@angular/material/icon';
import { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';
import { MatLegacyRadioModule as MatRadioModule } from '@angular/material/legacy-radio';
import { NgxMatColorCanvasComponent, NgxMatColorCollectionComponent, NgxMatColorPaletteComponent, NgxMatColorPickerComponent, NgxMatColorPickerInput, NgxMatColorSliderComponent, NgxMatColorToggleComponent, NGX_MAT_COLOR_PICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, NgxMatColorPickerContentComponent } from './components';
import { NumericColorInputDirective } from './directives';
import { ColorAdapter } from './services';
import * as i0 from "@angular/core";
export class NgxMatColorPickerModule {
}
/** @nocollapse */ NgxMatColorPickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ NgxMatColorPickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, declarations: [NgxMatColorPaletteComponent,
        NgxMatColorCanvasComponent,
        NgxMatColorCollectionComponent,
        NgxMatColorSliderComponent,
        NumericColorInputDirective,
        NgxMatColorPickerContentComponent,
        NgxMatColorPickerComponent,
        NgxMatColorToggleComponent,
        NgxMatColorPickerInput], imports: [CommonModule,
        MatInputModule,
        MatButtonModule,
        MatCardModule,
        MatRadioModule,
        FormsModule,
        ReactiveFormsModule,
        MatDialogModule,
        PortalModule,
        MatIconModule], exports: [NgxMatColorToggleComponent,
        NgxMatColorPickerInput,
        NgxMatColorPickerComponent] });
/** @nocollapse */ NgxMatColorPickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, providers: [
        ColorAdapter,
        NGX_MAT_COLOR_PICKER_SCROLL_STRATEGY_FACTORY_PROVIDER
    ], imports: [CommonModule,
        MatInputModule,
        MatButtonModule,
        MatCardModule,
        MatRadioModule,
        FormsModule,
        ReactiveFormsModule,
        MatDialogModule,
        PortalModule,
        MatIconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: NgxMatColorPickerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        NgxMatColorPaletteComponent,
                        NgxMatColorCanvasComponent,
                        NgxMatColorCollectionComponent,
                        NgxMatColorSliderComponent,
                        NumericColorInputDirective,
                        NgxMatColorPickerContentComponent,
                        NgxMatColorPickerComponent,
                        NgxMatColorToggleComponent,
                        NgxMatColorPickerInput
                    ],
                    imports: [
                        CommonModule,
                        MatInputModule,
                        MatButtonModule,
                        MatCardModule,
                        MatRadioModule,
                        FormsModule,
                        ReactiveFormsModule,
                        MatDialogModule,
                        PortalModule,
                        MatIconModule
                    ],
                    exports: [
                        NgxMatColorToggleComponent,
                        NgxMatColorPickerInput,
                        NgxMatColorPickerComponent
                    ],
                    entryComponents: [
                        NgxMatColorPickerContentComponent
                    ],
                    providers: [
                        ColorAdapter,
                        NGX_MAT_COLOR_PICKER_SCROLL_STRATEGY_FACTORY_PROVIDER
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItcGlja2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvbG9yLXBpY2tlci9zcmMvbGliL2NvbG9yLXBpY2tlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUscUJBQXFCLElBQUksZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDM0YsT0FBTyxFQUFFLG1CQUFtQixJQUFJLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3JGLE9BQU8sRUFBRSxxQkFBcUIsSUFBSSxlQUFlLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMzRixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG9CQUFvQixJQUFJLGNBQWMsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxvQkFBb0IsSUFBSSxjQUFjLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4RixPQUFPLEVBQ0wsMEJBQTBCLEVBQzFCLDhCQUE4QixFQUM5QiwyQkFBMkIsRUFDM0IsMEJBQTBCLEVBQzFCLHNCQUFzQixFQUFFLDBCQUEwQixFQUNsRCwwQkFBMEIsRUFDMUIscURBQXFELEVBQ3JELGlDQUFpQyxFQUNsQyxNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFlBQVksQ0FBQzs7QUF1QzFDLE1BQU0sT0FBTyx1QkFBdUI7O3VJQUF2Qix1QkFBdUI7d0lBQXZCLHVCQUF1QixpQkFuQ2hDLDJCQUEyQjtRQUMzQiwwQkFBMEI7UUFDMUIsOEJBQThCO1FBQzlCLDBCQUEwQjtRQUMxQiwwQkFBMEI7UUFDMUIsaUNBQWlDO1FBQ2pDLDBCQUEwQjtRQUMxQiwwQkFBMEI7UUFDMUIsc0JBQXNCLGFBR3RCLFlBQVk7UUFDWixjQUFjO1FBQ2QsZUFBZTtRQUNmLGFBQWE7UUFDYixjQUFjO1FBQ2QsV0FBVztRQUNYLG1CQUFtQjtRQUNuQixlQUFlO1FBQ2YsWUFBWTtRQUNaLGFBQWEsYUFHYiwwQkFBMEI7UUFDMUIsc0JBQXNCO1FBQ3RCLDBCQUEwQjt3SUFVakIsdUJBQXVCLGFBTHZCO1FBQ1QsWUFBWTtRQUNaLHFEQUFxRDtLQUN0RCxZQXRCQyxZQUFZO1FBQ1osY0FBYztRQUNkLGVBQWU7UUFDZixhQUFhO1FBQ2IsY0FBYztRQUNkLFdBQVc7UUFDWCxtQkFBbUI7UUFDbkIsZUFBZTtRQUNmLFlBQVk7UUFDWixhQUFhOzJGQWVKLHVCQUF1QjtrQkFyQ25DLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLDJCQUEyQjt3QkFDM0IsMEJBQTBCO3dCQUMxQiw4QkFBOEI7d0JBQzlCLDBCQUEwQjt3QkFDMUIsMEJBQTBCO3dCQUMxQixpQ0FBaUM7d0JBQ2pDLDBCQUEwQjt3QkFDMUIsMEJBQTBCO3dCQUMxQixzQkFBc0I7cUJBQ3ZCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGNBQWM7d0JBQ2QsZUFBZTt3QkFDZixhQUFhO3dCQUNiLGNBQWM7d0JBQ2QsV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLGVBQWU7d0JBQ2YsWUFBWTt3QkFDWixhQUFhO3FCQUNkO29CQUNELE9BQU8sRUFBRTt3QkFDUCwwQkFBMEI7d0JBQzFCLHNCQUFzQjt3QkFDdEIsMEJBQTBCO3FCQUMzQjtvQkFDRCxlQUFlLEVBQUU7d0JBQ2YsaUNBQWlDO3FCQUNsQztvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsWUFBWTt3QkFDWixxREFBcUQ7cUJBQ3REO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9ydGFsTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBNYXRMZWdhY3lCdXR0b25Nb2R1bGUgYXMgTWF0QnV0dG9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvbGVnYWN5LWJ1dHRvbic7XHJcbmltcG9ydCB7IE1hdExlZ2FjeUNhcmRNb2R1bGUgYXMgTWF0Q2FyZE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2xlZ2FjeS1jYXJkJztcclxuaW1wb3J0IHsgTWF0TGVnYWN5RGlhbG9nTW9kdWxlIGFzIE1hdERpYWxvZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2xlZ2FjeS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XHJcbmltcG9ydCB7IE1hdExlZ2FjeUlucHV0TW9kdWxlIGFzIE1hdElucHV0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvbGVnYWN5LWlucHV0JztcclxuaW1wb3J0IHsgTWF0TGVnYWN5UmFkaW9Nb2R1bGUgYXMgTWF0UmFkaW9Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9sZWdhY3ktcmFkaW8nO1xyXG5pbXBvcnQge1xyXG4gIE5neE1hdENvbG9yQ2FudmFzQ29tcG9uZW50LFxyXG4gIE5neE1hdENvbG9yQ29sbGVjdGlvbkNvbXBvbmVudCxcclxuICBOZ3hNYXRDb2xvclBhbGV0dGVDb21wb25lbnQsXHJcbiAgTmd4TWF0Q29sb3JQaWNrZXJDb21wb25lbnQsXHJcbiAgTmd4TWF0Q29sb3JQaWNrZXJJbnB1dCwgTmd4TWF0Q29sb3JTbGlkZXJDb21wb25lbnQsXHJcbiAgTmd4TWF0Q29sb3JUb2dnbGVDb21wb25lbnQsXHJcbiAgTkdYX01BVF9DT0xPUl9QSUNLRVJfU0NST0xMX1NUUkFURUdZX0ZBQ1RPUllfUFJPVklERVIsXHJcbiAgTmd4TWF0Q29sb3JQaWNrZXJDb250ZW50Q29tcG9uZW50XHJcbn0gZnJvbSAnLi9jb21wb25lbnRzJztcclxuaW1wb3J0IHsgTnVtZXJpY0NvbG9ySW5wdXREaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMnO1xyXG5pbXBvcnQgeyBDb2xvckFkYXB0ZXIgfSBmcm9tICcuL3NlcnZpY2VzJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBOZ3hNYXRDb2xvclBhbGV0dGVDb21wb25lbnQsXHJcbiAgICBOZ3hNYXRDb2xvckNhbnZhc0NvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yQ29sbGVjdGlvbkNvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yU2xpZGVyQ29tcG9uZW50LFxyXG4gICAgTnVtZXJpY0NvbG9ySW5wdXREaXJlY3RpdmUsXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbnRlbnRDb21wb25lbnQsXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yVG9nZ2xlQ29tcG9uZW50LFxyXG4gICAgTmd4TWF0Q29sb3JQaWNrZXJJbnB1dFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgTWF0SW5wdXRNb2R1bGUsXHJcbiAgICBNYXRCdXR0b25Nb2R1bGUsXHJcbiAgICBNYXRDYXJkTW9kdWxlLFxyXG4gICAgTWF0UmFkaW9Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICBNYXREaWFsb2dNb2R1bGUsXHJcbiAgICBQb3J0YWxNb2R1bGUsXHJcbiAgICBNYXRJY29uTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBOZ3hNYXRDb2xvclRvZ2dsZUNvbXBvbmVudCxcclxuICAgIE5neE1hdENvbG9yUGlja2VySW5wdXQsXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbXBvbmVudFxyXG4gIF0sXHJcbiAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICBOZ3hNYXRDb2xvclBpY2tlckNvbnRlbnRDb21wb25lbnRcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgQ29sb3JBZGFwdGVyLFxyXG4gICAgTkdYX01BVF9DT0xPUl9QSUNLRVJfU0NST0xMX1NUUkFURUdZX0ZBQ1RPUllfUFJPVklERVJcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hNYXRDb2xvclBpY2tlck1vZHVsZSB7IH1cclxuIl19