{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["../src/implementation/collections/utils.js","../src/implementation/collections/dictionary.js","../src/implementation/primitives/pdf-name.js","../src/implementation/input-output/pdf-operators.js","../src/implementation/input-output/pdf-dictionary-properties.js","../src/implementation/primitives/pdf-dictionary.js","../src/implementation/primitives/pdf-number.js","../src/implementation/primitives/pdf-array.js","../src/implementation/primitives/pdf-stream.js","../src/implementation/primitives/pdf-string.js","../src/implementation/primitives/pdf-reference.js","../src/implementation/actions/action.js","../src/implementation/actions/uri-action.js","../src/implementation/graphics/enum.js","../src/implementation/graphics/pdf-color.js","../src/implementation/drawing/pdf-drawing.js","../src/implementation/graphics/brushes/pdf-brush.js","../src/implementation/graphics/brushes/pdf-solid-brush.js","../src/implementation/graphics/fonts/enum.js","../src/implementation/graphics/fonts/pdf-string-format.js","../src/implementation/graphics/fonts/string-tokenizer.js","../src/implementation/graphics/fonts/string-layouter.js","../src/implementation/graphics/fonts/pdf-font.js","../src/implementation/input-output/pdf-writer.js","../src/implementation/input-output/enum.js","../src/implementation/input-output/pdf-main-object-collection.js","../src/implementation/document/pdf-document-base.js","../src/implementation/input-output/cross-table.js","../src/implementation/primitives/pdf-boolean.js","../src/implementation/document/pdf-viewer-preferences.js","../src/implementation/document/pdf-catalog.js","../src/implementation/input-output/pdf-cross-table.js","../src/implementation/pages/pdf-page-size.js","../src/implementation/pages/enum.js","../src/implementation/graphics/pdf-margins.js","../src/implementation/pages/pdf-page-settings.js","../src/implementation/input-output/pdf-stream-writer.js","../src/implementation/graphics/pdf-pen.js","../src/implementation/graphics/pdf-transformation-matrix.js","../src/implementation/graphics/constants.js","../src/implementation/collections/object-object-pair/dictionary.js","../src/implementation/graphics/pdf-transparency.js","../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/implementation/graphics/figures/base/graphics-element.js","../src/implementation/document/automatic-fields/automatic-field.js","../src/implementation/document/automatic-fields/automatic-field-info.js","../src/implementation/graphics/images/byte-array.js","../src/implementation/graphics/images/image-decoder.js","../src/implementation/graphics/unit-convertor.js","../src/implementation/graphics/images/pdf-image.js","../src/implementation/graphics/images/pdf-bitmap.js","../src/implementation/graphics/fonts/ttf-table-info.js","../src/implementation/graphics/fonts/ttf-name-table.js","../src/implementation/graphics/fonts/ttf-name-record.js","../src/implementation/graphics/fonts/ttf-head-table.js","../src/implementation/graphics/fonts/ttf-metrics.js","../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../src/implementation/graphics/fonts/ttf-OS2-Table.js","../src/implementation/graphics/fonts/ttf-post-table.js","../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-cmap-table.js","../src/implementation/graphics/fonts/ttf-glyph-info.js","../src/implementation/graphics/fonts/ttf-loca-table.js","../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-glyph-header.js","../src/implementation/input-output/big-endian-writer.js","../src/implementation/graphics/fonts/ttf-reader.js","../src/implementation/graphics/fonts/pdf-font-metrics.js","../src/implementation/graphics/fonts/unicode-true-type-font.js","../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../src/implementation/graphics/fonts/rtl-renderer.js","../src/implementation/graphics/figures/enum.js","../src/implementation/graphics/brushes/pdf-gradient-brush.js","../src/implementation/graphics/figures/pdf-template.js","../src/implementation/graphics/pdf-resources.js","../src/implementation/graphics/brushes/pdf-tiling-brush.js","../src/implementation/graphics/pdf-graphics.js","../src/implementation/pages/pdf-page-layer.js","../src/implementation/general/pdf-collection.js","../src/implementation/pages/pdf-page-layer-collection.js","../src/implementation/pages/pdf-page-base.js","../src/implementation/annotations/annotation-collection.js","../src/implementation/pages/pdf-page.js","../src/implementation/pages/page-added-event-arguments.js","../src/implementation/pages/pdf-section-page-collection.js","../src/implementation/document/pdf-document-template.js","../src/implementation/pages/pdf-section-templates.js","../src/implementation/pages/pdf-section.js","../src/implementation/pages/pdf-section-collection.js","../src/implementation/pages/pdf-document-page-collection.js","../src/implementation/general/pdf-cache-collection.js","../src/implementation/document/pdf-document.js","../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/implementation/graphics/fonts/pdf-standard-font.js","../src/implementation/annotations/annotation.js","../src/implementation/annotations/link-annotation.js","../src/implementation/annotations/action-link-annotation.js","../src/implementation/annotations/document-link-annotation.js","../src/implementation/graphics/figures/base/element-layouter.js","../src/implementation/structured-elements/grid/styles/pdf-borders.js","../src/implementation/graphics/figures/layout-element.js","../src/implementation/graphics/figures/base/text-layouter.js","../src/implementation/graphics/figures/text-element.js","../src/implementation/annotations/uri-annotation.js","../src/implementation/annotations/pdf-text-web-link.js","../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/implementation/document/automatic-fields/multiple-value-field.js","../src/implementation/document/automatic-fields/pdf-page-number-field.js","../src/implementation/document/automatic-fields/composite-field.js","../src/implementation/document/automatic-fields/single-value-field.js","../src/implementation/document/automatic-fields/page-count-field.js","../src/implementation/general/enum.js","../src/implementation/general/pdf-destination.js","../src/implementation/graphics/brushes/enum.js","../src/implementation/general/functions/pdf-function.js","../src/implementation/general/functions/pdf-sampled-function.js","../src/implementation/graphics/brushes/pdf-brushes.js","../src/implementation/graphics/brushes/pdf-blend.js","../src/implementation/graphics/brushes/pdf-color-blend.js","../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../src/implementation/structured-elements/tables/light-tables/enum.js","../src/implementation/structured-elements/grid/styles/style.js","../src/implementation/structured-elements/grid/pdf-grid-cell.js","../src/implementation/structured-elements/grid/pdf-grid-column.js","../src/implementation/structured-elements/grid/pdf-grid-row.js","../src/implementation/structured-elements/grid/pdf-grid.js","../src/implementation/structured-elements/grid/layout/grid-layouter.js","../src/implementation/graphics/figures/base/shape-layouter.js","../src/implementation/graphics/figures/base/pdf-shape-element.js","../src/implementation/graphics/figures/base/draw-element.js","../src/implementation/graphics/figures/base/fill-element.js","../src/implementation/graphics/figures/path.js","../src/implementation/graphics/figures/rectangle-area.js","../src/implementation/graphics/figures/ellipse-part.js","../src/implementation/graphics/figures/arc.js","../src/implementation/graphics/fonts/pdf-true-type-font.js","../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isFont = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isFont = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isFont = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isFont = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isFont = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            /* tslint:disable */\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /* tslint:enable */\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(path.pathPoints, path.pathTypes);\n        this.drawPathHelper(pen, brush, path.fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var secion = this.currentPage.section;\n                        var startIndex = secion.indexOf(startPage) + 1;\n                        var endIndex = secion.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = this.currentPage.graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                // if (cell.columnSpan > 1)\n                                // {\n                                //     for (; c < cell.columnSpan; c++)\n                                //         cellWidth += row.grid.columns.getColumn(c).width;\n                                // }\n                                // else\n                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            // if (!cancelSpans) {\n            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {\n            //         row.cells.getCell(i + k).isCellMergeContinue = true;\n            //     }\n            //}\n            var size = new SizeF(this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isFont","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","isImage","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","assignRGB","filled","redColor","greenColor","g","blueColor","grayColor","gray","alpha","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substr","text2","peekLine","line","readWord","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfPageMode","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_dictionaryProperties","_centerWindow","_fitWindow","_displayTitle","_splitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","UseNone","_pageLayout","PdfPageLayout","SinglePage","_dictionary","_duplex","DuplexMode","_catalog","_mapPageMode","_mapDuplexMode","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","readNextTwoBytes","ImageFormat","ImageDecoder","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","pstart","pend","reArrange","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","mbStroking","mfunction","mpatternDictionary","sh","aa","mcolorSpace","csValue","colorSpaceToDeviceName","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","writeTransformation","tempSize","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","mStroking","mLocation","mDictionaryProperties","PdfPage","mPage","brushStream","mResources","setBox","setObligatoryFields","mTransformationMatrix","tempBrushStream","tempResource","mBox","tileTransform","box","mGraphics","name1","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","drawPathHelper","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","lgb","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","drawPath","path","buildUpPath","pathPoints","pathTypes","fillMode","drawArc","constructArcPath","cnt","typeValue","Start","Bezier3","p2","p3","getBezierPoints","Line","checkFlags","points","pathTypesValuesMask","CloseSubpath","y1","startAng","sweepAngle","getBezierArc","pt","numX1","numY1","numX2","numY2","s1","e1","tmp","fragAngle1","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointsList","thetaValue0","thetaValue1","cos0","cos1","sin0","sin1","transparencyObject","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","settings","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","baseFormat","break","boundsSet","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","default","newBound","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfExtend","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","sizes","samples","checkParams","setDomainAndRange","setSizeAndValues","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","precision","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","factors","gcd","u","v","iU","iV","gcdInt","mcolors","getFunction","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","samplesCount","step","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","indexHi","indexLow","getIndices","positionLow","positionHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mPointStart","mPointEnd","setPoints","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","mBoundaries","radAngle","tan","centre","p1","cp1","subPoints","choosePoint","coef","mulPoints","addPoints","mulPoint","mColours","mColourBlend","initShading","mBlend","extStart","extEnd","End","point1","point2","blend","interpolationColors","PdfRadialGradientBrush","centerStart","radiusStart","centerEnd","radiusEnd","colorStart","colorEnd","mRadiusStart","mRadiusEnd","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","isHeaderRow","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","currentLocation","slr","isPaginate","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","secion","startIndex","endIndex","pageGraphics","location_2","totalwidth","i_6","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFit","isFitToCell","location_4","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","cellstyle1","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished","ShapeLayouter","olderPdfForm","shapeBounds","totalPageSize","shapeLayoutBounds","getBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","PdfShapeElement","apply","getBoundsInternal","drawShapeHelper","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mpoints","mpathTypes","mStartFigure","mfillMode","isBeziers3","isXps","addPath","getLastPoint","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","startFigure","closeFigure","addLine","addPie","addPoint","addPolygon","addRectangle","closeAllFigures","startPath","lastPoint","pointCount","fragAngle","pointList","theta0","theta1","xmin","xmax","ymin","ymax","pointType","PdfRectangleArea","PdfEllipsePart","startAngle","PdfArc","argu1","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds"],"mappings":"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C,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,I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AS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,OAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,OAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,OAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,OAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,OAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAE7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,KAAM,MAC7CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,MAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,MAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,MAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,MAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,MAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,MAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,MAC9CR,KAAKoiD,yBAAyB5hD,SAAS,KAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OAC9CR,KAAKoiD,yBAAyB5hD,SAAS,MAAO,OA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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTd,EAA8B4B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAA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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxCzD,EAA8B6D,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtB7D,KCllBP9xD,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GA0CxCixD,GAAiC,SAAU7wD,GAE3C,SAAS6wD,EAAgBmE,EAAqB9oE,EAAMsnB,GAChD,IAAItT,EAAQF,EAAO3V,KAAKG,KAAM0B,OAAwB,IAAVsnB,EAA2BwhD,aAA+BnE,EAAmBmE,EAAoBxhD,MAAQ/H,eAAaiI,QAAWF,IAAUhpB,KAwBvL,OAnBA0V,EAAMpG,qBAAuB,IAAItH,EAMjC0N,EAAM+0D,WAAa,UAAW,mBAAoB,mBAAoB,oBAClE,kBAAmB,iBAAkB,aAErC/0D,EAAMg1D,mBADyB,IAAxBF,EACetpD,gBAAcolD,UAE9BkE,aAA+BnE,EACfmE,EAAoBt2B,WAGpBs2B,EAE1B90D,EAAMi1D,aACNj1D,EAAMk1D,sBACCl1D,EA8HX,OAxJAd,GAAUyxD,EAAiB7wD,GA4B3B9V,OAAOuC,eAAeokE,EAAgB1mE,UAAW,cAO7CuC,IAAK,WACD,OAAOlC,KAAK0qE,eAEhBroE,YAAY,EACZC,cAAc,IAOlB+jE,EAAgB1mE,UAAUgrE,WAAa,WACnC,GAAI3qE,KAAKk0C,aAAehzB,gBAAc6yB,QAAU/zC,KAAKk0C,aAAehzB,gBAAcgmD,aAAc,CAC5F,IAAIl+C,EAAQhpB,KAAKgpB,MACjBA,KAAW/H,eAAasI,KAAOtI,eAAauI,QAC5CxpB,KAAKopB,SAASJ,KAOtBq9C,EAAgB1mE,UAAU8mB,aAAe,SAAU3C,EAAMsB,GACrD,GAAY,MAARtB,EACA,MAAM,IAAIxN,MAAM,8BAKpB,IAAK,IAHDhN,EAAQ,EAGHpG,GAFElD,KAAK0X,KAEH,GAAGtD,GADhB0P,EAAOuiD,EAAgBwE,QAAQ/mD,IACJ9iB,OAAQkC,EAAIkR,EAAKlR,IAAK,CAC7C,IAAIE,EAAK0gB,EAAK5gB,GAEdoG,GADgBtJ,KAAK8qE,qBAAqB1nE,EAAIgiB,GAGlD,IAAI1jB,EAAO1B,KAAKqpB,QAAQkX,QAAQnb,GAGhC,OAFA9b,GAAUyf,EAAQ2B,mBAAqBhpB,EACvC4H,EAAQtJ,KAAKsqB,oBAAoBxG,EAAMsB,EAAQ9b,IAOnD+8D,EAAgB1mE,UAAUuqB,aAAe,SAAUvhB,GAC/C,IAAIoiE,GAAQ,EACRC,EAASriE,EACb,GAAc,MAAVqiE,EAAgB,CAChB,IAAIC,EAAmBjrE,KAAKk0C,aAAe82B,EAAO92B,WAC9Cg3B,IAAiBjqD,eAAayI,UAAYzI,eAAawI,WACvD0hD,GAAcnrE,KAAKgpB,MAAQkiD,KAAkBF,EAAOhiD,MAAQkiD,GAChEH,EAASE,GAAmBE,EAEhC,OAAOJ,GAMX1E,EAAgB1mE,UAAUirE,oBAAsB,WAGhCr+C,GAAYk6C,MAAMlB,OAAOvlE,MAErC,IAAIqqB,EAAY,KAGZhB,EAAUq9C,GAA8BC,WAAW3mE,KAAK0qE,cAAe1qE,KAAKgpB,MAAOhpB,KAAK0B,MAC5F1B,KAAKqpB,QAAUA,EACfgB,EAAYrqB,KAAKq5C,kBACjBr5C,KAAKoqB,aAAaC,IAMtBg8C,EAAgB1mE,UAAU05C,gBAAkB,WACxC,IAAIxqC,EAAa,IAAID,EAIrB,GAHAC,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM,IAAI1G,EAAQ3B,KAAKsP,qBAAqB3G,OAChGkG,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBvG,QAAS,IAAIpH,EAAQ3B,KAAKsP,qBAAqB1G,QACnGiG,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBzG,SAAU,IAAIlH,EAAQ3B,KAAKqpB,QAAQ8qB,iBACnFn0C,KAAKk0C,aAAehzB,gBAAc6yB,QAAU/zC,KAAKk0C,aAAehzB,gBAAcgmD,aAAc,CAC5F,IAAIp+D,EAAW9I,KAAKyqE,UAAUnpD,eAAa8pD,iBAC3Cv8D,EAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBxG,SAAU,IAAInH,EAAQmH,IAE9E,OAAO+F,GAMXw3D,EAAgB1mE,UAAUmrE,qBAAuB,SAAUviC,EAAUnjB,GACjE,IACItL,EAAO,EACXA,EAAOyuB,EAASvxB,WAAW,GACT,MAAdhX,KAAK0X,MAA8B,MAAd1X,KAAK0X,MAA8B,MAAd1X,KAAK0X,MACjC,MAAd1X,KAAK0X,MAA8B,MAAd1X,KAAK0X,OAC1BoC,GAAcusD,EAAgBgF,YAElCvxD,EAAQA,GAAQ,GAAc,MAATA,EAAgBA,EAAO,EAI5C,OAHc9Z,KAAKqpB,QACMksB,WACNhmC,MAAMuK,IAO7BusD,EAAgBwE,QAAU,SAAUx0D,GAChC,OAAOA,GAOXgwD,EAAgBgF,WAAa,GACtBhF,GACTt9C,GClLEuiD,GAA+B,WAC/B,SAASA,EAAc9rD,GAMnBxf,KAAKsP,qBAAuB,IAAItH,EAKhChI,KAAKugB,SAAW,IAAI5D,EAAS,IAAK,IAAK,KAKvC3c,KAAKulB,UAAY,IAAIhG,EAAW,EAAG,EAAG,EAAG,GAKzCvf,KAAKm7D,QAAU,KAMfn7D,KAAKurE,UAAY,IAAIlrD,EAAc,IAAI1D,EAAS,EAAG,EAAG,IAMtD3c,KAAKwrE,SAAW,IAAInF,GAAgBnlD,gBAAc6lD,WAAY,IAM9D/mE,KAAKolB,OAAS,IAAItD,EAAgB9F,mBAAiB05C,MAKnD11D,KAAK8oB,QAAU,GAKf9oB,KAAK2b,cAAgB,IAAI/M,EAKzB5O,KAAKyrE,cAAgB,IAAI9uD,EAMzB3c,KAAK0rE,SAAW,OACI,IAATlsD,EACPxf,KAAK+a,cAGL/a,KAAK+a,aACL/a,KAAKuU,OAASiL,GAsLtB,OAnLA9f,OAAOuC,eAAeqpE,EAAc3rE,UAAW,SAM3CuC,IAAK,WACD,OAAOlC,KAAKugB,UAEhBne,IAAK,SAAU7B,GACXP,KAAKugB,SAAWhgB,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,cAK3CuC,IAAK,WACD,OAAOlC,KAAKyrE,eAEhBrpE,IAAK,SAAU7B,GACXP,KAAKyrE,cAAgBlrE,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,UAK3CuC,IAAK,WACD,OAAOlC,KAAKulB,WAEhBnjB,IAAK,SAAU7B,GACXP,KAAKulB,UAAYhlB,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,QAK3CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB94D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,QAK3CuC,IAAK,WACD,OAAOlC,KAAKwrE,UAEhBppE,IAAK,SAAU7B,GACXP,KAAKwrE,SAAWjrE,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,gBAK3CuC,IAAK,WACD,OAAOlC,KAAKolB,QAEhBhjB,IAAK,SAAU7B,GACXP,KAAKolB,OAAS7kB,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,SAK3CuC,IAAK,WACD,OAAOlC,KAAKurE,WAEhBnpE,IAAK,SAAU7B,GACXP,KAAKurE,UAAYhrE,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,QAK3CuC,IAAK,WACD,OAAOlC,KAAK8oB,SAEhB1mB,IAAK,SAAU7B,GACXP,KAAK8oB,QAAUvoB,EACfP,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBtG,SAAU,IAAImP,EAAUnY,KAAK8oB,WAE1FzmB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqpE,EAAc3rE,UAAW,cAK3CuC,IAAK,WACD,OAAOlC,KAAK2b,eAEhBvZ,IAAK,SAAU7B,GACXP,KAAK2b,cAAgBpb,GAEzB8B,YAAY,EACZC,cAAc,IAOlBgpE,EAAc3rE,UAAUob,WAAa,WACjC/a,KAAK2b,cAAc3K,oBAAsB,IAAIW,EAA2B3R,MACxEA,KAAK2b,cAAcpM,MAAM/O,SAASR,KAAKsP,qBAAqBjH,KAAM,IAAI1G,EAAQ3B,KAAKsP,qBAAqBlF,SAM5GkhE,EAAc3rE,UAAUm+D,QAAU,SAAUn9B,GACxC3gC,KAAKm7D,QAAUx6B,EACf3gC,KAAK2b,cAAcpM,MAAM/O,SAASR,KAAKsP,qBAAqBjF,EAAG,IAAIoN,EAAmBzX,KAAKm7D,WAM/FmQ,EAAc3rE,UAAU2Q,UAAY,WAChCtQ,KAAKyC,QAOT6oE,EAAc3rE,UAAU8C,KAAO,WAC3B,IAAIkpE,EAAkB,IAAIpsD,EAAWvf,KAAKulB,UAAU7S,EAAG1S,KAAKulB,UAAU5S,EAAG3S,KAAKulB,UAAUjc,MAAOtJ,KAAKulB,UAAUhc,QAC1G+oD,EAAUtyD,KAAKm7D,QAAQ7I,QACvBsZ,EAAgBD,EAAgBpiE,OAChCsiE,EAAgBvZ,EAAQwP,iBAAiB9hE,KAAK2gC,KAAM,IAAIthB,EAAOssD,EAAgBj5D,EAAGi5D,EAAgBh5D,IACtGg5D,EAAgBj5D,EAAIm5D,EAAcn5D,EAClCi5D,EAAgBriE,MAAQuiE,EAAcn5D,EAAIi5D,EAAgBriE,MAC1DqiE,EAAgBh5D,EAAKk5D,EAAcl5D,EAAI3S,KAAK2gC,KAAKplB,SAASygD,aAAanlC,QAAQ7W,IAC/E2rD,EAAgBpiE,OAASoiE,EAAgBh5D,EAAIi5D,EAC7C5rE,KAAK2b,cAAcpM,MAAM/O,SAASR,KAAKsP,qBAAqBhF,KAAMwI,EAASwB,cAAcq3D,IACzF3rE,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqB7E,GAAI,IAAIqH,EAAU9R,KAAK0rE,YAEpFhsE,OAAOuC,eAAeqpE,EAAc3rE,UAAW,WAO3CuC,IAAK,WACD,OAAOlC,KAAK2b,eAEhBtZ,YAAY,EACZC,cAAc,IAEXgpE,KC3QP12D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAmBxC02D,GAAmC,SAAUt2D,GAE7C,SAASs2D,EAAkBvmD,GACvB,OAAO/P,EAAO3V,KAAKG,KAAMulB,IAAcvlB,KAW3C,OAbA4U,GAAUk3D,EAAmBt2D,GAS7Bs2D,EAAkBnsE,UAAUob,WAAa,WACrCvF,EAAO7V,UAAUob,WAAWlb,KAAKG,MACjCA,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBvG,QAAS,IAAIpH,EAAQ3B,KAAKsP,qBAAqBpF,QAErG4hE,GACTR,IClCE12D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAkBxC22D,GAAyC,SAAUv2D,GAOnD,SAASu2D,EAAwBxmD,GAC7B,IAAI7P,EAAQF,EAAO3V,KAAKG,KAAMulB,IAAcvlB,KAQ5C,OADA0V,EAAMs2D,UAAY,KACXt2D,EAeX,OA9BAd,GAAUm3D,EAAyBv2D,GAsBnCu2D,EAAwBpsE,UAAUssE,aAAe,SAAU1rE,GACvD,QAAqB,IAAVA,EACP,OAAOP,KAAKgsE,UAGZhsE,KAAKgsE,UAAYzrE,GAGlBwrE,GACTD,IClDEl3D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GA0CxC82D,GAA2C,SAAU12D,GAErD,SAAS02D,EAA0B3mD,EAAWs4C,GAC1C,IAAInoD,EAAQF,EAAO3V,KAAKG,KAAMulB,IAAcvlB,KAW5C,OAJA0V,EAAMy2D,eAAiB,UACI,IAAhBtO,IACPnoD,EAAMmoD,YAAcA,GAEjBnoD,EAmEX,OAhFAd,GAAUs3D,EAA2B12D,GAerC9V,OAAOuC,eAAeiqE,EAA0BvsE,UAAW,eA+BvDuC,IAAK,WACD,OAAOlC,KAAKmsE,gBAEhB/pE,IAAK,SAAU7B,GAEXP,KAAKmsE,eAAiB5rE,GAG1B8B,YAAY,EACZC,cAAc,IAOlB4pE,EAA0BvsE,UAAU8C,KAAO,WACvC+S,EAAO7V,UAAU8C,KAAK5C,KAAKG,MACA,MAAvBA,KAAKmsE,gBACLnsE,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBzE,KAAM7K,KAAKmsE,eAAer4D,UAO3Fo4D,EAA0BvsE,UAAUkD,MAAQ,WACxC,IAAIuH,EAAQ,IAAI8hE,EAA0BlsE,KAAKuU,OAAQvU,KAAK69D,aAK5D,OAJAzzD,EAAMkW,MAAQtgB,KAAKsgB,MACnBlW,EAAMqW,MAAQzgB,KAAKygB,MACnBrW,EAAMyzD,YAAc79D,KAAK69D,YACzBzzD,EAAMzB,KAAO3I,KAAK2I,KACXyB,GAEJ8hE,GACTJ,ICpHEM,GAAiC,WAMjC,SAASA,EAAgBt4D,GACrB9T,KAAKqsE,cAAgBv4D,EAiDzB,OA/CApU,OAAOuC,eAAemqE,EAAgBzsE,UAAW,YAM7CuC,IAAK,WACD,OAAOlC,KAAKqsE,eAEhBhqE,YAAY,EACZC,cAAc,IAMlB8pE,EAAgBzsE,UAAU2sE,WAAa,WACnC,OAAOtsE,KAAKqsE,eAOhBD,EAAgBzsE,UAAUmlB,OAAS,SAAUynD,GACzC,OAAOvsE,KAAKwsE,eAAeD,IAE/BH,EAAgBzsE,UAAU8sE,SAAW,SAAUF,GAC3C,OAAOvsE,KAAKwsE,eAAeD,IAM/BH,EAAgBzsE,UAAU0yD,YAAc,SAAUzxB,GAG9C,OAFcA,EAAY0xB,QACH7+C,OAG3B24D,EAAgBzsE,UAAU+sE,kBAAoB,SAAUH,GACpD,GAAc,MAATA,EACD,MAAM,IAAIj2D,MAAM,iCAIpB,OAFai2D,EAAMnnD,OAAOunD,kBAAoBJ,EAAMnnD,OAAOwnD,eACrD,IAAIrtD,EAAWgtD,EAAMh4D,OAAO7B,EAAG,EAAG65D,EAAMh4D,OAAOjL,MAAOijE,EAAMh4D,OAAOhL,SAGtE6iE,KAGPS,GAAiC,WACjC,SAASA,EAAgBC,QACK,IAAfA,IAIP9sE,KAAK+sE,MAAQD,EAAWC,MACxB/sE,KAAK8kB,OAASgoD,EAAWhoD,OACzB9kB,KAAK4sE,eAAiBE,EAAWF,eACjC5sE,KAAKgtE,UAAYF,EAAWH,mBAsEpC,OAnEAjtE,OAAOuC,eAAe4qE,EAAgBltE,UAAW,UAM7CuC,IAAK,WAID,OAAOlC,KAAKitE,YAEhB7qE,IAAK,SAAU7B,GACXP,KAAKitE,WAAa1sE,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe4qE,EAAgBltE,UAAW,SAK7CuC,IAAK,WAID,OAAOlC,KAAK+nB,WAEhB3lB,IAAK,SAAU7B,GACXP,KAAK+nB,UAAYxnB,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe4qE,EAAgBltE,UAAW,kBAK7CuC,IAAK,WAID,YAHyC,IAA9BlC,KAAKktE,sBAAqE,MAA7BltE,KAAKktE,uBACzDltE,KAAKktE,qBAAuB,IAAI3tD,EAAW,EAAG,EAAG,EAAG,IAEjDvf,KAAKktE,sBAEhB9qE,IAAK,SAAU7B,GACXP,KAAKktE,qBAAuB3sE,EAC5BP,KAAKgtE,WAAY,GAErB3qE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe4qE,EAAgBltE,UAAW,qBAK7CuC,IAAK,WAID,OAAOlC,KAAKgtE,WAEhB3qE,YAAY,EACZC,cAAc,IAEXuqE,KAGPM,GAAiC,WACjC,SAASA,KA6CT,OA3CAztE,OAAOuC,eAAekrE,EAAgBxtE,UAAW,QAM7CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB/4D,IAAK,SAAU7B,GACXP,KAAKm7D,QAAU56D,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekrE,EAAgBxtE,UAAW,UAK7CuC,IAAK,WACD,OAAO,IAAIqd,EAAWvf,KAAKw1D,aAAa9iD,EAAG1S,KAAKw1D,aAAa7iD,EAAG3S,KAAKw1D,aAAalsD,MAAOtJ,KAAKw1D,aAAajsD,SAE/GnH,IAAK,SAAU7B,GACXP,KAAKw1D,aAAej1D,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekrE,EAAgBxtE,UAAW,UAK7CuC,IAAK,WACD,OAAOlC,KAAKotE,cAEhBhrE,IAAK,SAAU7B,GACXP,KAAKotE,aAAe7sE,GAExB8B,YAAY,EACZC,cAAc,IAEX6qE,KAGPE,GAAiC,WAMjC,SAASA,EAAgB1sC,EAAMpsB,GAC3BvU,KAAKm7D,QAAUx6B,EACf3gC,KAAKw1D,aAAejhD,EAyBxB,OAvBA7U,OAAOuC,eAAeorE,EAAgB1tE,UAAW,QAM7CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB94D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeorE,EAAgB1tE,UAAW,UAK7CuC,IAAK,WACD,OAAOlC,KAAKw1D,cAEhBnzD,YAAY,EACZC,cAAc,IAEX+qE,KC9NPC,GAA4B,WAM5B,SAASA,IACL,IAAIC,EAAuB,IAAI5yC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IACzD4wD,EAAqBC,UAAYpxD,eAAa2e,MAC9C,IAAI0yC,EAAwB,IAAI9yC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IAC1D8wD,EAAsBD,UAAYpxD,eAAa2e,MAC/C,IAAI2yC,EAAsB,IAAI/yC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IACxD+wD,EAAoBF,UAAYpxD,eAAa2e,MAC7C,IAAI4yC,EAAyB,IAAIhzC,GAAO,IAAIhe,EAAS,EAAG,EAAG,IAC3DgxD,EAAuBH,UAAYpxD,eAAa2e,MAChD/6B,KAAK4tE,QAAUL,EACfvtE,KAAK6tE,SAAWJ,EAChBztE,KAAK8tE,OAASJ,EACd1tE,KAAK+tE,UAAYJ,EA4FrB,OA1FAjuE,OAAOuC,eAAeqrE,EAAW3tE,UAAW,QAMxCuC,IAAK,WACD,OAAOlC,KAAK4tE,SAEhBxrE,IAAK,SAAU7B,GACXP,KAAK4tE,QAAUrtE,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqrE,EAAW3tE,UAAW,SAKxCuC,IAAK,WACD,OAAOlC,KAAK6tE,UAEhBzrE,IAAK,SAAU7B,GACXP,KAAK6tE,SAAWttE,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqrE,EAAW3tE,UAAW,OAKxCuC,IAAK,WACD,OAAOlC,KAAK8tE,QAEhB1rE,IAAK,SAAU7B,GACXP,KAAK8tE,OAASvtE,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqrE,EAAW3tE,UAAW,UAKxCuC,IAAK,WACD,OAAOlC,KAAK+tE,WAEhB3rE,IAAK,SAAU7B,GACXP,KAAK+tE,UAAYxtE,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqrE,EAAW3tE,UAAW,OAKxCyC,IAAK,SAAU7B,GACXP,KAAK4tE,QAAU5tE,KAAK6tE,SAAW7tE,KAAK8tE,OAAS9tE,KAAK+tE,UAAYxtE,GAElE8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqrE,EAAW3tE,UAAW,SAKxCuC,IAAK,WACD,OAASlC,KAAK4tE,UAAY5tE,KAAK6tE,UAAc7tE,KAAK4tE,UAAY5tE,KAAK8tE,QAAY9tE,KAAK4tE,UAAY5tE,KAAK+tE,WAEzG1rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqrE,EAAY,WAK9BprE,IAAK,WACD,OAAO,IAAIorE,GAEfjrE,YAAY,EACZC,cAAc,IAEXgrE,KAGPU,GAA6B,WAC7B,SAASA,EAAYjuD,EAAME,EAAOD,EAAKE,GAKnClgB,KAAKiuE,YAAa,EAKlBjuE,KAAKkuE,aAAc,EAKnBluE,KAAKmuE,WAAY,EAKjBnuE,KAAKouE,cAAe,OACA,IAATruD,GAEP/f,KAAKquE,QAAUruE,KAAKsuE,SAAW,KAE/BtuE,KAAKuuE,UAAYvuE,KAAKwuE,OAAS,KAG/BxuE,KAAKquE,QAAUtuD,EACf/f,KAAKsuE,SAAWruD,EAChBjgB,KAAKwuE,OAASxuD,EACdhgB,KAAKuuE,UAAYruD,EACjBlgB,KAAKiuE,YAAa,EAClBjuE,KAAKkuE,aAAc,EACnBluE,KAAKmuE,WAAY,EACjBnuE,KAAKouE,cAAe,GA+E5B,OA5EA1uE,OAAOuC,eAAe+rE,EAAYruE,UAAW,QAMzCuC,IAAK,WACD,OAAOlC,KAAKquE,SAEhBjsE,IAAK,SAAU7B,GACXP,KAAKquE,QAAU9tE,EACfP,KAAKiuE,YAAa,GAEtB5rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+rE,EAAYruE,UAAW,SAKzCuC,IAAK,WACD,OAAOlC,KAAKsuE,UAEhBlsE,IAAK,SAAU7B,GACXP,KAAKsuE,SAAW/tE,EAChBP,KAAKkuE,aAAc,GAEvB7rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+rE,EAAYruE,UAAW,OAKzCuC,IAAK,WACD,OAAOlC,KAAKwuE,QAEhBpsE,IAAK,SAAU7B,GACXP,KAAKwuE,OAASjuE,EACdP,KAAKmuE,WAAY,GAErB9rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+rE,EAAYruE,UAAW,UAKzCuC,IAAK,WACD,OAAOlC,KAAKuuE,WAEhBnsE,IAAK,SAAU7B,GACXP,KAAKuuE,UAAYhuE,EACjBP,KAAKouE,cAAe,GAExB/rE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+rE,EAAYruE,UAAW,OAKzCyC,IAAK,SAAU7B,GACXP,KAAKquE,QAAUruE,KAAKsuE,SAAWtuE,KAAKwuE,OAASxuE,KAAKuuE,UAAYhuE,EAC9DP,KAAKiuE,YAAa,EAClBjuE,KAAKkuE,aAAc,EACnBluE,KAAKmuE,WAAY,EACjBnuE,KAAKouE,cAAe,GAExB/rE,YAAY,EACZC,cAAc,IAEX0rE,KCtOPS,GAAkC,WAClC,SAASA,KAiFT,OA/EA/uE,OAAOuC,eAAewsE,EAAiB9uE,UAAW,wBAM9CuC,IAAK,WACD,YAAwC,IAAzBlC,KAAK0uE,iBAExBrsE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAewsE,EAAiB9uE,UAAW,sBAK9CuC,IAAK,WACD,YAAsC,IAAvBlC,KAAK2uE,eAExBtsE,YAAY,EACZC,cAAc,IAGlBmsE,EAAiB9uE,UAAUivE,kBAAoB,SAAU5L,GACjDhjE,KAAK0uE,iBACL1uE,KAAK0uE,gBAAgB1uE,KAAMgjE,IAGnCyL,EAAiB9uE,UAAUkvE,gBAAkB,SAAU7L,GAC/ChjE,KAAK2uE,eACL3uE,KAAK2uE,cAAc3uE,KAAMgjE,IAGjCyL,EAAiB9uE,UAAUq/B,WAAa,SAAUvf,EAAMC,EAAMC,EAAMoF,GAChE,GAAIrF,aAAgBL,QAAgC,IAAfK,EAAKpW,YAAyC,IAATqW,EACtE,OAAO3f,KAAKg/B,WAAWvf,EAAMC,EAAKhN,EAAGgN,EAAK/M,GAEzC,GAAoB,iBAAT+M,GAAqC,iBAATC,QAAqC,IAAToF,EACpE,OAAO/kB,KAAKg/B,WAAWvf,EAAMC,EAAMC,EAAM,MAExC,GAAID,aAAgBH,QAAoC,IAAfG,EAAKpW,YAAyC,IAATqW,EAC/E,OAAO3f,KAAKg/B,WAAWvf,EAAMC,EAAM,MAElC,GAAIA,aAAgBL,QAAgC,IAAfK,EAAKpW,OAAyBqW,aAAgBktD,GACpF,OAAO7sE,KAAKg/B,WAAWvf,EAAMC,EAAKhN,EAAGgN,EAAK/M,EAAGgN,GAE5C,GAAoB,iBAATD,GAAqC,iBAATC,IAAsBoF,aAAgB8nD,IAA2B,MAAR9nD,GAAe,CAChH,IAAIzb,EAASmW,EAAKwf,SAAS/Z,WAAW5b,MAAQoW,EAC1CoxC,EAAkB,IAAIvxC,EAAWG,EAAMC,EAAMrW,EAAO,GACxD,OAAOtJ,KAAKg/B,WAAWvf,EAAMqxC,EAAiB/rC,GAE7C,GAAIrF,aAAgBH,QAAoC,IAAfG,EAAKpW,OAAyC,kBAATqW,EAE/E,OADA3f,KAAK8uE,YAAcnvD,EACZ3f,KAAKg/B,WAAWvf,EAAMC,EAAM,MAGnC,IAAI6sD,EAAQ,IAAIY,GACZnjD,EAAWtK,EACXyvC,EAAWxvC,EAGf,GAFA4sD,EAAM5rC,KAAOlhB,EACb8sD,EAAMh4D,OAASyV,EACF,MAATuiD,EAAe,CACf,IAAI75D,EAAI65D,EAAMh4D,OAAO7B,EACjBC,EAAI45D,EAAMh4D,OAAO5B,EACE,IAAnB45D,EAAMh4D,OAAO7B,IACbA,EAAI46D,GAAWyB,QAAQ9uD,MAAM3W,MAAQ,GAElB,IAAnBijE,EAAMh4D,OAAO5B,IACbA,EAAI26D,GAAWyB,QAAQ/uD,IAAI1W,MAAQ,GAEvC,IAAI0lE,EAAW,IAAIzvD,EAAW7M,EAAGC,EAAG45D,EAAMh4D,OAAOjL,MAAOijE,EAAMh4D,OAAOhL,QACrEgjE,EAAMh4D,OAASy6D,EAEnBzC,EAAMnnD,OAAsB,MAAZ+pC,EAAoBA,EAAW,IAAI0d,GAEnD,OADa7sE,KAAK8kB,OAAOynD,IAI1BkC,KCzFP75D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GA0BxC65D,GAA8B,SAAUz5D,GAOxC,SAASy5D,EAAan7D,GAClB,OAAO0B,EAAO3V,KAAKG,KAAM8T,IAAY9T,KAuGzC,OA9GA4U,GAAUq6D,EAAcz5D,GASxB9V,OAAOuC,eAAegtE,EAAatvE,UAAW,WAK1CuC,IAAK,WACD,OAAOsT,EAAO7V,UAAU2sE,WAAWzsE,KAAKG,OAE5CqC,YAAY,EACZC,cAAc,IAOlB2sE,EAAatvE,UAAU6sE,eAAiB,SAAUD,GAE9CvsE,KAAKolB,OAAwC,OAA9BplB,KAAK8T,QAAQqsB,mBAA8D,IAA9BngC,KAAK8T,QAAQqsB,aAAgCngC,KAAK8T,QAAQqsB,aAAe,KACrI,IAAIS,EAAc2rC,EAAM5rC,KACpBuuC,EAAgB3C,EAAMh4D,OACtB8B,EAAOrW,KAAK8T,QAAQvT,MACpB0C,EAAS,KACTksE,EAAa,IAAIC,GAGrB,IAFAD,EAAWxuC,KAAOC,EAClBuuC,EAAWE,UAAYh5D,IACd,CACL84D,EAAanvE,KAAKsvE,aAAaj5D,EAAMuqB,EAAasuC,EAAe3C,GACjEtpE,EAASjD,KAAKuvE,gBAAgBJ,GAC9B,MAGJ,OAAOlsE,GAMXgsE,EAAatvE,UAAU4vE,gBAAkB,SAAUJ,GAE/C,OADa,IAAIK,GAAoBL,EAAWxuC,KAAMwuC,EAAW56D,OAAQ46D,EAAWE,UAAWF,EAAWM,iBAQ9GR,EAAatvE,UAAU2vE,aAAe,SAAUj5D,EAAMuqB,EAAasuC,EAAe3C,GAC9E,IAAItpE,EAAS,IAAImsE,GACjBnsE,EAAOosE,UAAYh5D,EACnBpT,EAAO09B,KAAOC,EACdsuC,EAAgBlvE,KAAK0vE,mBAAmB9uC,EAAasuC,GACrD,IACIS,GADW,IAAI/qD,GACSE,OAAOzO,EAAMrW,KAAK8T,QAAQnL,KAAM3I,KAAKolB,OAAQ8pD,EAAetuC,EAAY69B,gBAAgBl1D,QAAQ,EAAO,IAAI+V,EAAM,EAAG,IAC5IswD,EAA0C,MAA1BD,EAAaN,UAI7BpwC,GAHastC,EAAMnnD,OAAO2nD,QAAU9kB,qBAAmB4nB,YAC9BF,EAAa9mD,MAE3B+X,EAAY3B,UACvBxe,EAAQzgB,KAAK8T,QAAQ0sB,WACrBxgC,KAAK8T,mBAAmBg8D,KACxBrvD,EAAMH,MAAQ,IAAI3D,EAAS,EAAG,EAAG,MAErCsiB,EAASywB,uBAAuBigB,EAAc3vE,KAAK8T,QAAQnL,KAAM3I,KAAK8T,QAAQkoB,IAAKvb,EAAOyuD,EAAelvE,KAAKolB,QAC/FuqD,EAAahqD,MAAMgqD,EAAa5e,UAAY,GAK3D,OAJA9tD,EAAOwsE,eAAiBxwC,EAAS2xB,cAAc+e,EAAa5e,UAAY,EAAG4e,EAAc3vE,KAAK8T,QAAQnL,KAAMumE,EAAelvE,KAAKolB,QAChIniB,EAAOsR,OAASvU,KAAK+vE,kBAAkBnvC,EAAasuC,EAAeS,GACnE1sE,EAAOosE,UAAYM,EAAaN,UAChCpsE,EAAOkhB,MACAlhB,GAOXgsE,EAAatvE,UAAU+vE,mBAAqB,SAAU9uC,EAAasuC,GAC/D,IAAIn4C,EAAW6J,EAAY3B,SAAS/Z,WAEpC,OADAgqD,EAAc3lE,OAAU2lE,EAAc3lE,OAAS,EAAK2lE,EAAc3lE,OAASwtB,EAASxtB,OAAS2lE,EAAcv8D,EACpGu8D,GAOXD,EAAatvE,UAAUowE,kBAAoB,SAAUnvC,EAAasuC,EAAeS,GAC7E,IAAIve,EAAWue,EAAaznD,WACxBxV,EAAIw8D,EAAcx8D,EAClBC,EAAIu8D,EAAcv8D,EAClBrJ,EAAS4lE,EAAc5lE,MAAQ,EAAK4lE,EAAc5lE,MAAQ8nD,EAAS9nD,MACnEC,EAAS6nD,EAAS7nD,OAGtBmJ,EAFkBkuB,EAAY3B,SAASwwB,4BAA4B2B,EAAU8d,EAAcx8D,EAAGw8D,EAAcv8D,EAAG3S,KAAKolB,QAEpG1S,EAEhB,IAAIs9D,EAAgBpvC,EAAY3B,SAAS+xB,0BAA0BI,EAAS7nD,OAAQ2lE,EAAc3lE,OAAQvJ,KAAKolB,QAG/G,OADa,IAAI7F,EAAW7M,EAD5BC,GAAKq9D,EAC6B1mE,EAAOC,IAGtC0lE,GACT7C,IAEEgD,GAAsC,WAGtC,OAFA,gBAKAI,GAAqC,SAAUh6D,GAO/C,SAASg6D,EAAoB7uC,EAAMpsB,EAAQ86D,EAAWI,GAClD,IAAI/5D,EAAQF,EAAO3V,KAAKG,KAAM2gC,EAAMpsB,IAAWvU,KAG/C,OAFA0V,EAAMu6D,cAAgBZ,EACtB35D,EAAMw6D,mBAAqBT,EACpB/5D,EAyBX,OAnCAd,GAAU46D,EAAqBh6D,GAY/B9V,OAAOuC,eAAeutE,EAAoB7vE,UAAW,aAMjDuC,IAAK,WACD,OAAOlC,KAAKiwE,eAEhB5tE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeutE,EAAoB7vE,UAAW,kBAKjDuC,IAAK,WACD,OAAOlC,KAAKkwE,oBAEhB7tE,YAAY,EACZC,cAAc,IAEXktE,GACTnC,ICvLEz4D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAkCxC+6D,GAAgC,SAAU36D,GAE1C,SAAS26D,EAAe3wD,EAAMC,EAAMC,EAAMC,EAAMoF,GAC5C,IAAIrP,EAAQF,EAAO3V,KAAKG,OAASA,KAwDjC,OAlDA0V,EAAMoT,QAAU,GAKhBpT,EAAM06D,aAAe,GAMrB16D,EAAM26D,kBAAmB,EAMzB36D,EAAM46D,kBAAmB,OACL,IAAT9wD,IAGc,iBAATA,QAAqC,IAATC,GACxC/J,EAAMoT,QAAUtJ,EAChB9J,EAAM06D,aAAe5wD,GAEA,iBAATA,GAAqBC,aAAgBsJ,QAA2B,IAATrJ,GACnEhK,EAAMoT,QAAUtJ,EAChB9J,EAAM06D,aAAe5wD,EACrB9J,EAAMglD,QAAUj7C,GAEK,iBAATD,GAAqBC,aAAgBsJ,GAAWrJ,aAAgBib,SAA0B,IAAThb,GAC7FjK,EAAMoT,QAAUtJ,EAChB9J,EAAM06D,aAAe5wD,EACrB9J,EAAMglD,QAAUj7C,EAChB/J,EAAM+kD,OAAS/6C,GAEM,iBAATF,GAAqBC,aAAgBsJ,GAAWrJ,aAAgBU,QAA4B,IAATT,GAC/FjK,EAAMoT,QAAUtJ,EAChB9J,EAAM06D,aAAe5wD,EACrB9J,EAAMglD,QAAUj7C,EAChB/J,EAAMimB,SAAWjc,IAGjBhK,EAAMoT,QAAUtJ,EAChB9J,EAAM06D,aAAe5wD,EACrB9J,EAAMglD,QAAUj7C,EAChB/J,EAAM+kD,OAAS/6C,EACfhK,EAAMimB,SAAWhc,EACjBjK,EAAM0P,OAASL,IAEZrP,EAiUX,OA3XAd,GAAUu7D,EAAgB36D,GA4D1B9V,OAAOuC,eAAekuE,EAAexwE,UAAW,QA6B5CuC,IAAK,WACD,OAAOlC,KAAK8oB,SAEhB1mB,IAAK,SAAU7B,GACXP,KAAKowE,aAAe7vE,EACpBP,KAAK8oB,QAAUvoB,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekuE,EAAexwE,UAAW,SAM5CuC,IAAK,WACD,OAAOlC,KAAKowE,cAEhB/tE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekuE,EAAexwE,UAAW,OAM5CuC,IAAK,WACD,OAAOlC,KAAKy6D,QAGhBr4D,IAAK,SAAU7B,GACXP,KAAKy6D,OAASl6D,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekuE,EAAexwE,UAAW,SAM5CuC,IAAK,WACD,OAAOlC,KAAK27B,UAGhBv5B,IAAK,SAAU7B,GACXP,KAAK27B,SAAWp7B,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekuE,EAAexwE,UAAW,QA6B5CuC,IAAK,WACD,OAAOlC,KAAK06D,SAEhBt4D,IAAK,SAAU7B,GACXP,KAAK06D,QAAUn6D,EACXP,KAAK06D,mBAAmB2L,IAAmC,MAAhBrmE,KAAK8oB,QAChD9oB,KAAKowE,aAAe/J,GAAgBwE,QAAQ7qE,KAAK8oB,SAGjD9oB,KAAKowE,aAAepwE,KAAK8oB,SAGjCzmB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekuE,EAAexwE,UAAW,gBAK5CuC,IAAK,WACD,OAAOlC,KAAKolB,QAEhBhjB,IAAK,SAAU7B,GACXP,KAAKolB,OAAS7kB,GAElB8B,YAAY,EACZC,cAAc,IAOlB6tE,EAAexwE,UAAU6gC,SAAW,WAChC,OAAyB,MAAjBxgC,KAAK27B,eAA6C,IAAlB37B,KAAK27B,SAA4B,IAAItb,EAAc,IAAI1D,EAAS,EAAG,EAAG,IAAM3c,KAAK27B,UAa7Hw0C,EAAexwE,UAAUmlB,OAAS,SAAUynD,GAGxC,OAFe,IAAI0C,GAAajvE,MACV8kB,OAAOynD,IAGjC4D,EAAexwE,UAAU4wE,SAAW,SAAU9wD,EAAMC,EAAMC,EAAMoF,GAC5D,GAAIrF,aAAgBL,QAAgC,IAAfK,EAAKpW,YAAyC,IAATqW,EAEtE,OADA3f,KAAKqwE,kBAAmB,EACjBrwE,KAAKuwE,SAAS9wD,EAAMC,EAAKhN,EAAGgN,EAAK/M,GAEvC,GAAoB,iBAAT+M,GAAqC,iBAATC,QAAqC,IAAToF,EAEpE,OADA/kB,KAAKqwE,kBAAmB,EACjBrwE,KAAKuwE,SAAS9wD,EAAMC,EAAMC,EAAM,MAEtC,GAAID,aAAgBH,QAAoC,IAAfG,EAAKpW,YAAyC,IAATqW,EAC/E,OAAO3f,KAAKuwE,SAAS9wD,EAAMC,EAAM,MAEhC,GAAIA,aAAgBL,QAAgC,IAAfK,EAAKpW,OAAyBqW,aAAgBktD,GAEpF,OADA7sE,KAAKqwE,kBAAmB,EACjBrwE,KAAKuwE,SAAS9wD,EAAMC,EAAKhN,EAAGgN,EAAK/M,EAAGgN,GAE1C,GAAoB,iBAATD,GAAqC,iBAATC,IAAsBoF,aAAgB8nD,IAA2B,MAAR9nD,GAAe,CAChH/kB,KAAKqwE,kBAAmB,EACxB,IAAI/mE,EAASmW,EAAKwf,SAAS/Z,WAAW5b,MAAQoW,EAC1CoxC,EAAkB,IAAIvxC,EAAWG,EAAMC,EAAMrW,EAAO,GACxD,OAAOtJ,KAAKuwE,SAAS9wD,EAAMqxC,EAAiB/rC,GAE3C,GAAIrF,aAAgBH,QAAoC,IAAfG,EAAKpW,OAAyC,kBAATqW,EAC/E,OAAO3f,KAAKuwE,SAAS9wD,EAAMC,EAAM,MAGjC,IAAIoF,EAAS,IAAIF,EACjB,GAAI5kB,KAAKqwE,iBAAkB,CACvB,IAAIG,EAAqB1rD,EAAOA,OAAO9kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKmgC,aAAc,IAAI7gB,EAAOG,EAAKwf,SAAS/Z,WAAW5b,MAAQoW,EAAKhN,EAAI,IAAI,EAAM+M,EAAKwf,SAAS/Z,YAC1J64C,OAAe,EAEf/zC,EAAWtK,EACXyvC,EAAWxvC,EAKf,IAPI4sD,EAAQ,IAAIY,IAGVxsC,KAAOlhB,EACb8sD,EACMh4D,OAASyV,EACfuiD,EAAMnnD,OAAsB,MAAZ+pC,EAAoBA,EAAW,IAAI0d,GAC/C2D,EAAmB7qD,MAAM3kB,OAAS,EAAG,CAErC,GADAhB,KAAKqW,KAAOm6D,EAAmB1oD,YAAY,GAAGzR,KAC1Ck2D,EAAMh4D,OAAO5B,GAAK45D,EAAM5rC,KAAK1B,SAAS/Z,WAAW3b,OAAQ,CACzD,IAAIknE,EAAmB,IAAIpxD,EAAOktD,EAAMh4D,OAAO7B,EAAG65D,EAAMh4D,OAAO5B,GAC/DorD,EAAe/9D,KAAK8kB,OAAOynD,GAE3B,IACK,IAFDh4D,EAAS,IAAIgL,EAAW,EAAGw+C,EAAaxpD,OAAO5B,EAAI69D,EAAmBhoD,WAAY/I,EAAKwf,SAAS/Z,WAAW5b,MAAOknE,EAAmBhoD,YAEhItlB,EAAI,EAAGA,EAAIstE,EAAmB7qD,MAAM3kB,OAAQkC,IAgBjD,GAfAqpE,EAAM5rC,KAAOo9B,EAAap9B,KAC1B4rC,EAAMh4D,OAAS,IAAIgL,EAAW,IAAIF,EAAO9K,EAAO7B,EAAG6B,EAAO5B,GAAI,IAAI2M,EAAM/K,EAAOjL,MAAOiL,EAAOhL,SAC7FvJ,KAAKqW,KAAOm6D,EAAmB1oD,YAAY5kB,GAAGmT,KAC1C9B,EAAO5B,EAAI69D,EAAmBhoD,WAAau1C,EAAap9B,KAAK1B,SAAS/Z,WAAW3b,SACjFgjE,EACM5rC,KAAO4rC,EAAM5rC,KAAK1B,SAASozB,cAE7B99C,EADAk8D,EAAiB99D,EAAKorD,EAAap9B,KAAK1B,SAAS/Z,WAAW3b,OAASw0D,EAAaxpD,OAAOhL,OAChF,IAAIgW,EAAW,EAAGw+C,EAAaxpD,OAAOhL,OAAQw0D,EAAap9B,KAAK1B,SAAS/Z,WAAW5b,MAAOknE,EAAmBhoD,YAG9G,IAAIjJ,EAAW,EAAG,EAAGw+C,EAAap9B,KAAK1B,SAAS/Z,WAAW5b,MAAOknE,EAAmBhoD,YAElG+jD,EAAMh4D,OAASA,GAEnBwpD,EAAe/9D,KAAK8kB,OAAOynD,GACvBrpE,IAAOstE,EAAmB7qD,MAAM3kB,OAAS,EACzCuT,EAAS,IAAIgL,EAAW,EAAGw+C,EAAaxpD,OAAO5B,EAAI69D,EAAmBhoD,WAAYu1C,EAAap9B,KAAK1B,SAAS/Z,WAAW5b,MAAOknE,EAAmBhoD,gBAEjJ,CACD,IAAI7B,EAAY3mB,KAAK2I,KAAKkhB,cAAc7pB,KAAKqW,KAAMrW,KAAKolB,QAAQ9b,MAChEy0D,EAAe/9D,KAAK0wE,sBAAsB3S,EAAcp3C,EAAWo3C,EAAap9B,KAAK1B,SAAS/Z,WAAW5b,MAAO,IAI5H,OAAOy0D,EAGP,IAAI4S,EAAW3wE,KAAK2I,KAAKkhB,cAAc7pB,KAAKqW,KAAMrW,KAAKolB,QAKvD,OAJImnD,EAAMh4D,OAAO5B,GAAK45D,EAAM5rC,KAAK1B,SAAS/Z,WAAW3b,SACjDw0D,EAAe/9D,KAAK8kB,OAAOynD,GAC3BxO,EAAe/9D,KAAK0wE,sBAAsB3S,EAAc4S,EAASrnE,MAAOy0D,EAAap9B,KAAK1B,SAAS/Z,WAAW5b,MAAO,IAElHy0D,EAIPA,EAAej5C,EAAOA,OAAO9kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKmgC,aAAc,IAAI7gB,EAAMI,EAAKpW,MAAO,IAAI,EAAOmW,EAAKwf,SAAS/Z,YAA1H,IAEIqnD,EADAtpE,OAAS,EAET+mB,EAAWtK,EACXyvC,EAAWxvC,EAIf,IANI4sD,EAAQ,IAAIY,IAGVxsC,KAAOlhB,EACb8sD,EAAMh4D,OAASyV,EACfuiD,EAAMnnD,OAAsB,MAAZ+pC,EAAoBA,EAAW,IAAI0d,GAC/C9O,EAAap4C,MAAM3kB,OAAS,EAAG,CAE/B,GADAhB,KAAKqW,KAAO0nD,EAAaj2C,YAAY,GAAGzR,KACpCk2D,EAAMh4D,OAAO5B,GAAK45D,EAAM5rC,KAAK1B,SAAS/Z,WAAW3b,OAAQ,CACrDknE,EAAmB,IAAIpxD,EAAOktD,EAAMh4D,OAAO7B,EAAG65D,EAAMh4D,OAAO5B,GAC/D1P,EAASjD,KAAK8kB,OAAOynD,GAErB,IADIh4D,EAAS,IAAIgL,EAAWyK,EAAStX,EAAGzP,EAAOsR,OAAO5B,EAAIorD,EAAav1C,WAAYwB,EAAS1gB,MAAOy0D,EAAav1C,YAEvGtlB,EAAI,EAAGA,EAAI66D,EAAap4C,MAAM3kB,OAAQkC,IAgB3C,GAfAqpE,EAAM5rC,KAAO19B,EAAO09B,KACpB4rC,EAAMh4D,OAAS,IAAIgL,EAAWhL,EAAO7B,EAAG6B,EAAO5B,EAAG4B,EAAOjL,MAAOiL,EAAOhL,QACvEvJ,KAAKqW,KAAO0nD,EAAaj2C,YAAY5kB,GAAGmT,KACpC9B,EAAO5B,EAAIorD,EAAav1C,WAAavlB,EAAO09B,KAAK1B,SAAS/Z,WAAW3b,SACrEgjE,EACM5rC,KAAO4rC,EAAM5rC,KAAK1B,SAASozB,cAE7B99C,EADAk8D,EAAiB99D,EAAK1P,EAAO09B,KAAK1B,SAAS/Z,WAAW3b,OAAStG,EAAOsR,OAAOhL,OACpE,IAAIgW,EAAWyK,EAAStX,EAAGqrD,EAAav1C,WAAYwB,EAAS1gB,MAAOy0D,EAAav1C,YAGjF,IAAIjJ,EAAWyK,EAAStX,EAAG,EAAGsX,EAAS1gB,MAAOy0D,EAAav1C,YAExE+jD,EAAMh4D,OAASA,GAEnBtR,EAASjD,KAAK8kB,OAAOynD,GACjBrpE,IAAO66D,EAAap4C,MAAM3kB,OAAS,EACnCuT,EAAS,IAAIgL,EAAWyK,EAAStX,EAAGzP,EAAOsR,OAAO5B,EAAIorD,EAAav1C,WAAYwB,EAAS1gB,MAAOy0D,EAAav1C,gBAE3G,CACG7B,EAAY3mB,KAAK2I,KAAKkhB,cAAc7pB,KAAKqW,KAAMrW,KAAKolB,QAAQ9b,MAChErG,EAASjD,KAAK0wE,sBAAsBztE,EAAQ0jB,EAAWqD,EAAS1gB,MAAO0gB,EAAStX,IAI5F,OAAOzP,EAGH0tE,EAAW3wE,KAAK2I,KAAKkhB,cAAc7pB,KAAKqW,KAAMrW,KAAKolB,QAKvD,OAJImnD,EAAMh4D,OAAO5B,GAAK45D,EAAM5rC,KAAK1B,SAAS/Z,WAAW3b,SACjDtG,EAASjD,KAAK8kB,OAAOynD,GACrBtpE,EAASjD,KAAK0wE,sBAAsBztE,EAAQ0tE,EAASrnE,MAAO0gB,EAAS1gB,MAAO0gB,EAAStX,IAElFzP,GAKvBktE,EAAexwE,UAAU+wE,sBAAwB,SAAUztE,EAAQ0jB,EAAWiqD,EAAcC,GAkBxF,OAhByB,MAArB7wE,KAAKmgC,mBAAqD,IAAtBngC,KAAKmgC,cAAgCngC,KAAKmgC,aAAamxB,YAAct1C,mBAAiBu1C,QAC1HtuD,EAAOsR,OAAO7B,EAAIm+D,GAAiBD,EAAejqD,GAAa,EAC/D1jB,EAAOsR,OAAOjL,MAAQqd,GAEI,MAArB3mB,KAAKmgC,mBAAqD,IAAtBngC,KAAKmgC,cAAgCngC,KAAKmgC,aAAamxB,YAAct1C,mBAAiBw1C,OAC/HvuD,EAAOsR,OAAO7B,EAAIm+D,GAAiBD,EAAejqD,GAClD1jB,EAAOsR,OAAOjL,MAAQqd,GAEI,MAArB3mB,KAAKmgC,mBAAqD,IAAtBngC,KAAKmgC,cAAgCngC,KAAKmgC,aAAamxB,YAAct1C,mBAAiBu3C,SAC/HtwD,EAAOsR,OAAO7B,EAAIm+D,EAClB5tE,EAAOsR,OAAOjL,MAAQsnE,IAGtB3tE,EAAOsR,OAAOjL,MAAQunE,EACtB5tE,EAAOsR,OAAOjL,MAAQqd,GAEnB1jB,GAEJktE,GACT1B,IC/ZE75D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAoBxC07D,GAAkC,SAAUt7D,GAE5C,SAASs7D,EAAiBvrD,EAAWhb,GACjC,IAAImL,EAAQF,EAAO3V,KAAKG,KAAMulB,IAAcvlB,KAI5C,YAHmB,IAARuK,IACPmL,EAAMnL,IAAMA,GAETmL,EA2DX,OAjEAd,GAAUk8D,EAAkBt7D,GAQ5B9V,OAAOuC,eAAe6uE,EAAiBnxE,UAAW,aAK9CuC,IAAK,WAID,YAHiC,IAAtBlC,KAAK+wE,eACZ/wE,KAAK+wE,aAAe,IAAIn1D,GAErB5b,KAAK+wE,cAEhB1uE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6uE,EAAiBnxE,UAAW,OAM9CuC,IAAK,WACD,OAAOlC,KAAKgxE,UAAUzmE,KAE1BnI,IAAK,SAAU7B,GACPP,KAAKgxE,UAAUzmE,MAAQhK,IACvBP,KAAKgxE,UAAUzmE,IAAMhK,IAG7B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe6uE,EAAiBnxE,UAAW,UAK9CuC,IAAK,WACD,OAAOlC,KAAKisE,gBAEhB7pE,IAAK,SAAU7B,GACXP,KAAKisE,aAAa1rE,GAClBP,KAAKgxE,UAAUhnE,KAAOzJ,GAE1B8B,YAAY,EACZC,cAAc,IAOlBwuE,EAAiBnxE,UAAUob,WAAa,WACpCvF,EAAO7V,UAAUob,WAAWlb,KAAKG,MACjCA,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBvG,QAAS,IAAIpH,EAAQ3B,KAAKsP,qBAAqBpF,OACpFlK,KAAKgxE,UAAUl9D,QACnC9T,KAAK6O,WAAWU,MAAM/O,SAASR,KAAKsP,qBAAqBnF,EAAGnK,KAAKgxE,UAAUl9D,UAExEg9D,GACT/E,ICvFEn3D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAiDxC06D,GAAgC,SAAUt6D,GAO1C,SAASs6D,IACL,IAAIp6D,EAAQF,EAAO3V,KAAKG,OAASA,KAOjC0V,EAAMu7D,uBAAyB,GAM/Bv7D,EAAMw7D,cAAgB,KAOtBx7D,EAAMy7D,mBAAoB,EAC1Bz7D,EAAM07D,cAAgB,IAAIt+D,EAC1B,IAAK,IAAI5P,EAAI,EAAGA,EAAI,EAAGA,IACnBwS,EAAM07D,cAAc39D,IAAI,IAAI3B,EAAU,IAE1C,OAAO4D,EAwLX,OAxNAd,GAAUk7D,EAAgBt6D,GAkC1B9V,OAAOuC,eAAe6tE,EAAenwE,UAAW,OA6B5CuC,IAAK,WACD,OAAOlC,KAAKixE,wBAEhB7uE,IAAK,SAAU7B,GACX,GAAqB,IAAjBA,EAAMS,OACN,MAAM,IAAIsV,MAAM,qDAEpBtW,KAAKixE,uBAAyB1wE,GAElC8B,YAAY,EACZC,cAAc,IAElBwtE,EAAenwE,UAAUygC,KAAO,SAAU5gB,EAAMC,GAC5C,GAAID,aAAgBosC,GAAS,CACzB,IAAI9mC,EAAS,IAAIF,EACbysD,EAAoBrxE,KAAK2I,KAAKqgB,MAClC,GAAIvJ,aAAgBJ,EAAQ,CACxBrf,KAAKmxE,mBAAoB,EACzBnxE,KAAK2I,KAAKqgB,MAAQ/H,eAAayI,UAE/B,GAAkC,KAD9Bq0C,EAAej5C,EAAOA,OAAO9kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKmgC,aAAc,IAAI7gB,EAAOE,EAAKyf,SAAS/Z,WAAW5b,MAAQmW,EAAK/M,EAAI,IAAI,EAAM8M,EAAKyf,SAAS/Z,aACvIS,MAAM3kB,OAAc,CACjC,IAAIowD,EAAWpxD,KAAK2I,KAAKkhB,cAAc7pB,KAAKO,OACxC+J,EAAO,IAAIiV,EAAWE,EAAM2xC,GAChC9mD,EAAOtK,KAAKsxE,gBAAgBhnE,EAAM8mD,EAAS9nD,MAAOkW,EAAKyf,SAAS/Z,WAAW5b,MAAOmW,EAAK/M,GACvF1S,KAAKkxE,cAAgB,IAAIJ,GAAiBxmE,EAAMtK,KAAKuxE,KACrDvxE,KAAKkxE,cAAcriE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKoxE,eAC5D5xD,EAAK6+C,YAAY5qD,IAAIzT,KAAKkxE,eAC1B,IAAIjuE,EAASjD,KAAKuwE,SAAS/wD,EAAMC,GAEjC,OADAzf,KAAK2I,KAAKqgB,MAAQqoD,EACXpuE,EAGHA,EAASjD,KAAKwxE,0BAA0BzT,EAAcv+C,EAAMC,GAEhE,OADAzf,KAAK2I,KAAKqgB,MAAQqoD,EACXpuE,EAIX,IAAI86D,EAAej5C,EAAOA,OAAO9kB,KAAKO,MAAOP,KAAK2I,KAAM3I,KAAKmgC,aAAc,IAAI7gB,EAAMG,EAAKnW,MAAO,IAAI,EAAO,IAAIgW,EAAM,EAAG,IAEzH,GADAtf,KAAK2I,KAAKqgB,MAAQ/H,eAAayI,UACG,IAA9Bq0C,EAAap4C,MAAM3kB,OAAc,CAC7BowD,EAAWpxD,KAAK2I,KAAKkhB,cAAc7pB,KAAKO,OACxC+J,EAAO,IAAIiV,EAAW,IAAIF,EAAOI,EAAK/M,EAAG+M,EAAK9M,GAAIy+C,GACtD9mD,EAAOtK,KAAKsxE,gBAAgBhnE,EAAM8mD,EAAS9nD,MAAOmW,EAAKnW,MAAOmW,EAAK/M,GACnE1S,KAAKkxE,cAAgB,IAAIJ,GAAiBxmE,EAAMtK,KAAKuxE,KACrDvxE,KAAKkxE,cAAcriE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKoxE,eAC5D5xD,EAAK6+C,YAAY5qD,IAAIzT,KAAKkxE,eAC1B,IAAI52C,EAAct6B,KAAKuwE,SAAS/wD,EAAMC,GAEtC,OADAzf,KAAK2I,KAAKqgB,MAAQqoD,EACX/2C,EAGHA,EAAct6B,KAAKyxE,2BAA2B1T,EAAcv+C,EAAMC,GAEtE,OADAzf,KAAK2I,KAAKqgB,MAAQqoD,EACX/2C,EAKf,IAAIqG,EAAO,IAAIirB,GAEf,OADAjrB,EAAOnhB,EAAKmhB,KACL3gC,KAAKogC,KAAKO,EAAMlhB,IAS/BqwD,EAAenwE,UAAU6xE,0BAA4B,SAAUvuE,EAAQ09B,EAAMZ,GAEzE,IAAK,IADDg+B,EACK76D,EAAI,EAAGA,EAAID,EAAO6kB,YAAY9mB,OAAQkC,IAAK,CAChD,IAAIxB,EAAO1B,KAAK2I,KAAKkhB,cAAc5mB,EAAO0iB,MAAMziB,GAAGmT,MAC/C9B,EAAS,IAAIgL,EAAWwgB,EAAUr+B,GAKtC,GAJU,IAANwB,IACAqR,EAAO7B,EAAI,GAEf1S,KAAKqW,KAAOpT,EAAO0iB,MAAMziB,GAAGmT,KACxB9B,EAAO5B,EAAIjR,EAAK6H,OAASo3B,EAAK1B,SAAS/Z,WAAW3b,OAAQ,CAC1D,GAAU,IAANrG,EAMA,MALAy9B,EAAOA,EAAK1B,SAASozB,cACrB99C,EAAS,IAAIgL,EAAW,EAAG,EAAGohB,EAAK1B,SAAS/Z,WAAW5b,MAAO5H,EAAK6H,QACnEw2B,EAASptB,EAAI,EAMrB4B,EAASvU,KAAKsxE,gBAAgB/8D,EAAQ7S,EAAK4H,MAAOq3B,EAAK1B,SAAS/Z,WAAW5b,MAAOiL,EAAO7B,GACzF1S,KAAKkxE,cAAgB,IAAIJ,GAAiBv8D,EAAQvU,KAAKuxE,KACvDvxE,KAAKkxE,cAAcriE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKoxE,eAC5DzwC,EAAK09B,YAAY5qD,IAAIzT,KAAKkxE,eAEtBnT,EADM,IAAN76D,EACelD,KAAKuwE,SAAS5vC,EAAM,IAAIthB,EAAO,EAAG9K,EAAO5B,IAGzC3S,KAAKuwE,SAAS5vC,EAAMpsB,EAAO7B,EAAG6B,EAAO5B,GAExDotB,EAASptB,GAAKjR,EAAK6H,OAEvB,OAAOw0D,GAMX+R,EAAenwE,UAAU8xE,2BAA6B,SAAUxuE,EAAQ09B,EAAMpsB,GAE1E,IAAK,IADDwpD,EACK76D,EAAI,EAAGA,EAAID,EAAO6kB,YAAY9mB,OAAQkC,IAAK,CAChD,IAAIxB,EAAO1B,KAAK2I,KAAKkhB,cAAc5mB,EAAO0iB,MAAMziB,GAAGmT,MAC/CmpB,EAAiB,IAAIjgB,EAAW,IAAIF,EAAO9K,EAAO7B,EAAG6B,EAAO5B,GAAIjR,GAGpE,GAFA89B,EAAiBx/B,KAAKsxE,gBAAgB9xC,EAAgB99B,EAAK4H,MAAOiL,EAAOjL,MAAOiL,EAAO7B,GACvF1S,KAAKqW,KAAOpT,EAAO0iB,MAAMziB,GAAGmT,KACxB9B,EAAO5B,EAAIjR,EAAK6H,OAASo3B,EAAK1B,SAAS/Z,WAAW3b,OAAQ,CAC1D,GAAU,IAANrG,EAMA,MALAy9B,EAAOA,EAAK1B,SAASozB,cACrB99C,EAAS,IAAIgL,EAAWhL,EAAO7B,EAAG,EAAG6B,EAAOjL,MAAO5H,EAAK6H,QACxDi2B,EAAe7sB,EAAI,EAM3B3S,KAAKkxE,cAAgB,IAAIJ,GAAiBtxC,EAAgBx/B,KAAKuxE,KAC/DvxE,KAAKkxE,cAAcriE,WAAWU,MAAM/O,SAAS,SAAUR,KAAKoxE,eAC5DzwC,EAAK09B,YAAY5qD,IAAIzT,KAAKkxE,eAC1BnT,EAAe/9D,KAAKuwE,SAAS5vC,EAAMpsB,GACnCA,EAAO5B,GAAKjR,EAAK6H,OAErB,OAAOw0D,GAGX+R,EAAenwE,UAAU2xE,gBAAkB,SAAUpC,EAAevoD,EAAWiqD,EAAcC,GAkBzF,OAhByB,MAArB7wE,KAAKmgC,mBAAqD,IAAtBngC,KAAKmgC,cAAgCngC,KAAKmgC,aAAamxB,YAAct1C,mBAAiBu1C,QAC1H2d,EAAcx8D,EAAIm+D,GAAiBD,EAAejqD,GAAa,EAC/DuoD,EAAc5lE,MAAQqd,GAEI,MAArB3mB,KAAKmgC,mBAAqD,IAAtBngC,KAAKmgC,cAAgCngC,KAAKmgC,aAAamxB,YAAct1C,mBAAiBw1C,OAC/H0d,EAAcx8D,EAAIm+D,GAAiBD,EAAejqD,GAClDuoD,EAAc5lE,MAAQqd,GAEI,MAArB3mB,KAAKmgC,mBAAqD,IAAtBngC,KAAKmgC,cAAgCngC,KAAKmgC,aAAamxB,YAAct1C,mBAAiBu3C,SAC/H2b,EAAcx8D,EAAIm+D,EAClB3B,EAAc5lE,MAAQsnE,IAGtB1B,EAAc5lE,MAAQunE,EACtB3B,EAAc5lE,MAAQqd,GAEnBuoD,GAEJY,GACTK,IClQEuB,GAAqC,WACrC,SAASA,KAoJT,OA7IAA,EAAoB7G,QAAU,SAAU8G,EAAWC,GAC/C,IAAI3uE,EAAS,GACb,OAAQ2uE,GACJ,KAAK/7C,iBAAejT,KAChB3f,EAAS,GACT,MACJ,KAAK4yB,iBAAeg8C,QAChB5uE,EAAS0uE,EAAU/xE,WACnB,MACJ,KAAKi2B,iBAAei8C,WAChB7uE,EAASjD,KAAK+xE,eAAeJ,GAAWK,cACxC,MACJ,KAAKn8C,iBAAeo8C,WAChBhvE,EAASjD,KAAKkyE,cAAcP,GAAWK,cACvC,MACJ,KAAKn8C,iBAAes8C,WAChBlvE,EAASjD,KAAK+xE,eAAeJ,GAC7B,MACJ,KAAK97C,iBAAeu8C,WAChBnvE,EAASjD,KAAKkyE,cAAcP,GAGpC,OAAO1uE,GAMXyuE,EAAoBQ,cAAgB,SAAUP,GAC1C,IAAIU,EAAS,GACTC,EAAUtyE,KAAKuyE,eAAeZ,EAAW,IAAM,KACnDU,GAAUC,EAAQh4C,YAClBq3C,EAAYW,EAAQX,UACpB,IAAIa,EAAWxyE,KAAKuyE,eAAeZ,EAAW,IAAK,MACnDU,GAAUG,EAASl4C,YACnBq3C,EAAYa,EAASb,UACrB,IAAIc,EAAUzyE,KAAKuyE,eAAeZ,EAAW,IAAK,KAClDU,GAAUI,EAAQn4C,YAClBq3C,EAAYc,EAAQd,UACpB,IAAIe,EAAW1yE,KAAKuyE,eAAeZ,EAAW,IAAK,MACnDU,GAAUK,EAASp4C,YACnBq3C,EAAYe,EAASf,UACrB,IAAIgB,EAAU3yE,KAAKuyE,eAAeZ,EAAW,IAAK,KAClDU,GAAUM,EAAQr4C,YAClBq3C,EAAYgB,EAAQhB,UACpB,IAAIiB,EAAW5yE,KAAKuyE,eAAeZ,EAAW,GAAI,MAClDU,GAAUO,EAASt4C,YACnBq3C,EAAYiB,EAASjB,UACrB,IAAIkB,EAAU7yE,KAAKuyE,eAAeZ,EAAW,GAAI,KACjDU,GAAUQ,EAAQv4C,YAClBq3C,EAAYkB,EAAQlB,UACpB,IAAImB,EAAW9yE,KAAKuyE,eAAeZ,EAAW,GAAI,MAClDU,GAAUS,EAASx4C,YACnBq3C,EAAYmB,EAASnB,UACrB,IAAIoB,EAAU/yE,KAAKuyE,eAAeZ,EAAW,GAAI,KACjDU,GAAUU,EAAQz4C,YAClBq3C,EAAYoB,EAAQpB,UACpB,IAAIqB,EAAWhzE,KAAKuyE,eAAeZ,EAAW,EAAG,MACjDU,GAAUW,EAAS14C,YACnBq3C,EAAYqB,EAASrB,UACrB,IAAIsB,EAAUjzE,KAAKuyE,eAAeZ,EAAW,EAAG,KAChDU,GAAUY,EAAQ34C,YAClBq3C,EAAYsB,EAAQtB,UACpB,IAAIuB,EAAWlzE,KAAKuyE,eAAeZ,EAAW,EAAG,MACjDU,GAAUa,EAAS54C,YACnBq3C,EAAYuB,EAASvB,UACrB,IAAIwB,EAAUnzE,KAAKuyE,eAAeZ,EAAW,EAAG,KAGhD,OAFAU,GAAUc,EAAQ74C,YAClBq3C,EAAYwB,EAAQxB,UACbU,EAAOzyE,YAMlB8xE,EAAoBK,eAAiB,SAAUqB,GAG3C,IAFA,IAAIC,EAAQrzE,KAAKszE,gBAAgBF,GAC7BnwE,EAAS,GACNowE,EAAMryE,OAAS,GAAG,CACrB,IAAIojB,EAAMivD,EAAMhc,MAChBp0D,EAASjD,KAAKuzE,WAAWtwE,EAAQmhB,GAErC,OAAOnhB,EAAOrD,YAMlB8xE,EAAoBa,eAAiB,SAAUhyE,EAAOizE,EAAW1/C,GAE7D,IADA,IAAI2/C,EAAe,GACZlzE,GAASizE,GACZjzE,GAASizE,EACTC,GAAgB3/C,EAEpB,OAASwG,YAAam5C,EAAa7zE,WAAY+xE,UAAWpxE,IAM9DmxE,EAAoB4B,gBAAkB,SAAUF,GAC5C,GAAIA,GAAU,EACV,MAAM98D,MAAM,+DAGhB,IADA,IAAI+8D,KACGD,EAASpzE,KAAK0zE,aAAa,CAC9B,IAAIrE,EAAY+D,EAASpzE,KAAK0zE,YACZ,IAAdrE,GACA+D,EAASA,EAASpzE,KAAK0zE,YAAc,EACrCrE,EAAYrvE,KAAK0zE,aAGjBN,GAAUpzE,KAAK0zE,YAEnBL,EAAMnyE,KAAKmuE,GAGf,OADAgE,EAAMnyE,KAAKkyE,GACJC,GAMX3B,EAAoB6B,WAAa,SAAUlvD,EAAS9jB,GAGhD,OADA8jB,GADa7N,OAAOC,aAAai7D,EAAoBiC,gBAAkBpzE,IAU3EmxE,EAAoBgC,YAAc,GAMlChC,EAAoBiC,mBACbjC,KC1JPkC,GAAsC,WACtC,SAASA,EAAqBjlB,EAAUpuD,GAOpCP,KAAK6zE,YAAc,KAKnB7zE,KAAK8oB,QAAU,QACS,IAAb6lC,IAIP3uD,KAAK2uD,SAAWA,EAChB3uD,KAAKO,MAAQA,GAgCrB,OA7BAb,OAAOuC,eAAe2xE,EAAqBj0E,UAAW,YAMlDuC,IAAK,WACD,OAAOlC,KAAK6zE,aAEhBzxE,IAAK,SAAU7B,GACXP,KAAK6zE,YAActzE,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2xE,EAAqBj0E,UAAW,SAKlDuC,IAAK,WACD,OAAOlC,KAAK8oB,SAEhB1mB,IAAK,SAAU7B,GACXP,KAAK8oB,QAAUvoB,GAEnB8B,YAAY,EACZC,cAAc,IAEXsxE,KCvDPh/D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAwBxC0+D,GAAuC,SAAUt+D,GAEjD,SAASs+D,IACL,IAAIp+D,EAAQF,EAAO3V,KAAKG,OAASA,KAOjC,OADA0V,EAAM6mD,KAAO,IAAIn+B,GACV1oB,EAeX,OAxBAd,GAAUk/D,EAAuBt+D,GAajCs+D,EAAsBn0E,UAAUmyD,YAAc,SAAU7yB,EAAUc,EAAUC,EAAUC,GAClFzqB,EAAO7V,UAAUmgC,kBAAkBjgC,KAAKG,KAAMi/B,EAAUc,EAAUC,EAAUC,GAC5E,IAAI1/B,EAAQP,KAAKI,SAAS6+B,GACtB0vB,EAAW,IAAIrF,GAAYtpD,KAAKugC,WACpCvgC,KAAKu8D,KAAK/7D,SAASy+B,EAAU,IAAI20C,GAAqBjlB,EAAUpuD,IAChE,IACImB,EAAO1B,KAAKugC,UAChBouB,EAAS1vB,SAAS+vB,WAAWzuD,EAAOP,KAAKkgC,UAAWlgC,KAAKg8B,IAAKh8B,KAAKwgC,WAAY,EAAG,EAAG9+B,EAAK4H,MAAO5H,EAAK6H,OAAQvJ,KAAKmgC,cACnH,IAAI4zC,EAAe,IAAI10D,EAAO0gB,EAASrtB,EAAI1S,KAAK+/B,SAASrtB,EAAGqtB,EAASptB,EAAI3S,KAAK+/B,SAASptB,GACvFssB,EAASyvB,gBAAgBC,EAAUolB,EAAc,IAAIz0D,EAAMqvC,EAASrlD,MAAQ02B,EAAU2uB,EAASplD,OAAS02B,KAErG6zC,GACTv0C,IClDE3qB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAqBxC4+D,GAAoC,SAAUx+D,GAE9C,SAASw+D,EAAmBrrE,EAAM8W,GAC9B,IAAI/J,EAAQF,EAAO3V,KAAKG,OAASA,KAkBjC,OAZA0V,EAAMu+D,oBAAsBp+C,iBAAeg8C,aACvB,IAATpyD,EACP/J,EAAM/M,KAAOA,EAER8W,aAAgBW,GACrB1K,EAAM/M,KAAOA,EACb+M,EAAM+K,MAAQhB,IAGd/J,EAAM/M,KAAOA,EACb+M,EAAMnB,OAASkL,GAEZ/J,EAoCX,OAxDAd,GAAUo/D,EAAoBx+D,GAsB9B9V,OAAOuC,eAAe+xE,EAAmBr0E,UAAW,eAMhDuC,IAAK,WACD,OAAOlC,KAAKi0E,qBAEhB7xE,IAAK,SAAU7B,GACXP,KAAKi0E,oBAAsB1zE,GAE/B8B,YAAY,EACZC,cAAc,IAMlB0xE,EAAmBr0E,UAAUS,SAAW,SAAU6+B,GAC9C,IACI0B,EAAO3gC,KAAK0gC,oBAAoBzB,GAEpC,OADSj/B,KAAKk0E,iBAAiBvzC,IAOnCqzC,EAAmBr0E,UAAUu0E,iBAAmB,SAAUvzC,GACtD,IACIukC,EADWvkC,EAAKplB,SACKtT,MAAM3E,QAAQq9B,GAAQ,EAC/C,OAAO+wC,GAAoB7G,QAAQ3F,EAAWllE,KAAK4xE,cAEhDoC,GACTF,IC/EEl/D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAoBxC++D,GAAmC,SAAU3+D,GAU7C,SAAS2+D,EAAkBxrE,EAAM8X,EAAOpK,GAEpC,IAAK,IADDkmD,KACKtwC,EAAK,EAAGA,EAAKmoD,UAAUpzE,OAAQirB,IACpCswC,EAAKtwC,EAAK,GAAKmoD,UAAUnoD,GAE7B,IAAIvW,EAAQF,EAAO3V,KAAKG,OAASA,KAgBjC,OAVA0V,EAAMm4C,wBAA0B,KAKhCn4C,EAAM2+D,aAAe,GACrB3+D,EAAM/M,KAAOA,EACb+M,EAAM+K,MAAQA,EACd/K,EAAMW,KAAOA,EACbX,EAAMopB,gBAAkBy9B,EACjB7mD,EA+CX,OA7EAd,GAAUu/D,EAAmB3+D,GAgC7B9V,OAAOuC,eAAekyE,EAAkBx0E,UAAW,QAM/CuC,IAAK,WACD,OAAOlC,KAAKq0E,cAEhBjyE,IAAK,SAAU7B,GACXP,KAAKq0E,aAAe9zE,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekyE,EAAkBx0E,UAAW,mBAK/CuC,IAAK,WACD,OAAOlC,KAAK6tD,yBAEhBzrD,IAAK,SAAU7B,GACXP,KAAK6tD,wBAA0BttD,GAEnC8B,YAAY,EACZC,cAAc,IAOlB6xE,EAAkBx0E,UAAUS,SAAW,SAAU6+B,GAC7C,IACI5oB,EAAOrW,KAAKqW,KAAKzW,WACrB,QAAoC,IAAzBI,KAAK8+B,iBAA2D,MAAxB9+B,KAAK8+B,iBAA2B9+B,KAAK8+B,gBAAgB99B,OAAS,EAC7G,IAAK,IAAIkC,EAAI,EAAGA,EAAIlD,KAAK8+B,gBAAgB99B,OAAQkC,IAAK,CAClD,IAAIoxE,EAAiBt0E,KAAK8+B,gBAAgB57B,GAC1CmT,EAAOA,EAAK8rB,QAAQ,IAAMj/B,EAAI,IAAKoxE,EAAel0E,SAAS6+B,IAGnE,OAAO5oB,GAEJ89D,GACTL,ICnGEl/D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAwBxCm/D,GAAqC,SAAU/+D,GAG/C,SAAS++D,IACL,IAAI7+D,EAAQF,EAAO3V,KAAKG,OAASA,KAMjC,OAHA0V,EAAM6mD,KAAO,IAAIn+B,GAEjB1oB,EAAM8+D,mBACC9+D,EAyBX,OAlCAd,GAAU2/D,EAAqB/+D,GAW/B++D,EAAoB50E,UAAUmyD,YAAc,SAAU7yB,EAAUc,EAAUC,EAAUC,GAChFzqB,EAAO7V,UAAUmgC,kBAAkBjgC,KAAKG,KAAMi/B,EAAUc,EAAUC,EAAUC,GAC5E,IACI1kB,EADOvb,KAAK0gC,oBAAoBzB,GAChB1jB,SAChB4H,EAAYnjB,KAAKI,SAAS6+B,GAE9B,GAAIj/B,KAAKu8D,KAAK/6D,YAAY+Z,GAAW,CACjC,IAAIjb,EAAON,KAAKu8D,KAAKn8D,SAASmb,GAC1Bw4D,EAAe,IAAI10D,EAAO0gB,EAASrtB,EAAI1S,KAAK+/B,SAASrtB,EAAGqtB,EAASptB,EAAI3S,KAAK+/B,SAASptB,GACvFssB,EAASyvB,gBAAgBpuD,EAAKquD,SAAUolB,EAAc,IAAIz0D,EAAMhf,EAAKquD,SAASrlD,MAAQ02B,EAAU1/B,EAAKquD,SAASplD,OAAS02B,IACvHjgC,KAAKw0E,gBAAgBtzE,KAAK+9B,OAEzB,CACD,IAAIv9B,EAAO1B,KAAKugC,UACZouB,EAAW,IAAIrF,GAAY5nD,GAC/B1B,KAAKu8D,KAAK/7D,SAAS+a,EAAU,IAAIq4D,GAAqBjlB,EAAUxrC,IAChEwrC,EAAS1vB,SAAS+vB,WAAW7rC,EAAWnjB,KAAKkgC,UAAWlgC,KAAKg8B,IAAKh8B,KAAKwgC,WAAY,EAAG,EAAG9+B,EAAK4H,MAAO5H,EAAK6H,OAAQvJ,KAAKmgC,cACnH4zC,EAAe,IAAI10D,EAAO0gB,EAASrtB,EAAI1S,KAAK+/B,SAASrtB,EAAGqtB,EAASptB,EAAI3S,KAAK+/B,SAASptB,GACvFssB,EAASyvB,gBAAgBC,EAAUolB,EAAc,IAAIz0D,EAAMqvC,EAASrlD,MAAQ02B,EAAU2uB,EAASplD,OAAS02B,IACxGjgC,KAAKw0E,gBAAgBtzE,KAAK+9B,KAI3Bs1C,GACTh1C,IC5DE3qB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAuBxCq/D,GAAmC,SAAUj/D,GAE7C,SAASi/D,EAAkB9rE,EAAM8W,GAC7B,IAAI/J,EAAQF,EAAO3V,KAAKG,OAASA,KAkBjC,OAZA0V,EAAMu+D,oBAAsBp+C,iBAAeg8C,aACvB,IAATpyD,EACP/J,EAAM/M,KAAOA,EAER8W,aAAgBW,GACrB1K,EAAM/M,KAAOA,EACb+M,EAAM+K,MAAQhB,IAGd/J,EAAM/M,KAAOA,EACb+M,EAAMnB,OAASkL,GAEZ/J,EA8BX,OAlDAd,GAAU6/D,EAAmBj/D,GAsB7B9V,OAAOuC,eAAewyE,EAAkB90E,UAAW,eAM/CuC,IAAK,WACD,OAAOlC,KAAKi0E,qBAEhB7xE,IAAK,SAAU7B,GACXP,KAAKi0E,oBAAsB1zE,GAE/B8B,YAAY,EACZC,cAAc,IAOlBmyE,EAAkB90E,UAAUS,SAAW,SAAU6+B,GAC7C,IAGI92B,EAFOnI,KAAK0gC,oBAAoBzB,GAChBqzB,QAAQ/pD,OAAOgT,SACdtT,MAAME,MAE3B,OADSupE,GAAoB7G,QAAQ1iE,EAAOnI,KAAK4xE,cAG9C6C,GACTF,KCtEF,SAAWG,GAKPA,EAAmBA,EAA6B,SAAI,GAAK,WAKzDA,EAAmBA,EAA8B,UAAI,GAAK,YAK1DA,EAAmBA,EAAyB,KAAI,GAAK,OAfzD,CAgBGA,uBAAuBA,0BCT1B,ICRWC,GDQPC,GAAgC,WAChC,SAASA,EAAep1D,EAAMC,GAM1Bzf,KAAKsP,qBAAuB,IAAItH,EAKhChI,KAAK60E,gBAAkBH,qBAAmBI,SAM1C90E,KAAK+0E,WAAa,EAMlB/0E,KAAKg1E,oBAAsB,IAAI31D,EAAO,EAAG,GAMzCrf,KAAKuU,OAAS,IAAIgL,EAKlBvf,KAAK+S,MAAQ,IAAID,EACL8iB,qBAAmBqB,aAC/Bj3B,KAAKg1E,oBAAsB,IAAI31D,EAAO,EAAGrf,KAAKg1E,oBAAoBriE,GAClE3S,KAAKm7D,QAAU37C,EACXC,aAAgBJ,EAChBrf,KAAKg1E,oBAAsBv1D,EAG3Bzf,KAAKuU,OAASkL,EA0GtB,OAvGA/f,OAAOuC,eAAe2yE,EAAej1E,UAAW,QAM5CuC,IAAK,WACD,OAAOlC,KAAK+0E,YAEhB3yE,IAAK,SAAU7B,GACXP,KAAK+0E,WAAax0E,EAClBP,KAAKi1E,uBAET5yE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2yE,EAAej1E,UAAW,QAK5CuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB/4D,IAAK,SAAU7B,GACXP,KAAKm7D,QAAU56D,EACfP,KAAKi1E,uBAET5yE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2yE,EAAej1E,UAAW,QAK5CuC,IAAK,WACD,OAAOlC,KAAK60E,iBAEhBzyE,IAAK,SAAU7B,GACXP,KAAK60E,gBAAkBt0E,EACvBP,KAAKi1E,uBAET5yE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2yE,EAAej1E,UAAW,YAK5CuC,IAAK,WACD,OAAOlC,KAAKg1E,qBAEhB5yE,IAAK,SAAU7B,GACXP,KAAKg1E,oBAAsBz0E,EAC3BP,KAAKi1E,uBAET5yE,YAAY,EACZC,cAAc,IAMlBsyE,EAAej1E,UAAUmiE,iBAAmB,SAAUnhC,EAAMjD,GAExD,OADciD,EAAK2xB,QACJwP,iBAAiBnhC,EAAMjD,IAM1Ck3C,EAAej1E,UAAUs1E,oBAAsB,WAG3C,OAFAj1E,KAAK+S,MAAMtR,QACXzB,KAAK+S,MAAMU,IAAI,IAAIgE,EAAmBzX,KAAKm7D,UACnCn7D,KAAK60E,iBACT,KAAKH,qBAAmBI,SACpB,IAAII,EAAal1E,KAAKm7D,QAClBz9B,EAAQ,IAAIre,EAChBqe,EAAQ19B,KAAK8hE,iBAAiBoT,EAAYl1E,KAAKg1E,qBAC/Ch1E,KAAK+S,MAAMU,IAAI,IAAI9R,EAAQ3B,KAAKsP,qBAAqB3E,MACrD3K,KAAK+S,MAAMU,IAAI,IAAI3B,EAAU4rB,EAAMhrB,IACnC1S,KAAK+S,MAAMU,IAAI,IAAI3B,EAAU4rB,EAAM/qB,IACnC3S,KAAK+S,MAAMU,IAAI,IAAI3B,EAAU9R,KAAK+0E,aAClC,MACJ,KAAKL,qBAAmBS,UACpBn1E,KAAK+S,MAAMU,IAAI,IAAI9R,EAAQ3B,KAAKsP,qBAAqB1E,QAIjElL,OAAOuC,eAAe2yE,EAAej1E,UAAW,WAK5CuC,IAAK,WAED,OADAlC,KAAKi1E,sBACEj1E,KAAK+S,OAEhB1Q,YAAY,EACZC,cAAc,IAEXsyE,KEhKPQ,GAA6B,WAM7B,SAASA,EAAYvmE,GAMjB7O,KAAKq1E,YAAc,KAKnBr1E,KAAK2rD,sBAAwB,IAAI3jD,EACjChI,KAAKq1E,YAAcxmE,EAsDvB,OApDAnP,OAAOuC,eAAemzE,EAAYz1E,UAAW,UAMzCuC,IAAK,WAED,OADalC,KAAKq1E,YAAY9lE,MAAMnP,SAASJ,KAAK2rD,sBAAsBn+C,SAG5EpL,IAAK,SAAU7B,GACXP,KAAKq1E,YAAY9lE,MAAM/O,SAASR,KAAK2rD,sBAAsBn+C,OAAQjN,IAEvE8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemzE,EAAYz1E,UAAW,SAKzCuC,IAAK,WAED,OADalC,KAAKq1E,YAAY9lE,MAAMnP,SAASJ,KAAK2rD,sBAAsBl+C,QAG5ErL,IAAK,SAAU7B,GACXP,KAAKq1E,YAAY9lE,MAAM/O,SAASR,KAAK2rD,sBAAsBl+C,MAAOlN,IAEtE8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemzE,EAAYz1E,UAAW,cAIzCuC,IAAK,WACD,OAAOlC,KAAKq1E,aAEhBhzE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemzE,EAAYz1E,UAAW,WAKzCuC,IAAK,WACD,OAAOlC,KAAKq1E,aAEhBhzE,YAAY,EACZC,cAAc,IAEX8yE,KCzEPxgE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAqBxCkgE,GAAoC,SAAU9/D,GAM9C,SAAS8/D,EAAmB9nE,EAAQC,EAAO8nE,EAAOC,GAC9C,IAAI9/D,EAAQF,EAAO3V,KAAKG,KAAM,IAAIuV,IAAgBvV,KAUlD,YATsB,IAAXwN,EACPkI,EAAM7G,WAAWU,MAAM/O,SAASkV,EAAMi2C,sBAAsBj+C,aAAc,IAAIoE,EAAU,KAGxF4D,EAAM7G,WAAWU,MAAM/O,SAASkV,EAAMi2C,sBAAsBj+C,aAAc,IAAIoE,EAAU,IACxF4D,EAAM+/D,YAAYjoE,EAAQC,EAAO8nE,EAAOC,GACxC9/D,EAAMggE,kBAAkBloE,EAAQC,GAChCiI,EAAMigE,iBAAiBJ,EAAOC,IAE3B9/D,EA4BX,OA5CAd,GAAU0gE,EAAoB9/D,GAsB9B8/D,EAAmB31E,UAAU81E,YAAc,SAAUjoE,EAAQC,EAAO8nE,EAAOC,GACzD/nE,EAAMzM,OACNwM,EAAOxM,OACPw0E,EAAQx0E,QAM1Bs0E,EAAmB31E,UAAU+1E,kBAAoB,SAAUloE,EAAQC,GAC/DzN,KAAKwN,OAAS,IAAIsF,EAAStF,GAC3BxN,KAAKyN,MAAQ,IAAIqF,EAASrF,IAK9B6nE,EAAmB31E,UAAUg2E,iBAAmB,SAAUJ,EAAOC,GAC7D,IAAI3rE,EAAK7J,KAAe,WACxBA,KAAK6O,WAAWU,MAAM/O,SAASR,KAAK2rD,sBAAsBjqD,KAAM,IAAIoR,EAASyiE,IAC7Ev1E,KAAK6O,WAAWU,MAAM/O,SAASR,KAAK2rD,sBAAsBh+C,cAAe,IAAImE,EAAU,IACvFjI,EAAE0M,WAAWi/D,IAEVF,GACTF,KF9DF,SAAWT,GAIPA,EAAUA,EAAgB,KAAI,GAAK,OAInCA,EAAUA,EAAiB,MAAI,GAAK,QAIpCA,EAAUA,EAAe,IAAI,GAAK,MAIlCA,EAAUA,EAAgB,KAAI,GAAK,OAhBvC,CAiBGA,KAAcA,QAIjB,IAAWiB,IACX,SAAWA,GAIPA,EAAsBA,EAAwC,iBAAI,GAAK,mBAIvEA,EAAsBA,EAAuC,gBAAI,GAAK,kBAItEA,EAAsBA,EAAkC,WAAI,GAAK,aAIjEA,EAAsBA,EAAgC,SAAI,GAAK,WAhBnE,CAiBGA,KAA0BA,QAI7B,IAAWC,IACX,SAAWA,GAIPA,EAAYA,EAAsB,SAAI,GAAK,WAI3CA,EAAYA,EAAmB,MAAI,GAAK,QAIxCA,EAAYA,EAAoB,OAAI,GAAK,SAZ7C,CAaGA,KAAgBA,QACnB,IAAWC,IACX,SAAWA,GACPA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAA0B,cAAI,GAAK,gBAC9CA,EAAWA,EAA8B,kBAAI,GAAK,oBAClDA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAAoB,QAAI,GAAK,UACxCA,EAAWA,EAAwB,YAAI,GAAK,cAC5CA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAA8B,kBAAI,GAAK,oBAClDA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAA4B,gBAAI,IAAM,kBACjDA,EAAWA,EAAgC,oBAAI,IAAM,sBACrDA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAmB,OAAI,IAAM,SACxCA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAyB,aAAI,IAAM,eAC9CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAmB,OAAI,IAAM,SACxCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAA2B,eAAI,IAAM,iBAChDA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAyB,aAAI,IAAM,eAC9CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAiB,KAAI,IAAM,OACtCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAAoB,QAAI,IAAM,UACzCA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAmB,OAAI,IAAM,SACxCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAqB,SAAI,IAAM,WAC1CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAyB,aAAI,IAAM,eAC9CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAiC,qBAAI,IAAM,uBACtDA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAuB,WAAI,IAAM,aAC5CA,EAAWA,EAAsB,UAAI,IAAM,YAC3CA,EAAWA,EAAwB,YAAI,IAAM,cAC7CA,EAAWA,EAA0B,cAAI,IAAM,gBAC/CA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAA2B,eAAI,KAAO,iBACjDA,EAAWA,EAA2B,eAAI,KAAO,iBACjDA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAA6B,iBAAI,KAAO,mBACnDA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAA2B,eAAI,KAAO,iBACjDA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAA8B,kBAAI,KAAO,oBACpDA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAqB,SAAI,KAAO,WAC3CA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAA0B,cAAI,KAAO,gBAChDA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAA0B,cAAI,KAAO,gBAChDA,EAAWA,EAA0B,cAAI,KAAO,gBAChDA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAgB,IAAI,KAAO,MACtCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAqB,SAAI,KAAO,WAC3CA,EAAWA,EAAqB,SAAI,KAAO,WAC3CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAgB,IAAI,KAAO,MACtCA,EAAWA,EAAiB,KAAI,KAAO,OACvCA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAsB,UAAI,KAAO,YAC5CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAkB,MAAI,KAAO,QACxCA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAAmB,OAAI,KAAO,SACzCA,EAAWA,EAAwB,YAAI,KAAO,cAC9CA,EAAWA,EAAuB,WAAI,KAAO,aAC7CA,EAAWA,EAA4B,gBAAI,KAAO,kBAClDA,EAAWA,EAAyB,aAAI,KAAO,eAC/CA,EAAWA,EAAkC,sBAAI,KAAO,wBACxDA,EAAWA,EAAoC,wBAAI,KAAO,0BAC1DA,EAAWA,EAAoB,QAAI,KAAO,UAC1CA,EAAWA,EAA0B,cAAI,KAAO,gBA9KpD,CA+KGA,KAAeA,QGnOlB,IAAIC,GAA4B,WAC5B,SAASA,KA66FT,OA36FAr2E,OAAOuC,eAAe8zE,EAAY,aAM9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWG,aACrCx1D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWG,YAEjC,MAATx1D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWG,YAE9Bx1D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,gBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWI,gBACrCz1D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWI,eAEjC,MAATz1D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWI,eAE9Bz1D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWK,QACrC11D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWK,OAEjC,MAAT11D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWK,OAE9B11D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWM,cACrC31D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWM,aAEjC,MAAT31D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWM,aAE9B31D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWO,SACrC51D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWO,QAEjC,MAAT51D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWO,QAE9B51D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWQ,SACrC71D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWQ,QAEjC,MAAT71D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWQ,QAE9B71D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWS,UACrC91D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWS,SAEjC,MAAT91D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWS,SAE9B91D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWU,SACrC/1D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWU,QAEjC,MAAT/1D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWU,QAE9B/1D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,kBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWW,kBACrCh2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWW,iBAEjC,MAATh2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWW,iBAE9Bh2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWY,QACrCj2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWY,OAEjC,MAATj2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWY,OAE9Bj2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWa,cACrCl2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWa,aAEjC,MAATl2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWa,aAE9Bl2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWc,SACrCn2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWc,QAEjC,MAATn2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWc,QAE9Bn2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWe,aACrCp2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWe,YAEjC,MAATp2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWe,YAE9Bp2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgB,aACrCr2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgB,YAEjC,MAATr2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgB,YAE9Br2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiB,cACrCt2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiB,aAEjC,MAATt2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiB,aAE9Bt2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkB,aACrCv2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkB,YAEjC,MAATv2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkB,YAE9Bv2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmB,SACrCx2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmB,QAEjC,MAATx2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmB,QAE9Bx2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,kBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoB,kBACrCz2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoB,iBAEjC,MAATz2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoB,iBAE9Bz2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqB,YACrC12D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqB,WAEjC,MAAT12D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqB,WAE9B12D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsB,WACrC32D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsB,UAEjC,MAAT32D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsB,UAE9B32D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuB,QACrC52D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuB,OAEjC,MAAT52D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuB,OAE9B52D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwB,YACrC72D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwB,WAEjC,MAAT72D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwB,WAE9B72D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyB,YACrC92D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyB,WAEjC,MAAT92D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyB,WAE9B92D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0B,iBACrC/2D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0B,gBAEjC,MAAT/2D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0B,gBAE9B/2D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2B,YACrCh3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2B,WAEjC,MAATh3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2B,WAE9Bh3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4B,aACrCj3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4B,YAEjC,MAATj3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4B,YAE9Bj3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6B,aACrCl3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6B,YAEjC,MAATl3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6B,YAE9Bl3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8B,eACrCn3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8B,cAEjC,MAATn3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8B,cAE9Bn3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,kBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+B,kBACrCp3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+B,iBAEjC,MAATp3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+B,iBAE9Bp3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgC,cACrCr3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgC,aAEjC,MAATr3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgC,aAE9Br3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiC,cACrCt3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiC,aAEjC,MAATt3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiC,aAE9Bt3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkC,WACrCv3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkC,UAEjC,MAATv3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkC,UAE9Bv3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmC,cACrCx3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmC,aAEjC,MAATx3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmC,aAE9Bx3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,gBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoC,gBACrCz3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoC,eAEjC,MAATz3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoC,eAE9Bz3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqC,iBACrC13D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqC,gBAEjC,MAAT13D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqC,gBAE9B13D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsC,iBACrC33D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsC,gBAEjC,MAAT33D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsC,gBAE9B33D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuC,iBACrC53D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuC,gBAEjC,MAAT53D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuC,gBAE9B53D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwC,cACrC73D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwC,aAEjC,MAAT73D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwC,aAE9B73D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyC,YACrC93D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyC,WAEjC,MAAT93D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyC,WAE9B93D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0C,eACrC/3D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0C,cAEjC,MAAT/3D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0C,cAE9B/3D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2C,WACrCh4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2C,UAEjC,MAATh4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2C,UAE9Bh4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4C,cACrCj4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4C,aAEjC,MAATj4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4C,aAE9Bj4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6C,aACrCl4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6C,YAEjC,MAATl4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6C,YAE9Bl4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8C,eACrCn4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8C,cAEjC,MAATn4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8C,cAE9Bn4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+C,eACrCp4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+C,cAEjC,MAATp4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+C,cAE9Bp4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgD,WACrCr4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgD,UAEjC,MAATr4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgD,UAE9Br4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiD,aACrCt4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiD,YAEjC,MAATt4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiD,YAE9Bt4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkD,cACrCv4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkD,aAEjC,MAATv4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkD,aAE9Bv4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmD,QACrCx4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmD,OAEjC,MAATx4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmD,OAE9Bx4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoD,aACrCz4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoD,YAEjC,MAATz4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoD,YAE9Bz4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqD,QACrC14D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqD,OAEjC,MAAT14D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqD,OAE9B14D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsD,SACrC34D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsD,QAEjC,MAAT34D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsD,QAE9B34D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuD,eACrC54D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuD,cAEjC,MAAT54D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuD,cAE9B54D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwD,YACrC74D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwD,WAEjC,MAAT74D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwD,WAE9B74D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyD,WACrC94D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyD,UAEjC,MAAT94D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyD,UAE9B94D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0D,aACrC/4D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0D,YAEjC,MAAT/4D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0D,YAE9B/4D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2D,UACrCh5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2D,SAEjC,MAATh5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2D,SAE9Bh5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4D,SACrCj5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4D,QAEjC,MAATj5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4D,QAE9Bj5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6D,SACrCl5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6D,QAEjC,MAATl5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6D,QAE9Bl5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8D,YACrCn5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8D,WAEjC,MAATn5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8D,WAE9Bn5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+D,iBACrCp5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+D,gBAEjC,MAATp5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+D,gBAE9Bp5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgE,aACrCr5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgE,YAEjC,MAATr5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgE,YAE9Br5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,gBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiE,gBACrCt5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiE,eAEjC,MAATt5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiE,eAE9Bt5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkE,aACrCv5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkE,YAEjC,MAATv5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkE,YAE9Bv5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmE,cACrCx5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmE,aAEjC,MAATx5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmE,aAE9Bx5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoE,aACrCz5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoE,YAEjC,MAATz5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoE,YAE9Bz5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,wBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqE,wBACrC15D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqE,uBAEjC,MAAT15D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqE,uBAE9B15D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsE,aACrC35D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsE,YAEjC,MAAT35D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsE,YAE9B35D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuE,cACrC55D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuE,aAEjC,MAAT55D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuE,aAE9B55D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwE,aACrC75D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwE,YAEjC,MAAT75D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwE,YAE9B75D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyE,eACrC95D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyE,cAEjC,MAAT95D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyE,cAE9B95D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0E,iBACrC/5D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0E,gBAEjC,MAAT/5D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0E,gBAE9B/5D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,gBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2E,gBACrCh6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2E,eAEjC,MAATh6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2E,eAE9Bh6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,kBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4E,kBACrCj6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4E,iBAEjC,MAATj6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4E,iBAE9Bj6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,kBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6E,kBACrCl6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6E,iBAEjC,MAATl6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6E,iBAE9Bl6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8E,eACrCn6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8E,cAEjC,MAATn6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8E,cAE9Bn6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+E,QACrCp6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+E,OAEjC,MAATp6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+E,OAE9Bp6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgF,aACrCr6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgF,YAEjC,MAATr6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgF,YAE9Br6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiF,SACrCt6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiF,QAEjC,MAATt6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiF,QAE9Bt6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkF,WACrCv6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkF,UAEjC,MAATv6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkF,UAE9Bv6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmF,UACrCx6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmF,SAEjC,MAATx6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmF,SAE9Bx6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,oBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoF,oBACrCz6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoF,mBAEjC,MAATz6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoF,mBAE9Bz6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqF,cACrC16D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqF,aAEjC,MAAT16D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqF,aAE9B16D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,gBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsF,gBACrC36D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsF,eAEjC,MAAT36D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsF,eAE9B36D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,gBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuF,gBACrC56D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuF,eAEjC,MAAT56D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuF,eAE9B56D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,kBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwF,kBACrC76D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwF,iBAEjC,MAAT76D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwF,iBAE9B76D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,mBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyF,mBACrC96D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyF,kBAEjC,MAAT96D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyF,kBAE9B96D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,qBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0F,qBACrC/6D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0F,oBAEjC,MAAT/6D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0F,oBAE9B/6D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,mBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2F,mBACrCh7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2F,kBAEjC,MAATh7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2F,kBAE9Bh7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,mBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4F,mBACrCj7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4F,kBAEjC,MAATj7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4F,kBAE9Bj7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,gBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6F,gBACrCl7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6F,eAEjC,MAATl7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6F,eAE9Bl7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8F,aACrCn7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8F,YAEjC,MAATn7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8F,YAE9Bn7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+F,aACrCp7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+F,YAEjC,MAATp7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+F,YAE9Bp7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgG,YACrCr7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgG,WAEjC,MAATr7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgG,WAE9Br7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiG,eACrCt7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiG,cAEjC,MAATt7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiG,cAE9Bt7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkG,QACrCv7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkG,OAEjC,MAATv7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkG,OAE9Bv7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmG,WACrCx7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmG,UAEjC,MAATx7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmG,UAE9Bx7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoG,SACrCz7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoG,QAEjC,MAATz7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoG,QAE9Bz7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqG,aACrC17D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqG,YAEjC,MAAT17D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqG,YAE9B17D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsG,UACrC37D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsG,SAEjC,MAAT37D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsG,SAE9B37D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuG,aACrC57D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuG,YAEjC,MAAT57D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuG,YAE9B57D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwG,UACrC77D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwG,SAEjC,MAAT77D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwG,SAE9B77D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyG,iBACrC97D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyG,gBAEjC,MAAT97D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyG,gBAE9B97D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0G,aACrC/7D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0G,YAEjC,MAAT/7D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0G,YAE9B/7D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2G,iBACrCh8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2G,gBAEjC,MAATh8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2G,gBAE9Bh8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,iBAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4G,iBACrCj8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4G,gBAEjC,MAATj8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4G,gBAE9Bj8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6G,cACrCl8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6G,aAEjC,MAATl8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6G,aAE9Bl8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8G,aACrCn8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8G,YAEjC,MAATn8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8G,YAE9Bn8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+G,QACrCp8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+G,OAEjC,MAATp8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+G,OAE9Bp8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgH,QACrCr8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgH,OAEjC,MAATr8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgH,OAE9Br8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiH,QACrCt8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiH,OAEjC,MAATt8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiH,OAE9Bt8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkH,cACrCv8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkH,aAEjC,MAATv8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkH,aAE9Bv8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmH,UACrCx8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmH,SAEjC,MAATx8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmH,SAE9Bx8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,OAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoH,OACrCz8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoH,MAEjC,MAATz8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoH,MAE9Bz8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqH,aACrC18D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqH,YAEjC,MAAT18D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqH,YAE9B18D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsH,aACrC38D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsH,YAEjC,MAAT38D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsH,YAE9B38D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuH,eACrC58D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuH,cAEjC,MAAT58D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuH,cAE9B58D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwH,UACrC78D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwH,SAEjC,MAAT78D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwH,SAE9B78D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyH,cACrC98D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyH,aAEjC,MAAT98D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyH,aAE9B98D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0H,YACrC/8D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0H,WAEjC,MAAT/8D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0H,WAE9B/8D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,YAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2H,YACrCh9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2H,WAEjC,MAATh9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2H,WAE9Bh9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4H,UACrCj9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4H,SAEjC,MAATj9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4H,SAE9Bj9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6H,UACrCl9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6H,SAEjC,MAATl9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6H,SAE9Bl9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8H,WACrCn9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8H,UAEjC,MAATn9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8H,UAE9Bn9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+H,aACrCp9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+H,YAEjC,MAATp9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+H,YAE9Bp9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWgI,aACrCr9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWgI,YAEjC,MAATr9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWgI,YAE9Br9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWiI,QACrCt9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWiI,OAEjC,MAATt9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWiI,OAE9Bt9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWkI,eACrCv9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWkI,cAEjC,MAATv9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWkI,cAE9Bv9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWmI,aACrCx9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWmI,YAEjC,MAATx9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWmI,YAE9Bx9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,OAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWoI,OACrCz9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWoI,MAEjC,MAATz9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWoI,MAE9Bz9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,QAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWqI,QACrC19D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWqI,OAEjC,MAAT19D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWqI,OAE9B19D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,WAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWsI,WACrC39D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWsI,UAEjC,MAAT39D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWsI,UAE9B39D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWuI,UACrC59D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWuI,SAEjC,MAAT59D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWuI,SAE9B59D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWwI,eACrC79D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWwI,cAEjC,MAAT79D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWwI,cAE9B79D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,aAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAWyI,aACrC99D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAWyI,YAEjC,MAAT99D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAWyI,YAE9B99D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW0I,UACrC/9D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW0I,SAEjC,MAAT/9D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW0I,SAE9B/9D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW2I,SACrCh+D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW2I,QAEjC,MAATh+D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW2I,QAE9Bh+D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,SAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW4I,SACrCj+D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW4I,QAEjC,MAATj+D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW4I,QAE9Bj+D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,cAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW6I,cACrCl+D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW6I,aAEjC,MAATl+D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW6I,aAE9Bl+D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,UAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW8I,UACrCn+D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW8I,SAEjC,MAATn+D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW8I,SAE9Bn+D,GAEXpe,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8zE,EAAY,eAK9B7zE,IAAK,WACD,IAAIue,EAAQ,KAOZ,OANIzgB,KAAKg2E,SAASx0E,YAAYs0E,GAAW+I,eACrCp+D,EAASzgB,KAAKg2E,SAAS51E,SAAS01E,GAAW+I,cAEjC,MAATp+D,IACDA,EAAQzgB,KAAKwgC,SAASs1C,GAAW+I,cAE9Bp+D,GAEXpe,YAAY,EACZC,cAAc,IAKlByzE,EAAWv1C,SAAW,SAAUs+C,GAC5B,IAAIv+D,EAAWvgB,KAAK++E,cAAcD,GAC9Br+D,EAAQ,IAAIJ,EAAcE,GAE9B,OADAvgB,KAAKg2E,SAASx1E,SAASs+E,EAAWr+D,GAC3BA,GAOXs1D,EAAWgJ,cAAgB,SAAUD,GACjC,IAAIx+D,EAAQ,IAAI3D,EAChB,OAAQmiE,GACJ,KAAKhJ,GAAWwI,YACZh+D,EAAQ,IAAI3D,EAAS,EAAG,IAAK,IAAK,KAClC,MACJ,KAAKm5D,GAAWG,UACZ31D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWI,aACZ51D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWK,KACZ71D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAWM,WACZ91D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWO,MACZ/1D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWQ,MACZh2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWS,OACZj2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWU,MACZl2D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,GAChC,MACJ,KAAKm5D,GAAWW,eACZn2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWY,KACZp2D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKm5D,GAAWa,WACZr2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKm5D,GAAWc,MACZt2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKm5D,GAAWe,UACZv2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWgB,UACZx2D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAWiB,WACZz2D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKm5D,GAAWkB,UACZ12D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAWmB,MACZ32D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAWoB,eACZ52D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWqB,SACZ72D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWsB,QACZ92D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKm5D,GAAWuB,KACZ/2D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAWwB,SACZh3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKm5D,GAAWyB,SACZj3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAW0B,cACZl3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAW2B,SACZn3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW4B,UACZp3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,GAClC,MACJ,KAAKm5D,GAAW6B,UACZr3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW8B,YACZt3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKm5D,GAAW+B,eACZv3D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKm5D,GAAWgC,WACZx3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKm5D,GAAWiC,WACZz3D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKm5D,GAAWkC,QACZ13D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,GAClC,MACJ,KAAKm5D,GAAWmC,WACZ33D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWoC,aACZ53D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWqC,cACZ73D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,GAAI,KAClC,MACJ,KAAKm5D,GAAWsC,cACZ93D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,GAAI,IAClC,MACJ,KAAKm5D,GAAWuC,cACZ/3D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAWwC,WACZh4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKm5D,GAAWyC,SACZj4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKm5D,GAAW0C,YACZl4D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAW2C,QACZn4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW4C,WACZp4D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAW6C,UACZr4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKm5D,GAAW8C,YACZt4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW+C,YACZv4D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKm5D,GAAWgD,QACZx4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKm5D,GAAWiD,UACZz4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWkD,WACZ14D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWmD,KACZ34D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKm5D,GAAWoD,UACZ54D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAWqD,KACZ74D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWsD,MACZ94D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,GAClC,MACJ,KAAKm5D,GAAWuD,YACZ/4D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAWwD,SACZh5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWyD,QACZj5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW0D,UACZl5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKm5D,GAAW2D,OACZn5D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,EAAG,KACjC,MACJ,KAAKm5D,GAAW4D,MACZp5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW6D,MACZr5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW8D,SACZt5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW+D,cACZv5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWgE,UACZx5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKm5D,GAAWiE,aACZz5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWkE,UACZ15D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWmE,WACZ35D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWoE,UACZ55D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWqE,qBACZ75D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWuE,WACZ/5D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWsE,UACZ95D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWwE,UACZh6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWyE,YACZj6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW0E,cACZl6D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAW2E,aACZn6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW4E,eACZp6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW6E,eACZr6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW8E,YACZt6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW+E,KACZv6D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,GAClC,MACJ,KAAKm5D,GAAWgF,UACZx6D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKm5D,GAAWiF,MACZz6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWkF,QACZ16D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKm5D,GAAWmF,OACZ36D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,GAClC,MACJ,KAAKm5D,GAAWoF,iBACZ56D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWqF,WACZ76D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKm5D,GAAWsF,aACZ96D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKm5D,GAAWuF,aACZ/6D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWwF,eACZh7D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAWyF,gBACZj7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW0F,kBACZl7D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAW2F,gBACZn7D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAW4F,gBACZp7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKm5D,GAAW6F,aACZr7D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,GAAI,KAClC,MACJ,KAAKm5D,GAAW8F,UACZt7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW+F,UACZv7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWgG,SACZx7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWiG,YACZz7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWkG,KACZ17D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,EAAG,KAChC,MACJ,KAAKm5D,GAAWmG,QACZ37D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWoG,MACZ57D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKm5D,GAAWqG,UACZ77D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAWsG,OACZ97D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKm5D,GAAWuG,UACZ/7D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,GACnC,MACJ,KAAKm5D,GAAWwG,OACZh8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWyG,cACZj8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW0G,UACZl8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW2G,cACZn8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW4G,cACZp8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW6G,WACZr8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW8G,UACZt8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW+G,KACZv8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAWgH,KACZx8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWiH,KACZz8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWkH,WACZ18D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWmH,OACZ38D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,KAClC,MACJ,KAAKm5D,GAAWoH,IACZ58D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,EAAG,GAClC,MACJ,KAAKm5D,GAAWqH,UACZ78D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWsH,UACZ98D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAWuH,YACZ/8D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKm5D,GAAWwH,OACZh9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWyH,WACZj9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IACpC,MACJ,KAAKm5D,GAAW0H,SACZl9D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,IACnC,MACJ,KAAKm5D,GAAW2H,SACZn9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW4H,OACZp9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKm5D,GAAW6H,OACZr9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW8H,QACZt9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW+H,UACZv9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,KACnC,MACJ,KAAKm5D,GAAWgI,UACZx9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWiI,KACZz9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWkI,YACZ19D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAWmI,UACZ39D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAWoI,IACZ59D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWqI,KACZ79D,EAAQ,IAAI3D,EAAS,IAAK,EAAG,IAAK,KAClC,MACJ,KAAKm5D,GAAWsI,QACZ99D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAWuI,OACZ/9D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,GAAI,IACnC,MACJ,KAAKm5D,GAAWyI,UACZj+D,EAAQ,IAAI3D,EAAS,IAAK,GAAI,IAAK,KACnC,MACJ,KAAKm5D,GAAW0I,OACZl+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW2I,MACZn+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW4I,MACZp+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW6I,WACZr+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,KACpC,MACJ,KAAKm5D,GAAW8I,OACZt+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,GACpC,MACJ,KAAKm5D,GAAW+I,YACZv+D,EAAQ,IAAI3D,EAAS,IAAK,IAAK,IAAK,IAG5C,OAAO2D,GAMXy1D,EAAWC,SAAW,IAAIl2E,EACnBi2E,KCh7FPiJ,GAA0B,WAC1B,SAASA,EAAS72E,GAMdnI,KAAKi/E,UAAY,IAwOrB,OArOAv/E,OAAOuC,eAAe+8E,EAASr/E,UAAW,WAMtCuC,IAAK,WACD,OAAOlC,KAAKk/E,UAEhB98E,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI+V,MAAM,mCAEpBtW,KAAKk/E,SAAW3+E,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+8E,EAASr/E,UAAW,aAKtCuC,IAAK,WACD,OAAOlC,KAAKm/E,YAEhB/8E,IAAK,SAAU7B,GAEX,IAAK,IADD6+E,EAAgB7+E,EACX2C,EAAI,EAAGA,EAAIk8E,EAAcp+E,OAAQkC,KAChCk8E,EAAcl8E,GAAK,GAAOk8E,EAAcl8E,GAAK,KAC/Ck8E,EAAcl8E,GAAK,GAG3BlD,KAAKm/E,WAAaC,EAClBp/E,KAAKm/E,WAAa5+E,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+8E,EAASr/E,UAAW,SAKtCuC,IAAK,WACD,OAAOlC,KAAKq/E,QAEhBh9E,YAAY,EACZC,cAAc,IAQlB08E,EAASr/E,UAAU2/E,mBAAqB,SAAU7kD,EAASvxB,GACvD,GAAgB,MAAXuxB,EACD,MAAM,IAAInkB,MAAM,mCAEG,MAAlBtW,KAAKu/E,YACNv/E,KAAKu/E,WAAa,IAEtB,IAAIC,EAAS,IAAIC,GAAcz/E,KAAKmI,OAChCo3E,EAAYv/E,KAAKu/E,UACjBG,EAAO,KACX,GAA0B,IAArBH,EAAUv+E,QACXu+E,GAAa,IACH,GAAK,EACfA,EAAU,GAAKv/E,KAAKu/E,UAAU,GAC9BA,EAAU,GAAK,GAEfG,EAAO,IAAIxqE,MAAM,IACZ,GAAKulB,EAAQ,GAClBilD,EAAK,GAAKjlD,EAAQ,GAClBilD,EAAK,GAAKjlD,EAAQ,OAEjB,CACD,IAAIklD,EAAKllD,EAAQ,GACbmlD,EAAKnlD,EAAQ,GAEjBilD,EAAO,IAAIxqE,MAAMlV,KAAKmI,OACtB,IAAIjF,EAAI,EACJiF,EAAQnI,KAAKmI,MACjB,IAAKjF,EAAI,EAAGA,EAAIiF,IAASjF,EACrBw8E,EAAKx8E,GAAKlD,KAAK6/E,YAAY7/E,KAAKk/E,SAASh8E,GAAIy8E,EAAIC,EAAI12E,GAK7D,OAFAs2E,EAAOD,UAAYA,EACnBC,EAAOM,OAASJ,EACTF,GAMXR,EAASr/E,UAAUogF,cAAgB,WAQ/B,OANsB,MAAjB//E,KAAKk/E,WADEl/E,KAEFggF,QAAWhgF,KAAa,UAEX,MAAlBA,KAAKu/E,YAJEv/E,KAKFu/E,UAAav/E,KAAc,WALzBA,MAShBg/E,EAASr/E,UAAUsgF,IAAM,SAAUC,EAAGC,GAClC,GAAiB,iBAAND,GAA+B,iBAANC,QAA+B,IAANA,EAAmB,CAC5E,GAAMD,EAAI,GAAOA,EAAI,EACjB,MAAM,IAAI5pE,MAAM,mCAEpB,GAAM6pE,EAAI,GAAOA,EAAI,EACjB,MAAM,IAAI7pE,MAAM,mCAEpB,IAAI8pE,EAAMvtE,KAAKsV,IAAI,EAAI+3D,EAAIlgF,KAAKi/E,WAC5BoB,EAAMxtE,KAAKsV,IAAI,EAAIg4D,EAAIngF,KAAKi/E,WAGhC,OAFcj/E,KAAKsgF,OAAOF,EAAIC,GACJrgF,KAAKi/E,UAI/B,IAAI99E,EAAS++E,EACb,GAAe,MAAV/+E,EACD,MAAM,IAAImV,MAAM,kCAEpB,GAAKnV,EAAOH,OAAS,EACjB,MAAM,IAAIsV,MAAM,gEAEpB,IAAI2pE,EAAM9+E,EAAO,GACjB,GAAKA,EAAOH,OAAS,EAEjB,IAAK,IADDmH,EAAQhH,EAAOH,OACVkC,EAAI,EAAGA,EAAIiF,IAChB83E,EAAMjgF,KAAKigF,IAAI9+E,EAAO+B,GAAI+8E,MACZ,EAAIjgF,KAAKi/E,YAFE/7E,GAOjC,OAAO+8E,GAQfjB,EAASr/E,UAAU2gF,OAAS,SAAUJ,EAAGC,GACrC,GAAKD,GAAK,EACN,MAAM,IAAI5pE,MAAM,8BAAgC4pE,EAAI,kDAExD,GAAKC,GAAK,EACN,MAAM,IAAI7pE,MAAM,8BAAgC6pE,EAAI,kDAExD,GAAY,IAAND,GAAmB,IAANC,EACf,OAAO,EAGX,IADA,IAAIv0C,EAAQ,EACL5rC,KAAKigE,OAAOigB,EAAGC,MAChBv0C,EACFs0C,IAAM,EACNC,IAAM,EAEV,MAAa,EAAJD,IAAU,GACfA,IAAM,EAEV,EAAG,CACC,MAAY,EAAJC,IAAU,GACdA,IAAM,EAEV,GAAID,EAAIC,EAAG,CACP,IAAI15B,EAAI05B,EACRA,EAAID,EACJA,EAAIz5B,EAER05B,GAAQD,QACG,IAANC,GACT,OAAQD,GAAKt0C,GAEjBozC,EAASr/E,UAAUsgE,OAAS,SAAUzgD,EAAMC,GACxC,GAAoB,iBAATA,QAAqC,IAATA,EAAsB,CACzD,IAAIxc,GAAS,EAGb,OAFAA,EAAUA,IAAmB,EAAPuc,IAAa,EACnCvc,EAAUA,IAAmB,EAAPwc,IAAa,EAInC,OAAgB,EAAPD,IAAa,GAG9Bw/D,EAASr/E,UAAUkgF,YAAc,SAAUp5B,EAAG7pC,EAAQC,EAAQ3T,GAC1D,GAAI0T,aAAkBD,EAAU,CAC5B,IAAI2D,EAAQ,IAAI3D,EAChB,OAAQzT,GACJ,KAAKoT,gBAAckC,IACf,IAAIT,EAAO/d,KAAK6/E,YAAYp5B,EAAG7pC,EAAOmB,IAAKlB,EAAOkB,KAC9CC,EAAShe,KAAK6/E,YAAYp5B,EAAG7pC,EAAOoB,MAAOnB,EAAOmB,OAClDC,EAAQje,KAAK6/E,YAAYp5B,EAAG7pC,EAAOqB,KAAMpB,EAAOoB,MACpDqC,EAAQ,IAAI3D,EAASoB,EAAKC,EAAOC,GACjC,MACJ,KAAK3B,gBAAcoC,UACf,IAAInB,EAAQvd,KAAK6/E,YAAYp5B,EAAG7pC,EAAOW,KAAMV,EAAOU,MACpD+C,EAAQ,IAAI3D,EAASY,GACrB,MACJ,KAAKjB,gBAAcsC,KACf,IAAIT,EAAQne,KAAK6/E,YAAYp5B,EAAG7pC,EAAOrZ,EAAGsZ,EAAOtZ,GAC7C6a,EAAWpe,KAAK6/E,YAAYp5B,EAAG7pC,EAAOuC,EAAGtC,EAAOsC,GAChDd,EAAUre,KAAK6/E,YAAYp5B,EAAG7pC,EAAOjK,EAAGkK,EAAOlK,GAC/CuL,EAASle,KAAK6/E,YAAYp5B,EAAG7pC,EAAOnc,EAAGoc,EAAOpc,GAClD6f,EAAQ,IAAI3D,EAASwB,EAAMC,EAASC,EAAQH,GAGpD,OAAOoC,EAeP,OAZS,IAGJmmC,EACQ7pC,EAHJ,IAKC6pC,EACG5pC,EAGCD,GAAuBC,EAASD,MAArB6pC,EAVhB,IAeVu4B,KCzPPpqE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAwBxCqqE,GAA+B,SAAUjqE,GAEzC,SAASiqE,EAAct3E,GACnB,IAAIuN,EAAQF,EAAO3V,KAAKG,OAASA,KAIjC,MAHqB,iBAAVmI,IACPuN,EAAQF,EAAO3V,KAAKG,KAAMmI,IAAUnI,MAEjC0V,EAqQX,OA3QAd,GAAU6qE,EAAejqE,GAQzB9V,OAAOuC,eAAew9E,EAAc9/E,UAAW,UAM3CuC,IAAK,WACD,OAAOlC,KAAKugF,SAEhBn+E,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI+V,MAAM,kCAEpBtW,KAAKugF,QAAUhgF,GAEnB8B,YAAY,EACZC,cAAc,IAQlBm9E,EAAc9/E,UAAU6gF,YAAc,SAAUt3E,GAC5C,IACIu3E,EAAmBzgF,KAAK0gF,wBAAwBx3E,GAChDy3E,EAAoB3gF,KAAK4gF,qBAAqB13E,GAC9CuE,EAAQzN,KAAK6gF,SAASJ,EAAkBE,GACxCG,EAAO,KACX,GAAoB,MAAf9gF,KAAK+gF,aAAyC,IAAhB/gF,KAAK+gF,OAAyB,CAC7D,IAAIxL,GAAS,GACTyL,OAAe,EACfC,EAAO,EACX,GAA8B,IAA1BjhF,KAAKu/E,UAAUv+E,OACfggF,EAAe,MAEd,CACD,IAAIzB,EAAYv/E,KAAKu/E,UACjB2B,EAAYlhF,KAAKmhF,aAAa5B,GAC9BU,EAAMjgF,KAAKigF,IAAIiB,GACnBD,EAAOhB,EACPe,EAAkB,EAAIf,EAAQ,EAElC1K,EAAM,GAAKyL,EACX,IAAIxL,EAAUx1E,KAAKohF,iBAAiBl4E,EAAY83E,EAAcL,EAAmBM,GAEjF,OADAH,EAAO,IAAIxL,IArBD,EAAG,GAqByB7nE,EAAO8nE,EAAOC,GAGxD,OAAOsL,GAMXrB,EAAc9/E,UAAU0hF,gBAAkB,WAQtC,OANqB,MAAhBrhF,KAAKugF,cAA2C,IAAjBvgF,KAAKugF,UAD5BvgF,KAEF8/E,OAAU9/E,KAAY,SAEV,MAAlBA,KAAKu/E,gBAA+C,IAAnBv/E,KAAKu/E,YAJ9Bv/E,KAKFu/E,UAAav/E,KAAc,WALzBA,MAcjBy/E,EAAc9/E,UAAUkhF,SAAW,SAAUJ,EAAkBa,GAE3D,IAAK,IADD7zE,GAA6B,EAAnBgzE,GACLv9E,EAAI,EAAIA,EAAIu9E,IAAqBv9E,EACtCuK,EAAW,EAAJvK,GAAU,EACjBuK,EAAY,EAAJvK,EAAS,GAAM,EAE3B,OAAOuK,GAMXgyE,EAAc9/E,UAAU+gF,wBAA0B,SAAUx3E,GACxD,IAAIf,EAAQ,EACZ,OAAQe,GACJ,KAAKoT,gBAAckC,IACfrW,EAAQ,EACR,MACJ,KAAKmU,gBAAcsC,KACfzW,EAAQ,EACR,MACJ,KAAKmU,gBAAcoC,UACfvW,EAAQ,EACR,MACJ,QACI,MAAM,IAAImO,MAAM,gDAAkDpN,EAAa,eAEvF,OAAOf,GASXs3E,EAAc9/E,UAAUyhF,iBAAmB,SAAUl4E,EAAYq4E,EAAaZ,EAAmBM,GAC7F,IAAI9/E,EACJ,OAAQ+H,GACJ,KAAKoT,gBAAcoC,UACfvd,EAASnB,KAAKwhF,oBAAoBD,EAAaZ,EAAmBM,GAClE,MACJ,KAAK3kE,gBAAcsC,KACfzd,EAASnB,KAAKyhF,eAAeF,EAAaZ,EAAmBM,GAC7D,MACJ,KAAK3kE,gBAAckC,IACfrd,EAASnB,KAAK0hF,cAAcH,EAAaZ,EAAmBM,GAC5D,MACJ,QACI,MAAM,IAAI3qE,MAAM,gDAAkDpN,EAAa,eAEvF,OAAO/H,GAQXs+E,EAAc9/E,UAAU6hF,oBAAsB,SAAUD,EAAaZ,EAAmBM,GAEpF,IAAK,IADD9/E,GAAyB,EAAdogF,GACNr+E,EAAI,EAAIA,EAAIq+E,IAAgBr+E,EACrBlD,KAAK2hF,aAAaz+E,EAAG+9E,EAAM3kE,gBAAcoC,WAGzD,OAAOvd,GAQXs+E,EAAc9/E,UAAU+hF,cAAgB,SAAUH,EAAaZ,EAAmBM,GAE9E,IAAK,IADD9/E,GAAyB,EAAdogF,GACNr+E,EAAI,EAAIA,EAAIq+E,IAAgBr+E,EAAG,CACpC,IAAIod,EAAQtgB,KAAK2hF,aAAaz+E,EAAG+9E,EAAM3kE,gBAAckC,KACjDhP,EAAa,EAAJtM,EACb/B,EAAOqO,GAAS8Q,EAAMzc,EACtB1C,EAAQqO,EAAQ,GAAM8Q,EAAMlD,EAC5Bjc,EAAQqO,EAAQ,GAAM8Q,EAAMvL,EAEhC,OAAO5T,GAQXs+E,EAAc9/E,UAAU8hF,eAAiB,SAAUF,EAAaZ,EAAmBM,GAE/E,IAAK,IADD9/E,GAAyB,EAAdogF,GACNr+E,EAAI,EAAIA,EAAIq+E,EAAcr+E,IAAK,CACpC,IAAIod,EAAQtgB,KAAK2hF,aAAaz+E,EAAG+9E,EAAM3kE,gBAAcsC,MACjDpP,EAAa,EAAJtM,EACb/B,EAAOqO,GAAW8Q,EAAM/c,EAAIo9E,EAC5Bx/E,EAAQqO,EAAQ,GAAQ8Q,EAAMnB,EAAIwhE,EAClCx/E,EAAQqO,EAAQ,GAAQ8Q,EAAM3N,EAAIguE,EAClCx/E,EAAQqO,EAAQ,GAAQ8Q,EAAM7f,EAAIkgF,EAEtC,OAAOx/E,GAQXs+E,EAAc9/E,UAAUgiF,aAAe,SAAUnyE,EAAOyxE,EAAM/3E,GAC1D,IACI04E,EACAC,EAIAvhE,EANAjF,EAAY4lE,EAAOzxE,EAGnBvM,EAASjD,KAAK8hF,WAAWzmE,EAAUwmE,EAAUD,GAIjD,IAHAC,EAAW5+E,EAAO4+E,aAClBD,EAAU3+E,EAAO2+E,SAGbthE,EAAQtgB,KAAKugF,QAAQsB,OAEpB,CACD,IAAIE,EAAc/hF,KAAKu/E,UAAUsC,GAC7BG,EAAahiF,KAAKu/E,UAAUqC,GAC5BK,EAAWjiF,KAAKugF,QAAQsB,GACxBK,EAAUliF,KAAKugF,QAAQqB,GACvBn7B,GAAMprC,EAAW0mE,IAAgBC,EAAaD,GAClDzhE,EAAQtgB,KAAK6/E,YAAYp5B,EAAGw7B,EAAUC,EAASh5E,GAEnD,OAAOoX,GAQXm/D,EAAc9/E,UAAUmiF,WAAa,SAAUzmE,EAAUwmE,EAAUD,GAC/D,IAAIrC,EAAYv/E,KAAKu/E,UACrBsC,EAAW,EACXD,EAAU,EACV,IAAK,IAAI1+E,EAAI,EAAIA,EAAIlD,KAAKugF,QAAQv/E,SAAWkC,EAAG,CAC5C,IAAIi/E,EAAU5C,EAAUr8E,GACxB,GAAKi/E,IAAY9mE,EAAW,CACxBumE,EAAU1+E,EACV2+E,EAAW3+E,EACX,MAEC,GAAKi/E,EAAU9mE,EAAW,CAC3BumE,EAAU1+E,EACV,MAEJ2+E,EAAW3+E,EACX0+E,EAAU1+E,EAEd,OAAS2+E,SAAUA,EAAUD,QAASA,IAM1CnC,EAAc9/E,UAAUihF,qBAAuB,SAAU13E,GACrD,IAAIjG,EAAS,EACb,OAAQiG,GACJ,KAAKoT,gBAAcsC,KACnB,KAAKtC,gBAAckC,IACfvb,EAAS,IACT,MACJ,KAAKqZ,gBAAcoC,UACfzb,EAAS,MACT,MACJ,QACI,MAAM,IAAIqT,MAAM,gDAAkDpN,EAAa,cAEvF,OAAOjG,GAMXw8E,EAAc9/E,UAAUwhF,aAAe,SAAU5B,GAI7C,IAAK,IAHDp3E,EAAQo3E,EAAUv+E,OAClBkgF,GAAc/4E,EAAQ,GACtBi6E,EAAO7C,EAAU,GACZr8E,EAAI,EAAIA,EAAIiF,IAAUjF,EAAG,CAC9B,IAAIi9E,EAAIZ,EAAUr8E,GAClBg+E,EAAWh+E,EAAI,GAAOi9E,EAAIiC,EAC1BA,EAAOjC,EAEX,OAAOe,GAEJzB,GACTT,ICrSEpqE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GA+BxCitE,GAAwC,SAAU7sE,GAOlD,SAAS6sE,EAAuB7iE,EAAMC,EAAMC,EAAMC,GAC9C,IAAIjK,EAAQF,EAAO3V,KAAKG,KAAM,IAAI4O,IAAoB5O,KAMtD,GADA0V,EAAMi2C,sBAAwB,IAAI3jD,EAC9BwX,aAAgBH,GAAUI,aAAgBJ,GAAUK,aAAgB/C,GAAYgD,aAAgBhD,EAChGjH,EAAMqF,WAAW2E,EAAMC,GACvBjK,EAAM4sE,YAAc9iE,EACpB9J,EAAM6sE,UAAY9iE,EAClB/J,EAAM8sE,UAAU9sE,EAAM4sE,YAAa5sE,EAAM6sE,gBAExC,GAAI/iE,aAAgBM,EAGrB,GAFApK,EAAMqF,WAAW0E,EAAMC,GAElBC,IAASi2D,GAAsB6M,kBAAoB9iE,IAASi2D,GAAsB8M,iBAAmB/iE,IAASi2D,GAAsB+M,YAAchjE,IAASi2D,GAAsBgN,SAAW,CAE7L,OADAltE,EAAMmtE,YAAcrjE,EACZG,GACJ,KAAKi2D,GAAsB6M,iBACvB/sE,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKS,MAAOT,EAAKQ,KAChDtK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKU,QAC7C,MACJ,KAAK01D,GAAsB8M,gBACvBhtE,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CtK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKS,MAAOT,EAAKU,QAC9C,MACJ,KAAK01D,GAAsB+M,WACvBjtE,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CtK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKS,MAAOT,EAAKQ,KAC9C,MACJ,KAAK41D,GAAsBgN,SACvBltE,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CtK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKU,QAC7C,MACJ,QACI,MAAM,IAAI5J,MAAM,0DAA4DqJ,EAAO,SAE3FjK,EAAM8sE,UAAU9sE,EAAM4sE,YAAa5sE,EAAM6sE,gBAExC,GAAoB,iBAAT5iE,QAAqC,IAATA,EAAsB,CAG9D,GAFAjK,EAAMmtE,YAAcrjE,EAEN,KADdG,GAAc,KAEVjK,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CtK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKS,MAAOT,EAAKQ,UAE7C,GAAc,KAATL,EACNjK,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC/CtK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKU,aAE5C,GAAc,MAATP,EACNjK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC7CtK,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKS,MAAOT,EAAKQ,UAE/C,GAAc,MAATL,EACNjK,EAAM6sE,UAAY,IAAIljE,EAAOG,EAAKO,KAAMP,EAAKQ,KAC7CtK,EAAM4sE,YAAc,IAAIjjE,EAAOG,EAAKO,KAAMP,EAAKU,YAE9C,CACD,IACI4iE,EAAYnjE,GADL9M,KAAKypB,GAAK,KAEjB77B,EAAIoS,KAAKkwE,IAAID,GACbpwE,EAAKgD,EAAMmtE,YAAY9iE,MACnBrK,EAAMmtE,YAAY5iE,MAAQvK,EAAMmtE,YAAY9iE,MAAQ,EACxDpN,EAAK+C,EAAMmtE,YAAY7iE,KACnBtK,EAAMmtE,YAAY3iE,OAASxK,EAAMmtE,YAAY7iE,KAAO,EACxDgjE,EAAS,IAAI3jE,EAAO3M,EAAGC,GAE3BA,EAAMlS,GADNiS,EAAKgD,EAAMmtE,YAAYv5E,OAAS,EAAKuJ,KAAKmqB,IAAI8lD,KAE9CpwE,GAASswE,EAAOtwE,EAChBC,GAASqwE,EAAOrwE,EAChB,IAAIswE,EAAK,IAAI5jE,EAAO3M,EAAGC,GACnBuwE,EAAMxtE,EAAMytE,UAAUF,EAAID,GAE1B34E,EAAIqL,EAAM0tE,YAAYzjE,GACtB0jE,EAAQ3tE,EAAM4tE,UAAU5tE,EAAMytE,UAAU94E,EAAG24E,GAASE,GAClDxtE,EAAM4tE,UAAUJ,EAAKA,GAC3BxtE,EAAM6sE,UAAY7sE,EAAM6tE,UAAUP,EAAQttE,EAAM8tE,SAASN,EAAKG,IAE9D3tE,EAAM4sE,YAAc5sE,EAAM6tE,UAAUP,EAAQttE,EAAM8tE,SAASN,GAAc,EAARG,IAErE3tE,EAAM8sE,UAAU9sE,EAAM6sE,UAAW7sE,EAAM4sE,aAG/C,OAAO5sE,EA8RX,OAzXAd,GAAUytE,EAAwB7sE,GAkGlC6sE,EAAuB1iF,UAAUob,WAAa,SAAU6B,EAAQC,GAC5D7c,KAAKyjF,UAAY7mE,EAAQC,GACzB7c,KAAK0jF,aAAe,IAAIjE,GAAc,GACtCz/E,KAAK0jF,aAAanE,WAAa,EAAG,GAClCv/E,KAAK0jF,aAAa5D,OAAS9/E,KAAKyjF,SAChCzjF,KAAK2jF,eAETjkF,OAAOuC,eAAeogF,EAAuB1iF,UAAW,SAOpDuC,IAAK,WACD,OAAOlC,KAAK4jF,QAEhBxhF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI+V,MAAM,iCAEpB,GAAsB,MAAjBtW,KAAKyjF,SACN,MAAM,IAAIntE,MAAM,8EAEpBtW,KAAK4jF,OAASrjF,EAEdP,KAAK0jF,aAAe1jF,KAAK4jF,OAAOtE,mBAAmBt/E,KAAKyjF,SAAUzjF,KAAKkJ,YACvElJ,KAAKgpD,iBAET3mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeogF,EAAuB1iF,UAAW,uBAKpDuC,IAAK,WACD,OAAOlC,KAAK0jF,cAEhBthF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI+V,MAAM,+CAEpBtW,KAAK4jF,OAAS,KACd5jF,KAAKyjF,SAAW,KAChBzjF,KAAK0jF,aAAenjF,EACpBP,KAAKgpD,iBAET3mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeogF,EAAuB1iF,UAAW,gBAKpDuC,IAAK,WACD,OAAOlC,KAAKyjF,UAEhBrhF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI+V,MAAM,wCAEpB,GAAK/V,EAAMS,OAAS,EAChB,MAAM,IAAIsV,MAAM,6DAEE,MAAjBtW,KAAKyjF,eAA6C,IAAlBzjF,KAAKyjF,SACtCzjF,KAAKyjF,UAAYljF,EAAM,GAAIA,EAAM,KAGjCP,KAAKyjF,SAAS,GAAKljF,EAAM,GACzBP,KAAKyjF,SAAS,GAAKljF,EAAM,IAET,MAAfP,KAAK4jF,aAAyC,IAAhB5jF,KAAK4jF,QAEpC5jF,KAAK0jF,aAAe,IAAIjE,GAAc,GACtCz/E,KAAK0jF,aAAa5D,OAAS9/E,KAAKyjF,SAChCzjF,KAAK0jF,aAAanE,WAAa,EAAG,IAGlCv/E,KAAK0jF,aAAe1jF,KAAK4jF,OAAOtE,mBAAmBt/E,KAAKyjF,SAAUzjF,KAAKkJ,YAE3ElJ,KAAKgpD,iBAET3mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeogF,EAAuB1iF,UAAW,aAKpDuC,IAAK,WACD,OAAOlC,KAAK6iF,aAEhBxgF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeogF,EAAuB1iF,UAAW,UAKpDuC,IAAK,WACD,IAAIe,EAAS0xE,GAAU/xD,KACnBvV,EAAUrN,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAK2rD,sBAAsBt+C,QACrE,GAAe,MAAVA,EAAiB,CAClB,IAAIw2E,EAAYx2E,EAAOkC,MAAM,GACzBu0E,EAAUz2E,EAAOkC,MAAM,GACvBs0E,EAAStjF,QACT0C,GAAmB0xE,GAAU3c,OAE7B8rB,EAAOvjF,QACP0C,GAAmB0xE,GAAUoP,KAGrC,OAAO9gF,GAEXb,IAAK,SAAU7B,GACX,IACIsjF,EACAC,EAFAz2E,EAAUrN,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAK2rD,sBAAsBt+C,QAGtD,MAAVA,GACDw2E,EAAW,IAAIh2D,GAAW,GAC1Bi2D,EAAS,IAAIj2D,GAAW,IACxBxgB,EAAS,IAAIyF,GACNW,IAAIowE,GACXx2E,EAAOoG,IAAIqwE,GACX9jF,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAK2rD,sBAAsBt+C,OAAQA,KAG/Dw2E,EAAYx2E,EAAOkC,MAAM,GACzBu0E,EAAUz2E,EAAOkC,MAAM,KAK/BlN,YAAY,EACZC,cAAc,IAQlB+/E,EAAuB1iF,UAAU4jF,UAAY,SAAUS,EAAQC,GAC3D,IAAIvxE,EAAKsxE,EAAOtxE,EAAIuxE,EAAOvxE,EACvBC,EAAKqxE,EAAOrxE,EAAIsxE,EAAOtxE,EAE3B,OADa,IAAI0M,EAAO3M,EAAGC,IAQ/B0vE,EAAuB1iF,UAAUwjF,UAAY,SAAUa,EAAQC,GAC3D,IAAIvxE,EAAKsxE,EAAOtxE,EAAIuxE,EAAOvxE,EACvBC,EAAKqxE,EAAOrxE,EAAIsxE,EAAOtxE,EAE3B,OADa,IAAI0M,EAAO3M,EAAGC,IAQ/B0vE,EAAuB1iF,UAAU2jF,UAAY,SAAUU,EAAQC,GAE3D,OADeD,EAAOtxE,EAAIuxE,EAAOvxE,EAAMsxE,EAAOrxE,EAAIsxE,EAAOtxE,GAQ7D0vE,EAAuB1iF,UAAU6jF,SAAW,SAAU9lD,EAAOn9B,GAGzD,OAFAm9B,EAAMhrB,EAAKgrB,EAAMhrB,EAAInS,EACrBm9B,EAAM/qB,EAAK+qB,EAAM/qB,EAAIpS,EACdm9B,GAMX2kD,EAAuB1iF,UAAUyjF,YAAc,SAAUrmD,GACrD,IAAIW,EAAQ,IAAIre,EAAO,EAAG,GAE1B,GAAK0d,EAAQ,IAAQA,EAAQ,EACzBW,EAAQ,IAAIre,EAAOrf,KAAK6iF,YAAY5iE,MAAOjgB,KAAK6iF,YAAY3iE,aAE3D,GAAK6c,EAAQ,KAASA,EAAQ,GAC/BW,EAAQ,IAAIre,EAAOrf,KAAK6iF,YAAY9iE,KAAM/f,KAAK6iF,YAAY3iE,aAE1D,GAAK6c,EAAQ,KAASA,EAAQ,IAC/BW,EAAQ,IAAIre,EAAOrf,KAAK6iF,YAAY9iE,KAAM/f,KAAK6iF,YAAY7iE,SAE1D,CAAA,KAAI+c,EAAQ,KAIb,MAAM,IAAIzmB,MAAM,kCAHhBonB,EAAQ,IAAIre,EAAOrf,KAAK6iF,YAAY5iE,MAAOjgB,KAAK6iF,YAAY7iE,KAKhE,OAAO0d,GAOX2kD,EAAuB1iF,UAAU6iF,UAAY,SAAUwB,EAAQC,GAC3D,IAAI1rB,EAAS,IAAIzlD,EACjBylD,EAAO9kD,IAAI,IAAI3B,EAAUkyE,EAAOtxE,IAChC6lD,EAAO9kD,IAAI,IAAI3B,EAAU9R,KAAKw5B,QAAQwqD,EAAOrxE,KAC7C4lD,EAAO9kD,IAAI,IAAI3B,EAAUmyE,EAAOvxE,IAChC6lD,EAAO9kD,IAAI,IAAI3B,EAAU9R,KAAKw5B,QAAQyqD,EAAOtxE,KAC7C3S,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAK2rD,sBAAsBp+C,OAAQgrD,IAMnE8pB,EAAuB1iF,UAAU65B,QAAU,SAAU7mB,GACjD,OAAU,IAANA,GACQA,EAGDA,GAQf0vE,EAAuB1iF,UAAUgkF,YAAc,WAC3C3jF,KAAKkJ,WAAaoT,gBAAckC,IAChCxe,KAAKoN,SAAWpN,KAAK0jF,aAAalD,YAAYxgF,KAAKkJ,YACnDlJ,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAK2rD,sBAAsBr+C,YAAa,IAAIwE,EAAW+jE,GAAiB,SAOxGwM,EAAuB1iF,UAAUkD,MAAQ,WAuBrC,OAtBY7C,KACNmpD,uBAAuB,IAAIv6C,EAAc5O,KAAK8oD,oBADxC9oD,KAENiN,QAAU,IAAI2B,EAFR5O,KAGN2jF,cAHM3jF,KAINwiF,UAJMxiF,KAIUsiF,YAJVtiF,KAI6BuiF,WAC3B,OALFviF,MAAAA,gBAK2BqiF,GACf,MAAfriF,KAAKkN,aAAyC,IAAhBlN,KAAKkN,SANhClN,KAOEkN,OAASlN,KAAKkN,OAAOrK,SAGb,MAAjB7C,KAAKyjF,eAA6C,IAAlBzjF,KAAKyjF,WAV9BzjF,KAWFyjF,SAAYzjF,KAAa,UAEhB,MAAdA,KAAKkkF,YAAuC,IAAflkF,KAAKkkF,MAb3BlkF,KAcFkkF,MAAQlkF,KAAKkkF,MAAMnE,gBAES,MAA5B//E,KAAKmkF,0BAAmE,IAA7BnkF,KAAKmkF,sBAhB9CnkF,KAiBFmkF,oBAAsBnkF,KAAKmkF,oBAAoB9C,mBAjB7CrhF,KAmBNqN,OAASrN,KAAKqN,OACpBrN,KAAKqpD,qBApBOrpD,MAqBZA,KAAKopD,uBArBOppD,MAAAA,MA4BhBqiF,EAAuB1iF,UAAUqpD,cAAgB,WAC7ChpD,KAAKoN,SAAWpN,KAAK0jF,aAAalD,YAAYxgF,KAAKkJ,aAEhDm5E,GACTl6B,IC1ZEvzC,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GA6BxCgvE,GAAwC,SAAU5uE,GAQlD,SAAS4uE,EAAuBC,EAAaC,EAAaC,EAAWC,EAAWC,EAAYC,GACxF,IAAIhvE,EAAQF,EAAO3V,KAAKG,KAAM,IAAI4O,IAAoB5O,KAMtD,GAFA0V,EAAMi2C,sBAAwB,IAAI3jD,EAClC0N,EAAMqF,WAAW0pE,EAAYC,GACzBJ,EAAc,EACd,MAAM,IAAIhuE,MAAM,oFAEpB,GAAIkuE,EAAY,EACZ,MAAM,IAAIluE,MAAM,kFAOpB,OALAZ,EAAM6sE,UAAYgC,EAClB7uE,EAAM4sE,YAAc+B,EACpB3uE,EAAMivE,aAAeL,EACrB5uE,EAAMkvE,WAAaJ,EACnB9uE,EAAM8sE,UAAU9sE,EAAM4sE,YAAa5sE,EAAM6sE,UAAW7sE,EAAMivE,aAAcjvE,EAAMkvE,YACvElvE,EAsOX,OA/PAd,GAAUwvE,EAAwB5uE,GAgClC4uE,EAAuBzkF,UAAUob,WAAa,SAAU6B,EAAQC,GAC5D7c,KAAK6kF,SAAWjoE,EAAQC,GACxB7c,KAAK8kF,cAAgB,IAAIrF,GAAc,GACvCz/E,KAAK8kF,cAAcvF,WAAa,EAAG,GACnCv/E,KAAK8kF,cAAchF,OAAS9/E,KAAK6kF,QACjC7kF,KAAK2jF,eAETjkF,OAAOuC,eAAemiF,EAAuBzkF,UAAW,SAMpDuC,IAAK,WACD,OAAOlC,KAAK4jF,QAEhBxhF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI+V,MAAM,iCAEpB,GAAqB,MAAhBtW,KAAK6kF,cAA2C,IAAjB7kF,KAAK6kF,QACrC,MAAM,IAAIvuE,MAAM,8EAEpBtW,KAAK4jF,OAASrjF,EACdP,KAAK8kF,cAAgB9kF,KAAK4jF,OAAOtE,mBAAmBt/E,KAAK6kF,QAAS7kF,KAAKkJ,YACvElJ,KAAKgpD,iBAET3mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemiF,EAAuBzkF,UAAW,uBAKpDuC,IAAK,WACD,OAAOlC,KAAK8kF,eAEhB1iF,IAAK,SAAU7B,GACX,GAAa,MAATA,EACA,MAAM,IAAI+V,MAAM,+CAEpBtW,KAAK4jF,OAAS,KACd5jF,KAAK6kF,QAAU,KACf7kF,KAAK8kF,cAAgBvkF,EACrBP,KAAKgpD,iBAET3mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemiF,EAAuBzkF,UAAW,gBAKpDuC,IAAK,WACD,OAAOlC,KAAK6kF,SAEhBziF,IAAK,SAAU7B,GACX,GAAc,MAATA,EACD,MAAM,IAAI+V,MAAM,+CAEpB,GAAK/V,EAAMS,OAAS,EAChB,MAAM,IAAIsV,MAAM,2DAEC,MAAhBtW,KAAK6kF,cAA2C,IAAjB7kF,KAAK6kF,QACrC7kF,KAAK6kF,SAAWtkF,EAAM,GAAIA,EAAM,KAGhCP,KAAK6kF,QAAQ,GAAKtkF,EAAM,GACxBP,KAAK6kF,QAAQ,GAAKtkF,EAAM,IAER,MAAfP,KAAK4jF,aAAyC,IAAhB5jF,KAAK4jF,QAEpC5jF,KAAK8kF,cAAgB,IAAIrF,GAAc,GACvCz/E,KAAK8kF,cAAchF,OAAS9/E,KAAK6kF,QACjC7kF,KAAK8kF,cAAcvF,WAAa,EAAG,IAGnCv/E,KAAK8kF,cAAgB9kF,KAAK4jF,OAAOtE,mBAAmBt/E,KAAK6kF,QAAS7kF,KAAKkJ,YAE3ElJ,KAAKgpD,iBAET3mD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemiF,EAAuBzkF,UAAW,aAKpDuC,IAAK,WACD,OAAOlC,KAAK6iF,aAEhBzgF,IAAK,SAAU7B,GACXP,KAAK6iF,YAActiF,EACnBP,KAAKiL,KAAO6H,EAASwB,cAAc/T,IAEvC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemiF,EAAuBzkF,UAAW,UAMpDuC,IAAK,WACD,IAAI43C,EAAU66B,GAAU/xD,KACpBmiE,EAAW/kF,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAK2rD,sBAAsBt+C,QACtE,GAAgB,OAAZ03E,QAAuC,IAAZA,EAAyB,CACpD,IAAIlB,EAAYkB,EAAQx1E,MAAM,GAC1Bu0E,EAAUiB,EAAQx1E,MAAM,GACxBs0E,EAAStjF,QACTu5C,GAAqB66B,GAAU3c,OAE/B8rB,EAAOvjF,QACPu5C,GAAqB66B,GAAUoP,KAGvC,OAAOjqC,GAEX13C,IAAK,SAAU7B,GACX,IACIsjF,EACAmB,EAFA33E,EAAUrN,KAAKiN,QAAQsC,MAAMnP,SAASJ,KAAK2rD,sBAAsBt+C,QAGvD,MAAVA,QAAoC,IAAXA,GACzBw2E,EAAW,IAAIh2D,GAAW,GAC1Bm3D,EAAU,IAAIn3D,GAAW,IACzBxgB,EAAS,IAAIyF,GACNW,IAAIowE,GACXx2E,EAAOoG,IAAIuxE,GACXhlF,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAK2rD,sBAAsBt+C,OAAQA,KAG/Dw2E,EAAYx2E,EAAOkC,MAAM,GACzBy1E,EAAW33E,EAAOkC,MAAM,KAGhClN,YAAY,EACZC,cAAc,IAUlB8hF,EAAuBzkF,UAAU6iF,UAAY,SAAUyC,EAAYC,EAAUZ,EAAaE,GACtF,IAAIjsB,EAAS,IAAIzlD,EACjBylD,EAAO9kD,IAAI,IAAI3B,EAAUmzE,EAAWvyE,IACpC6lD,EAAO9kD,IAAI,IAAI3B,EAAU9R,KAAKw5B,QAAQyrD,EAAWtyE,KACjD4lD,EAAO9kD,IAAI,IAAI3B,EAAUwyE,IACzB/rB,EAAO9kD,IAAI,IAAI3B,EAAUozE,EAASxyE,IAClC6lD,EAAO9kD,IAAI,IAAI3B,EAAU9R,KAAKw5B,QAAQ0rD,EAASvyE,KAC1C2xE,IAAgBE,EACjBjsB,EAAO9kD,IAAI,IAAI3B,EAAU0yE,IAGzBjsB,EAAO9kD,IAAI,IAAI3B,EAAU,IAE7B9R,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAK2rD,sBAAsBp+C,OAAQgrD,IAMnE6rB,EAAuBzkF,UAAU65B,QAAU,SAAU7mB,GACjD,OAAU,IAANA,GACQA,EAGDA,GAOfyxE,EAAuBzkF,UAAUgkF,YAAc,WAC3C3jF,KAAKkJ,WAAaoT,gBAAckC,IAChCxe,KAAKoN,SAAWpN,KAAK8kF,cAActE,YAAYxgF,KAAKkJ,YACpDlJ,KAAKiN,QAAQsC,MAAM/O,SAASR,KAAK2rD,sBAAsBr+C,YAAa,IAAIwE,EAAW+jE,GAAkB,UAOzGuO,EAAuBzkF,UAAUkD,MAAQ,WAuBrC,OAtBa7C,KACNmpD,uBAAuB,IAAIv6C,EAAc5O,KAAK8oD,oBADxC9oD,KAENiN,QAAU,IAAI2B,EAFR5O,KAGN2jF,cAHM3jF,KAINwiF,UAAUxiF,KAAKsiF,YAAatiF,KAAKuiF,UAAWviF,KAAK2kF,aAAc3kF,KAAK4kF,YAJ9D5kF,gBAKSokF,GACG,OAAhBpkF,KAAKkN,aAA0C,IAAhBlN,KAAKkN,SANhClN,KAOEkN,OAASlN,KAAKkN,OAAOrK,SAGd,OAAjB7C,KAAK6kF,cAA4C,IAAjB7kF,KAAK6kF,UAV7B7kF,KAWF6kF,QAAW7kF,KAAY,SAEd,OAAfA,KAAKkkF,YAAwC,IAAflkF,KAAKkkF,MAb3BlkF,KAcFkkF,MAAQlkF,KAAKkkF,MAAMnE,gBAES,OAA7B//E,KAAKmkF,0BAAoE,IAA7BnkF,KAAKmkF,sBAhB9CnkF,KAiBFmkF,oBAAsBnkF,KAAKmkF,oBAAoB9C,mBAjB7CrhF,KAmBNqN,OAASrN,KAAKqN,OACrBrN,KAAKqpD,qBApBQrpD,MAqBbA,KAAKopD,uBArBQppD,MAAAA,MA4BjBokF,EAAuBzkF,UAAUqpD,cAAgB,WAC7ChpD,KAAKoN,SAAWpN,KAAK8kF,cAActE,YAAYxgF,KAAKkJ,aAEjDk7E,GACTj8B,KCzRF,SAAWg9B,GAKPA,EAAsBA,EAA+B,QAAI,GAAK,UAK9DA,EAAsBA,EAA8B,OAAI,GAAK,SAVjE,CAWGA,0BAA0BA,6BChB7B,IAAIvwE,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAkBxCgwE,GAAkC,WAClC,SAASA,KAyET,OAvEA1lF,OAAOuC,eAAemjF,EAAiBzlF,UAAW,mBAM9CuC,IAAK,WACD,OAAOlC,KAAKqlF,qBAEhBjjF,IAAK,SAAU7B,GACXP,KAAKqlF,oBAAsB9kF,GAE/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemjF,EAAiBzlF,UAAW,aAK9CuC,IAAK,WACD,OAAOlC,KAAKslF,eAEhBljF,IAAK,SAAU7B,GACXP,KAAKslF,cAAgB/kF,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemjF,EAAiBzlF,UAAW,WAK9CuC,IAAK,WACD,OAAOlC,KAAKulF,aAEhBnjF,IAAK,SAAU7B,GACXP,KAAKulF,YAAchlF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemjF,EAAiBzlF,UAAW,QAK9CuC,IAAK,WACD,OAAOlC,KAAKwlF,UAEhBpjF,IAAK,SAAU7B,GACXP,KAAKwlF,SAAWjlF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAemjF,EAAiBzlF,UAAW,mBAK9CuC,IAAK,WACD,OAAOlC,KAAKylF,qBAEhBrjF,IAAK,SAAU7B,GACXP,KAAKylF,oBAAsBllF,GAE/B8B,YAAY,EACZC,cAAc,IAEX8iF,KAMPM,GAA8B,SAAUlwE,GAOxC,SAASkwE,IACL,IAAIhwE,EAAQF,EAAO3V,KAAKG,OAASA,KAIjC,OAHA0V,EAAMiwE,uBAAyBR,wBAAsBS,QACrDlwE,EAAMmwE,0BAA2B,EACjCnwE,EAAMowE,2BAA6BC,4BAA0BC,SACtDtwE,EAqFX,OAhGAd,GAAU8wE,EAAclwE,GAaxB9V,OAAOuC,eAAeyjF,EAAa/lF,UAAW,eAM1CuC,IAAK,WAID,YAHoC,IAAzBlC,KAAKimF,kBACZjmF,KAAKimF,gBAAkB,GAEpBjmF,KAAKimF,iBAEhB7jF,IAAK,SAAU7B,GACXP,KAAKimF,gBAAkB1lF,GAE3B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeyjF,EAAa/lF,UAAW,0BAK1CuC,IAAK,WACD,OAAOlC,KAAK8lF,4BAEhB1jF,IAAK,SAAU7B,GACXP,KAAK8lF,2BAA6BvlF,GAEtC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeyjF,EAAa/lF,UAAW,2BAK1CuC,IAAK,WACD,OAAOlC,KAAK6lF,0BAEhBzjF,IAAK,SAAU7B,GACXP,KAAK6lF,yBAA2BtlF,GAEpC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeyjF,EAAa/lF,UAAW,eAK1CuC,IAAK,WAID,YAHoC,IAAzBlC,KAAKkmF,kBACZlmF,KAAKkmF,gBAAkB,IAAIlY,IAExBhuE,KAAKkmF,iBAEhB9jF,IAAK,SAAU7B,QACyB,IAAzBP,KAAKkmF,iBACZlmF,KAAKkmF,gBAAkB,IAAIlY,GAC3BhuE,KAAKkmF,gBAAkB3lF,GAGvBP,KAAKkmF,gBAAkB3lF,GAG/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeyjF,EAAa/lF,UAAW,sBAK1CuC,IAAK,WACD,OAAOlC,KAAK2lF,wBAEhBvjF,IAAK,SAAU7B,GACXP,KAAK2lF,uBAAyBplF,GAElC8B,YAAY,EACZC,cAAc,IAEXojF,GACTN,IAKEe,GAAkC,SAAU3wE,GAM5C,SAAS2wE,IACL,IAAIzwE,EAAQF,EAAO3V,KAAKG,OAASA,KAMjC,OADA0V,EAAM0wE,gBAAkB9Y,GAAWyB,QAC5Br5D,EAgDX,OA5DAd,GAAUuxE,EAAkB3wE,GAc5B9V,OAAOuC,eAAekkF,EAAiBxmF,UAAW,gBAM9CuC,IAAK,WACD,OAAOlC,KAAKolB,QAEhBhjB,IAAK,SAAU7B,GACXP,KAAKolB,OAAS7kB,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekkF,EAAiBxmF,UAAW,WAK9CuC,IAAK,WACD,OAAOlC,KAAKomF,iBAEhBhkF,IAAK,SAAU7B,GACXP,KAAKomF,gBAAkB7lF,GAE3B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAekkF,EAAiBxmF,UAAW,eAK9CuC,IAAK,WACD,OAAOlC,KAAKkmF,iBAEhB9jF,IAAK,SAAU7B,GACiB,MAAxBP,KAAKkmF,sBAA2D,IAAzBlmF,KAAKkmF,kBAC5ClmF,KAAKkmF,gBAAkB,IAAIlY,IAE/BhuE,KAAKkmF,gBAAkB3lF,GAE3B8B,YAAY,EACZC,cAAc,IAEX6jF,GACTf,IAKEiB,GAAiC,WAMjC,SAASA,KA+HT,OA5HA3mF,OAAOuC,eAAeokF,EAAgB1mF,UAAW,mBAM7CuC,IAAK,WACD,OAAOlC,KAAKsmF,wBAEhBjkF,YAAY,EACZC,cAAc,IAElB+jF,EAAgB1mF,UAAU4mF,mBAAqB,SAAUhmF,GAErD,GADAP,KAAKsmF,uBAAyB/lF,OACH,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOi+E,MAAMr+E,MAAOjF,IACzClD,KAAKuI,OAAOi+E,MAAMC,QAAQvjF,GAAG8lB,MAAM09D,gBAAkBnmF,GAIjEb,OAAOuC,eAAeokF,EAAgB1mF,UAAW,aAK7CuC,IAAK,WACD,OAAOlC,KAAK2mF,kBAEhBtkF,YAAY,EACZC,cAAc,IAElB+jF,EAAgB1mF,UAAUinF,aAAe,SAAUrmF,GAE/C,GADAP,KAAK2mF,iBAAmBpmF,OACG,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOi+E,MAAMr+E,MAAOjF,IACzClD,KAAKuI,OAAOi+E,MAAMC,QAAQvjF,GAAG8lB,MAAMuiD,UAAYhrE,GAI3Db,OAAOuC,eAAeokF,EAAgB1mF,UAAW,WAK7CuC,IAAK,WACD,OAAOlC,KAAK6mF,gBAEhBxkF,YAAY,EACZC,cAAc,IAElB+jF,EAAgB1mF,UAAUmnF,WAAa,SAAUvmF,GAE7C,GADAP,KAAK6mF,eAAiBtmF,OACK,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOi+E,MAAMr+E,MAAOjF,IACzClD,KAAKuI,OAAOi+E,MAAMC,QAAQvjF,GAAG8lB,MAAM+9D,QAAUxmF,GAIzDb,OAAOuC,eAAeokF,EAAgB1mF,UAAW,QAK7CuC,IAAK,WACD,OAAOlC,KAAKgnF,aAEhB3kF,YAAY,EACZC,cAAc,IAElB+jF,EAAgB1mF,UAAU2G,QAAU,SAAU/F,GAE1C,GADAP,KAAKgnF,YAAczmF,OACQ,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOi+E,MAAMr+E,MAAOjF,IACzClD,KAAKuI,OAAOi+E,MAAMC,QAAQvjF,GAAG8lB,MAAMrgB,KAAOpI,GAItDb,OAAOuC,eAAeokF,EAAgB1mF,UAAW,UAK7CuC,IAAK,WAID,YAHkC,IAAvBlC,KAAKinF,eACZjnF,KAAKknF,UAAU,IAAI5Z,IAEhBttE,KAAKinF,eAEhB5kF,YAAY,EACZC,cAAc,IAElB+jF,EAAgB1mF,UAAUunF,UAAY,SAAU3mF,GAE5C,GADAP,KAAKinF,cAAgB1mF,OACM,IAAhBP,KAAKuI,OACZ,IAAK,IAAIrF,EAAI,EAAGA,EAAIlD,KAAKuI,OAAOi+E,MAAMr+E,MAAOjF,IACzClD,KAAKuI,OAAOi+E,MAAMC,QAAQvjF,GAAG8lB,MAAMm+D,QAAU5mF,GAQzD8lF,EAAgB1mF,UAAUynF,UAAY,SAAU7+E,GAC5CvI,KAAKuI,OAASA,GAElB7I,OAAOuC,eAAeokF,EAAgB1mF,UAAW,mBAK7CuC,IAAK,WACD,OAAOlC,KAAKqnF,wBAEhBhlF,YAAY,EACZC,cAAc,IAMlB+jF,EAAgB1mF,UAAU2nF,mBAAqB,SAAU/mF,GACrDP,KAAKqnF,uBAAyB9mF,GAE3B8lF,MAQX,SAAWN,GAKPA,EAA0BA,EAAoC,SAAI,GAAK,WAKvEA,EAA0BA,EAAoC,SAAI,GAAK,WAV3E,CAWGA,8BAA8BA,iCCjZjC,IAAIwB,GAA6B,WAC7B,SAASA,EAAYC,GAMjBxnF,KAAKynF,UAAY,EAMjBznF,KAAK0nF,WAAa,EAMlB1nF,KAAK2nF,QAAU,EACf3nF,KAAK4nF,WAAY,EAMjB5nF,KAAK6nF,OAAQ,EAMb7nF,KAAK8nF,uBAAyB,EAC9B9nF,KAAK+nF,YAAa,EAClB/nF,KAAKgoF,YAAa,EAIlBhoF,KAAKioF,UAAW,EAMhBjoF,KAAKmhD,SAAU,EACfnhD,KAAKkoF,YAAc,EACnBloF,KAAKmoF,QAAU,OACI,IAARX,IACPxnF,KAAKooF,QAAUZ,GAmiCvB,OAhiCA9nF,OAAOuC,eAAeslF,EAAY5nF,UAAW,uBAEzCuC,IAAK,WACD,OAAOlC,KAAKqoF,6BAEhBjmF,IAAK,SAAU7B,GACXP,KAAKqoF,4BAA8B9nF,GAEvC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,sBACzCuC,IAAK,WACD,OAAOlC,KAAKsoF,4BAEhBlmF,IAAK,SAAU7B,GACXP,KAAKsoF,2BAA6B/nF,GAEtC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,oBACzCuC,IAAK,WACD,OAAOlC,KAAKuoF,0BAEhBnmF,IAAK,SAAU7B,GACXP,KAAKuoF,yBAA2BhoF,GAEpC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,mBACzCuC,IAAK,WACD,OAAOlC,KAAKwoF,yBAEhBpmF,IAAK,SAAU7B,GACXP,KAAKwoF,wBAA0BjoF,GAEnC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,mBAKzCuC,IAAK,WACD,OAAOlC,KAAKyoF,WAEhBrmF,IAAK,SAAU7B,GACXP,KAAKyoF,UAAYloF,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,uBAKzCuC,IAAK,WACD,OAAOlC,KAAKioF,UAEhB7lF,IAAK,SAAU7B,GACXP,KAAKioF,SAAW1nF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,gBAKzCuC,IAAK,WAID,OAHmB,MAAflC,KAAKolB,SACLplB,KAAKolB,OAAS,IAAItD,GAEf9hB,KAAKolB,QAEhBhjB,IAAK,SAAU7B,GACXP,KAAKolB,OAAS7kB,GAElB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,OAKzCuC,IAAK,WACD,OAAOlC,KAAKooF,SAEhBhmF,IAAK,SAAU7B,GACXP,KAAKooF,QAAU7nF,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,SAKzCuC,IAAK,WACD,OAAOlC,KAAK0oF,aAEhBtmF,IAAK,SAAU7B,GAEX,GADAP,KAAK0oF,YAAcnoF,EACfP,KAAK0oF,uBAAuBC,GAAS,CACrC3oF,KAAKwnF,IAAIoB,KAAKC,cAAe,EAClB7oF,KAAK0oF,YACXI,WAAa9oF,KAClBA,KAAK0oF,YAAYK,aAAc,EAE/B,IAAK,IADDC,EAAWhpF,KAAKwnF,IAAIoB,KAAKK,KAAK9gF,MACzBjF,EAAI,EAAGA,EAAI8lF,EAAU9lF,IAG1B,IAAK,IAFDskF,EAAMxnF,KAAKwnF,IAAIoB,KAAKK,KAAKC,OAAOhmF,GAChCimF,EAAW3B,EAAIhB,MAAMr+E,MAChB0rC,EAAI,EAAGA,EAAIs1C,EAAUt1C,IAAK,CACpB2zC,EAAIhB,MAAMC,QAAQ5yC,GACxBtrC,OAASvI,QAK9BqC,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,WAKzCuC,IAAK,WACD,OAAOlC,KAAKkoF,aAEhB9lF,IAAK,SAAU7B,GACX,GAAIA,EAAQ,EACR,MAAM,IAAI+V,MAAM,kFAGhBtW,KAAKkoF,YAAc3nF,EACnBP,KAAKwnF,IAAI4B,eAAgB,EACzBppF,KAAKwnF,IAAIoB,KAAKS,gBAAiB,GAGvChnF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,SAKzCuC,IAAK,WAID,OAHsB,MAAlBlC,KAAKspF,YACLtpF,KAAKspF,UAAY,IAAInD,IAElBnmF,KAAKspF,WAEhBlnF,IAAK,SAAU7B,GACXP,KAAKspF,UAAY/oF,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,UAKzCuC,IAAK,WAID,OAHwB,IAApBlC,KAAK0nF,aACL1nF,KAAK0nF,WAAa1nF,KAAKupF,iBAEpBvpF,KAAK0nF,YAEhBtlF,IAAK,SAAU7B,GACXP,KAAK0nF,WAAannF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,cAKzCuC,IAAK,WACD,OAAOlC,KAAKmoF,SAEhB/lF,IAAK,SAAU7B,GACX,GAAIA,EAAQ,EACR,MAAM+V,MAAM,8DAGZtW,KAAKmoF,QAAU5nF,EACfP,KAAKwnF,IAAIgC,kBAAmB,GAGpCnnF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeslF,EAAY5nF,UAAW,SAKzCuC,IAAK,WAID,OAHuB,IAAnBlC,KAAKynF,WAAmBznF,KAAKwnF,IAAIoB,KAAKa,cACtCzpF,KAAKynF,UAAYznF,KAAK0pF,gBAEnB72E,KAAKkU,MAAM/mB,KAAKynF,YAE3BrlF,IAAK,SAAU7B,GACXP,KAAKynF,UAAYlnF,GAErB8B,YAAY,EACZC,cAAc,IAOlBilF,EAAY5nF,UAAU+pF,aAAe,WAGjC,IAAIpgF,EAAQ,EACRqgF,EAAW,IAAI/kE,EACnB,GAAgC,iBAArB5kB,KAAK0oF,YAA0B,CAGtCp/E,GADUqgF,EAAS7kE,OAAO9kB,KAAK0oF,YAAa1oF,KAAK4pF,cAAe5pF,KAAKmgC,aAAc,IAAI7gB,EAAM/E,OAAOmxB,UAAWnxB,OAAOmxB,YAAY,EAAO,IAAIpsB,EAAM,EAAG,IACzI4I,WAAW5e,MACxBA,GAA4E,GAAlEtJ,KAAKgpB,MAAMm+D,QAAQpnE,KAAKzW,MAAQtJ,KAAKgpB,MAAMm+D,QAAQlnE,MAAM3W,YAElE,GAAItJ,KAAK0oF,uBAAuBC,GACjCr/E,EAAQtJ,KAAK0oF,YAAYhnF,KAAK4H,WAG7B,GAAItJ,KAAK0oF,uBAAuBniD,IAAYvmC,KAAK0oF,uBAAuBthD,GACzE99B,GAAStJ,KAAK0oF,YAAYp/E,WAEzB,GAAItJ,KAAK0oF,uBAAuB5Y,GAAgB,CACjD,IAAI+Z,EAAU7pF,KAAK0oF,YAGnBp/E,GAFaqgF,EAAS7kE,OAAO+kE,EAAQxzE,KAAMwzE,EAAQlhF,KAAMkhF,EAAQ1pD,aAAc,IAAI7gB,EAAM,EAAG,IAAI,EAAO,IAAIA,EAAM,EAAG,IAEpG4I,WAAW5e,MAC3BA,GAA4E,GAAlEtJ,KAAKgpB,MAAMm+D,QAAQpnE,KAAKzW,MAAQtJ,KAAKgpB,MAAMm+D,QAAQlnE,MAAM3W,OA6BvE,OA3BMtJ,KAAK0oF,uBAAuBC,GASA,MAA1B3oF,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,kBACT,IAAhC9pF,KAAKgpB,MAAM8gE,YAAY/pE,MAAwB/f,KAAKgpB,MAAM8gE,YAAY7b,aAC7E3kE,GAAStJ,KAAKgpB,MAAM8gE,YAAY/pE,WAEQ,IAAjC/f,KAAKgpB,MAAM8gE,YAAY7pE,OAAyBjgB,KAAKgpB,MAAM8gE,YAAY5b,cAC9E5kE,GAAStJ,KAAKgpB,MAAM8gE,YAAY7pE,cAIgB,IAAzCjgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY/pE,MAAwB/f,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY7b,aAC/F3kE,GAAStJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY/pE,WAEQ,IAA1C/f,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY7pE,OAAyBjgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5b,cAChG5kE,GAAStJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY7pE,QArBnB,MAA1BjgB,KAAKgpB,MAAM8gE,YACXxgF,GAAUtJ,KAAKgpB,MAAM8gE,YAAY/pE,KAAO/f,KAAKgpB,MAAM8gE,YAAY7pE,MAG/D3W,GAAUtJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY/pE,KAAO/f,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY7pE,MAqBzF3W,GAAStJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM+gE,aAOjCxC,EAAY5nF,UAAUqqF,mBAAqB,SAAU/qD,EAAU1qB,GAC3D,IAAImyE,EAAkB1mF,KAAKiqF,qBAO3B,GALuB,MAAnBvD,IACAznD,EAASx8B,OACTw8B,EAAS4wB,cAAc62B,EAAiBnyE,EAAO7B,EAAG6B,EAAO5B,EAAG4B,EAAOjL,MAAOiL,EAAOhL,QACjF01B,EAASK,WAEqB,MAA9Bt/B,KAAKgpB,MAAMkhE,gBAAyB,CACxBlqF,KAAKmqF,qBACjBlrD,EAASsxB,UAAUvwD,KAAKgpB,MAAMkhE,gBAAiB31E,EAAO7B,EAAG6B,EAAO5B,EAAG4B,EAAOjL,MAAOiL,EAAOhL,UAQhGg+E,EAAY5nF,UAAUyqF,wBAA0B,SAAU71E,GAEtD,IAAI81E,EAAe,IAAI9qE,EAAWhL,EAAO7B,EAAG6B,EAAO5B,EAAG4B,EAAOjL,MAAOiL,EAAOhL,QAyD3E,OAxDMvJ,KAAK0oF,uBAAuBC,IAqBA,MAA1B3oF,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,kBACI,IAA7C9pF,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,MAAwB/f,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY7b,aACvGoc,EAAa33E,GAAK1S,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,KAAO/f,KAAKspF,UAAUnC,QAAQpnE,KAAKzW,MACzF+gF,EAAa/gF,OAAStJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,WAEP,IAA5C/f,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY9pE,KAAuBhgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY3b,YACtGkc,EAAa13E,GAAK3S,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY9pE,IAAMhgB,KAAKspF,UAAUnC,QAAQnnE,IAAI1W,MACvF+gF,EAAa9gF,QAAUvJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY9pE,UAEN,IAA9ChgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY7pE,OAAyBjgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY5b,cACxGmc,EAAa/gF,OAAStJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY7pE,YAEJ,IAA/CjgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY5pE,QAA0BlgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY1b,eACzGic,EAAa9gF,QAAUvJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY5pE,eAIpB,IAAhClgB,KAAKgpB,MAAM8gE,YAAY/pE,MAAwB/f,KAAKgpB,MAAM8gE,YAAY7b,aAC7Eoc,EAAa33E,GAAK1S,KAAKgpB,MAAM8gE,YAAY/pE,KAAO/f,KAAKspF,UAAUnC,QAAQpnE,KAAKzW,MAC5E+gF,EAAa/gF,OAAStJ,KAAKgpB,MAAM8gE,YAAY/pE,WAEP,IAA/B/f,KAAKgpB,MAAM8gE,YAAY9pE,KAAuBhgB,KAAKgpB,MAAM8gE,YAAY3b,YAC5Ekc,EAAa13E,GAAK3S,KAAKgpB,MAAM8gE,YAAY9pE,IAAMhgB,KAAKspF,UAAUnC,QAAQnnE,IAAI1W,MAC1E+gF,EAAa9gF,QAAUvJ,KAAKgpB,MAAM8gE,YAAY9pE,UAEN,IAAjChgB,KAAKgpB,MAAM8gE,YAAY7pE,OAAyBjgB,KAAKgpB,MAAM8gE,YAAY5b,cAC9Emc,EAAa/gF,OAAStJ,KAAKgpB,MAAM8gE,YAAY7pE,YAEJ,IAAlCjgB,KAAKgpB,MAAM8gE,YAAY5pE,QAA0BlgB,KAAKgpB,MAAM8gE,YAAY1b,eAC/Eic,EAAa9gF,QAAUvJ,KAAKgpB,MAAM8gE,YAAY5pE,SAGtDmqE,EAAa/gF,OAAUtJ,KAAKspF,UAAUnC,QAAQpnE,KAAKzW,MAAQtJ,KAAKspF,UAAUnC,QAAQlnE,MAAM3W,MACxF+gF,EAAa9gF,QAAWvJ,KAAKspF,UAAUnC,QAAQnnE,IAAI1W,MAAQtJ,KAAKspF,UAAUnC,QAAQjnE,OAAO5W,YArDnD,IAA3BtJ,KAAKgpB,MAAM8gE,aAAyD,MAA1B9pF,KAAKgpB,MAAM8gE,aAC5DO,EAAa33E,GAAK1S,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,KAAO/f,KAAKspF,UAAUnC,QAAQpnE,KAAKzW,MACzF+gF,EAAa13E,GAAK3S,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY9pE,IAAMhgB,KAAKspF,UAAUnC,QAAQnnE,IAAI1W,MACvF+gF,EAAa/gF,OAAUtJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY7pE,MAAQjgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,KACvGsqE,EAAa9gF,QAAWvJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY5pE,OAASlgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY9pE,IACzGqqE,EAAa9gF,QAAWvJ,KAAKspF,UAAUnC,QAAQnnE,IAAI1W,MAAQtJ,KAAKspF,UAAUnC,QAAQjnE,OAAO5W,QAGzF+gF,EAAa33E,GAAK1S,KAAKgpB,MAAM8gE,YAAY/pE,KAAO/f,KAAKspF,UAAUnC,QAAQpnE,KAAKzW,MAC5E+gF,EAAa13E,GAAK3S,KAAKgpB,MAAM8gE,YAAY9pE,IAAMhgB,KAAKspF,UAAUnC,QAAQnnE,IAAI1W,MAC1E+gF,EAAa/gF,OAAUtJ,KAAKgpB,MAAM8gE,YAAY7pE,MAAQjgB,KAAKgpB,MAAM8gE,YAAY/pE,KAC7EsqE,EAAa/gF,OAAUtJ,KAAKspF,UAAUnC,QAAQpnE,KAAKzW,MAAQtJ,KAAKspF,UAAUnC,QAAQlnE,MAAM3W,MACxF+gF,EAAa9gF,QAAWvJ,KAAKgpB,MAAM8gE,YAAY5pE,OAASlgB,KAAKgpB,MAAM8gE,YAAY9pE,IAC/EqqE,EAAa9gF,QAAWvJ,KAAKspF,UAAUnC,QAAQnnE,IAAI1W,MAAQtJ,KAAKspF,UAAUnC,QAAQjnE,OAAO5W,MACpE,IAAjBtJ,KAAKsqF,UACLD,EAAa/gF,OAAUtJ,KAAKgpB,MAAMm+D,QAAQpnE,KAAU,QAwCzDsqE,GAMX9C,EAAY5nF,UAAUygC,KAAO,SAAUnB,EAAU1qB,EAAQg2E,GACrD,IAsBItnF,EAAS,KAab,GAAIjD,KAAKqoF,6BAA+BroF,KAAKsoF,2BAA4B,CACrE,IAAItoF,KAAKqoF,8BAA+BroF,KAAKwnF,IAAIoB,KAAK5/D,MAAMwhE,wBAMxD,OAAOvnF,EALP,GAAKjD,KAAKwnF,IAAIiD,iBAAmB,GAAMzqF,KAAKwnF,IAAIhB,MAAMljF,QAAQtD,OAASA,KAAKwnF,IAAIiD,iBAAmB,GAAqC,GAA7BzqF,KAAKwnF,IAAIiD,kBAAyBzqF,KAAKqoF,4BAC9I,OAAOplF,EAQnBsR,EAASvU,KAAK0qF,sBAAsBn2E,EAAQ0qB,GAC5Cj/B,KAAKgqF,mBAAmB/qD,EAAU1qB,GAClC,IAAIwyE,EAAU/mF,KAAK2qF,aACfpf,EAAYvrE,KAAK4qF,oBACE,IAAZ7D,QAAgD,IAAdxb,IACzCA,EAAY,IAAIlrD,EAAc,IAAI1D,EAAS,EAAG,EAAG,KAErD,IAAIhU,EAAO3I,KAAK4pF,cACZiB,EAAY7qF,KAAK8qF,kBACjBC,EAAkBx2E,EAsBtB,GArBIw2E,EAAgBxhF,QAAU01B,EAAS/Z,WAAW3b,QAE1CvJ,KAAKwnF,IAAIoB,KAAKoC,2BACdD,EAAgBxhF,QAAUwhF,EAAgBp4E,OACX,IAApB3S,KAAKirF,YAAkD,OAApBjrF,KAAKirF,YAAuBF,EAAgBxhF,OAASvJ,KAAKirF,aACpGF,EAAgBxhF,OAASvJ,KAAKirF,aAe1CF,EAAkB/qF,KAAKoqF,wBAAwBW,GACf,iBAArB/qF,KAAK0oF,aAAsD,iBAAnB1oF,KAAKyoF,UAAwB,CAC5E,IAAIpjD,OAAO,EACPyrB,OAAkB,EAKtB,GAHIA,EADAi6B,EAAgBxhF,OAASZ,EAAKY,OACZ,IAAIgW,EAAWwrE,EAAgBr4E,EAAGq4E,EAAgBp4E,EAAGo4E,EAAgBzhF,MAAOX,EAAKY,QAEjFwhF,EAClBA,EAAgBxhF,OAASZ,EAAKY,QAAUvJ,KAAKwnF,IAAIoB,KAAKG,aAA2C,MAA5B/oF,KAAKwnF,IAAIoB,KAAKE,WAAoB,CACvG,IAAIv/E,EAASunD,EAAgBvnD,OAASvJ,KAAKwnF,IAAIoB,KAAKE,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,OAASlgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,QAC1F,GAArClgB,KAAKwnF,IAAIoB,KAAKsC,qBACdlrF,KAAK4nF,WAAY,EACjB5nF,KAAKwnF,IAAI2D,cAAe,GAExB5hF,EAAS,GAAKA,EAASZ,EAAKY,SAC5BunD,EAAgBvnD,OAASA,GAQU,GAAvCvJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,cACxBj5B,EAAgBxnD,OAAStJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,YACjDx1E,EAAOjL,OAAStJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,aAExC/pF,KAAKioF,UAKL5iD,EAA0B,KAAnBrlC,KAAKyoF,UAAmBzoF,KAAKyoF,UAAYzoF,KAAK0oF,YACrDzpD,EAAS+vB,WAAW3pB,EAAM18B,EAAMo+E,EAASxb,EAAWza,EAAgBp+C,EAAGo+C,EAAgBn+C,EAAGm+C,EAAgBxnD,MAAOwnD,EAAgBvnD,OAAQshF,IAChG,GAArC7qF,KAAKwnF,IAAIoB,KAAKsC,oBAA6BlrF,KAAKwnF,IAAIoB,KAAKG,kBAAyC,IAAnB/oF,KAAKyoF,YACpFzoF,KAAKyoF,UAAY,WAKQ,IAAlBzoF,KAAKyoF,WAA+C,OAAnBzoF,KAAKyoF,YAC7CzoF,KAAKyoF,UAAY,IAEjBzoF,KAAKwnF,IAAI4D,YACTnsD,EAAS+vB,WAAWhvD,KAAKyoF,UAAW9/E,EAAMo+E,EAASxb,EAAWza,EAAgBp+C,EAAGo+C,EAAgBn+C,EAAGm+C,EAAgBxnD,MAAOwnD,EAAgBvnD,OAAQshF,GAWvJ7qF,KAAKioF,UAAW,GAGpBhlF,EAASg8B,EAASuxC,wBAKjB,GAAIxwE,KAAK0oF,uBAAuBC,GAAS,CAC1C,IAAI0C,EAAYrrF,KAAK0oF,YACrB2C,EAAUtC,aAAc,EACxBsC,EAAUvC,WAAa9oF,KACvB,IAAIsrF,OAAa,EACjBA,EAAaP,EAC8B,GAAvC/qF,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,cACxBx1E,EAAOjL,OAAStJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,aAa5C,IAAIJ,EAAW,IAAI4B,GAAgBF,GAC/BjmE,EAAS,IAAIomE,GACiB,MAA9BxrF,KAAKwnF,IAAIoB,KAAK6C,aACdrmE,EAASplB,KAAKwnF,IAAIoB,KAAK6C,aAEvBrmE,EAAON,OAASkjC,gBAAc0jC,SAClC,IAAInf,EAAQ,IAAIY,GAChB,GAAsB,MAAlBluC,EAAS+wB,MAAe,CAExBuc,EAAM5rC,KAAO1B,EAAS0B,KACtB4rC,EAAMh4D,OAAS+2E,EACf/e,EAAMnnD,OAASA,EAEfimE,EAAUM,UACVN,EAAUO,YAEV,IAAIC,EAAkBlC,EAASld,SAASF,GAExCvsE,KAAKO,MAAQ8qF,GAC6B,IAAtCrrF,KAAKwnF,IAAIoB,KAAKsC,qBACdlrF,KAAKuJ,OAASvJ,KAAKwnF,IAAIsE,qBAEvBvf,EAAM5rC,MAAQkrD,EAAgBlrD,OAE9BkrD,EAAgBt3E,OAAOhL,OAASvJ,KAAKwnF,IAAIsE,oBACV,GAA3B9rF,KAAKwnF,IAAIuE,eACT/rF,KAAKwnF,IAAIwE,uBAAyBH,EAElC7rF,KAAKwnF,IAAIuE,eAAiB/rF,KAAKwnF,IAAIsE,2BAO9C,GAAI9rF,KAAK0oF,uBAAuBniD,IAAYvmC,KAAK0oF,uBAAuBthD,GAAW,CACpF,IAAI6kD,OAAc,EAEdA,EADAjsF,KAAK0oF,YAAYp/E,OAASyhF,EAAgBzhF,MAC5B,IAAIiW,EAAWwrE,EAAgBr4E,EAAGq4E,EAAgBp4E,EAAG3S,KAAK0oF,YAAYp/E,MAAOyhF,EAAgBxhF,QAG7FwhF,EAElB9rD,EAASsxB,UAAUvwD,KAAK0oF,YAAauD,EAAYv5E,EAAGu5E,EAAYt5E,EAAGs5E,EAAY3iF,MAAO2iF,EAAY1iF,aAE7FvJ,KAAK0oF,uBAAuB5Y,GACjC9vE,KAAK0oF,YAAYtoD,KAAKnB,EAAS2B,YAAamqD,QAEX,IAArB/qF,KAAK0oF,cACjB1oF,KAAK0oF,YAAc,GACnBzpD,EAAS+vB,WAAWhvD,KAAK0oF,YAAa//E,EAAMo+E,EAASxb,EAAWwf,EAAgBr4E,EAAGq4E,EAAgBp4E,EAAGo4E,EAAgBzhF,MAAOyhF,EAAgBxhF,OAAQshF,GACvH,MAA1B7qF,KAAKgpB,MAAM8gE,aAAwD,GAAjC9pF,KAAKgpB,MAAM8gE,YAAY5pE,QAA8C,GAA/BlgB,KAAKgpB,MAAM8gE,YAAY/pE,MAA6C,GAAhC/f,KAAKgpB,MAAM8gE,YAAY7pE,OAA4C,GAA9BjgB,KAAKgpB,MAAM8gE,YAAY9pE,MACxKzL,EAAOjL,OAAUtJ,KAAKgpB,MAAMm+D,QAAQpnE,KAAKzW,MAAQtJ,KAAKgpB,MAAMm+D,QAAQlnE,MAAM3W,OAEnC,GAAvCtJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,cACxBx1E,EAAOjL,OAAStJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,cAahD,OAV0B,MAAtB/pF,KAAKgpB,MAAMm+D,UACNnnF,KAAK4nF,WAGuD,GAAzD5nF,KAAKwnF,IAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKsC,qBAClClrF,KAAKwnF,IAAI2D,cAAe,EACxBnrF,KAAKksF,gBAAgBjtD,EAAU1qB,IAJnCvU,KAAKksF,gBAAgBjtD,EAAU1qB,IAQhCtR,GAOXskF,EAAY5nF,UAAUusF,gBAAkB,SAAUjtD,EAAU1qB,GACpDvU,KAAKwnF,IAAIoB,KAAK5/D,MAAMmjE,qBAAuBhH,wBAAsBiH,SACjE73E,EAAO7B,GAAK1S,KAAKgpB,MAAMm+D,QAAQpnE,KAAKzW,MACpCiL,EAAO5B,GAAK3S,KAAKgpB,MAAMm+D,QAAQnnE,IAAI1W,MACnCiL,EAAOjL,OAAStJ,KAAKgpB,MAAMm+D,QAAQlnE,MAAM3W,MACzCiL,EAAOhL,QAAUvJ,KAAKgpB,MAAMm+D,QAAQjnE,OAAO5W,OAE/C,IAAI25E,EAAK,IAAI5jE,EAAO9K,EAAO7B,EAAG6B,EAAO5B,EAAI4B,EAAOhL,QAC5C2uD,EAAK,IAAI74C,EAAO9K,EAAO7B,EAAG6B,EAAO5B,GACjCqpB,EAAMh8B,KAAKspF,UAAUnC,QAAQpnE,KAC7B/f,KAAKspF,UAAUnC,QAAQpnE,KAAKytD,YAAcpxD,eAAa2e,QACvDiB,EAAID,QAAU5f,aAAWkwE,QAGX,IAAdrwD,EAAI1yB,OACJ21B,EAAS0wB,SAAS3zB,EAAKinD,EAAI/qB,GAE/B+qB,EAAK,IAAI5jE,EAAO9K,EAAO7B,EAAI6B,EAAOjL,MAAOiL,EAAO5B,GAChDulD,EAAK,IAAI74C,EAAO9K,EAAO7B,EAAI6B,EAAOjL,MAAOiL,EAAO5B,EAAI4B,EAAOhL,QAC3DyyB,EAAMh8B,KAAKspF,UAAUnC,QAAQlnE,MACxB1L,EAAO7B,EAAI6B,EAAOjL,MAAU21B,EAAS/Z,WAAW5b,MAAS0yB,EAAI1yB,MAAQ,IACtE25E,EAAK,IAAI5jE,EAAO4f,EAAS/Z,WAAW5b,MAAS0yB,EAAI1yB,MAAQ,EAAIiL,EAAO5B,GACpEulD,EAAK,IAAI74C,EAAO4f,EAAS/Z,WAAW5b,MAAS0yB,EAAI1yB,MAAQ,EAAIiL,EAAO5B,EAAI4B,EAAOhL,SAE/EvJ,KAAKspF,UAAUnC,QAAQlnE,MAAMutD,YAAcpxD,eAAa2e,QACxDiB,EAAID,QAAU5f,aAAWkwE,QAEX,IAAdrwD,EAAI1yB,OACJ21B,EAAS0wB,SAAS3zB,EAAKinD,EAAI/qB,GAE/B+qB,EAAK,IAAI5jE,EAAO9K,EAAO7B,EAAG6B,EAAO5B,GACjCulD,EAAK,IAAI74C,EAAO9K,EAAO7B,EAAI6B,EAAOjL,MAAOiL,EAAO5B,GAChDqpB,EAAMh8B,KAAKspF,UAAUnC,QAAQnnE,IACzBhgB,KAAKspF,UAAUnC,QAAQnnE,IAAIwtD,YAAcpxD,eAAa2e,QACtDiB,EAAID,QAAU5f,aAAWkwE,QAEX,IAAdrwD,EAAI1yB,OACJ21B,EAAS0wB,SAAS3zB,EAAKinD,EAAI/qB,GAE/B+qB,EAAK,IAAI5jE,EAAO9K,EAAO7B,EAAI6B,EAAOjL,MAAOiL,EAAO5B,EAAI4B,EAAOhL,QAC3D2uD,EAAK,IAAI74C,EAAO9K,EAAO7B,EAAG6B,EAAO5B,EAAI4B,EAAOhL,QAC5CyyB,EAAMh8B,KAAKspF,UAAUnC,QAAQjnE,OACxB3L,EAAO5B,EAAI4B,EAAOhL,OAAW01B,EAAS/Z,WAAW3b,OAAUyyB,EAAI1yB,MAAQ,IACxE25E,EAAK,IAAI5jE,EAAQ9K,EAAO7B,EAAI6B,EAAOjL,MAAS21B,EAAS/Z,WAAW3b,OAAUyyB,EAAI1yB,MAAQ,GACtF4uD,EAAK,IAAI74C,EAAO9K,EAAO7B,EAAIusB,EAAS/Z,WAAW3b,OAAUyyB,EAAI1yB,MAAQ,IAErEtJ,KAAKspF,UAAUnC,QAAQjnE,OAAOstD,YAAcpxD,eAAa2e,QACzDiB,EAAID,QAAU5f,aAAWkwE,QAEX,IAAdrwD,EAAI1yB,OACJ21B,EAAS0wB,SAAS3zB,EAAKinD,EAAI/qB,IAanCqvB,EAAY5nF,UAAU+qF,sBAAwB,SAAUn2E,EAAQ6I,GAC5D,IAAIkvE,GAAW,EACXvC,EAAc/pF,KAAKwnF,IAAIoB,KAAK5/D,MAAM+gE,YAClCA,EAAc,IACdx1E,EAAS,IAAIgL,EAAWhL,EAAO7B,EAAIq3E,EAAax1E,EAAO5B,EAAIo3E,EAAax1E,EAAOjL,MAAQygF,EAAax1E,EAAOhL,OAASwgF,IAExH,IAAIwC,EAAkBvsF,KAAKwnF,IAAIhB,MAAMljF,QAAQtD,MAC7C,GAAIA,KAAKwsF,WAAa,GAAMxsF,KAAKwnF,IAAIiD,iBAAmB,GAAM8B,GAAmBvsF,KAAKwnF,IAAIiD,iBAAmB,GAAMzqF,KAAKysF,oBAAsB,CAE1I,GAAY,IADRC,EAAO1sF,KAAKwsF,aACCxsF,KAAKysF,oBAClB,IAAK,IAAI54C,EAAI04C,EAAkB,EAAG14C,EAAI7zC,KAAKwnF,IAAIoB,KAAKj/E,QAAQxB,OACpDnI,KAAKwnF,IAAIhB,MAAMC,QAAQ5yC,GAAG44C,oBADiC54C,IAE3D64C,IAMZ,IAAK,IADDC,EAAa,EACRzpF,EAAIqpF,EAAiBrpF,EAAIqpF,EAAkBG,EAAMxpF,IAAK,CAC3D,GAAIlD,KAAKwnF,IAAIoB,KAAK5/D,MAAMwhE,wBAAyB,CAC7C,IACIoC,EAAY5sF,KAAKwnF,IAAIoB,KAAKlnF,KAAK4H,MAAQ8T,EAAE8H,WAAW5b,MAAQtJ,KAAKwnF,IAAIoB,KAAKlnF,KAAK4H,MAAQ8T,EAAE8H,WAAW5b,MAOxG,IANItJ,KAAKwnF,IAAIoB,KAAKlnF,KAAK4H,MAAQ8T,EAAE8H,WAAW5b,MAChCiL,EAAO7B,EAAIi6E,EAAa3sF,KAAKwnF,IAAIoB,KAAKj/E,QAAQkjF,UAAU3pF,GAAGoG,MAG3DqjF,EAAa3sF,KAAKwnF,IAAIoB,KAAKj/E,QAAQkjF,UAAU3pF,GAAGoG,OAEhDsjF,EACR,MAGRD,GAAc3sF,KAAKwnF,IAAIoB,KAAKj/E,QAAQkjF,UAAU3pF,GAAGoG,MAErDqjF,GAAc3sF,KAAKwnF,IAAIoB,KAAK5/D,MAAM+gE,YAClCx1E,EAAOjL,MAAQqjF,EAEnB,GAAI3sF,KAAKsqF,QAAU,GAAKtqF,KAAKwnF,IAAI4B,cAAe,CAC5C,IAAIsD,EAAO1sF,KAAKsqF,QACZwC,EAAkB9sF,KAAKwnF,IAAIoB,KAAKK,KAAK8D,cAAczpF,QAAQtD,KAAKwnF,MAC5C,GAApBsF,IAEwB,IADxBA,EAAkB9sF,KAAKwnF,IAAIoB,KAAKoE,QAAQ1pF,QAAQtD,KAAKwnF,QAEjD8E,GAAW,GAed,IAFDW,EAAc,EAClB,IACS/pF,EAAI4pF,EAAiB5pF,EAAI4pF,EAAkBJ,EAAMxpF,IAAK,CAC3D+pF,GAAgBX,EAAWtsF,KAAKwnF,IAAIoB,KAAKoE,QAAQE,UAAUhqF,GAAGqG,OAASvJ,KAAKwnF,IAAIoB,KAAKK,KAAKC,OAAOhmF,GAAGqG,OACpG,IAAIi+E,EAAMxnF,KAAKwnF,IAAIoB,KAAKK,KAAKC,OAAOhmF,GACrBlD,KAAKwnF,IAAIoB,KAAKK,KAAK8D,cAAczpF,QAAQkkF,GAuC5CxnF,KAAKwnF,IAAIhB,MAAMljF,QAAQtD,MACvCitF,GAAejtF,KAAKwnF,IAAIoB,KAAK5/D,MAAM+gE,YAMnCx1E,EAAOhL,OAAS0jF,EAEXjtF,KAAKwnF,IAAI2F,mBACV54E,EAAOhL,OAAS0jF,GAGxB,OAAO14E,GAOXgzE,EAAY5nF,UAAUiqF,YAAc,WAChC,YAA+B,IAApB5pF,KAAKgpB,MAAMrgB,MAA2C,MAAnB3I,KAAKgpB,MAAMrgB,KAC9C3I,KAAKgpB,MAAMrgB,UAEkB,IAAxB3I,KAAKwnF,IAAIx+D,MAAMrgB,MAA+C,MAAvB3I,KAAKwnF,IAAIx+D,MAAMrgB,KAC3D3I,KAAKwnF,IAAIx+D,MAAMrgB,UAEmB,IAA7B3I,KAAKwnF,IAAIoB,KAAK5/D,MAAMrgB,MAAoD,MAA5B3I,KAAKwnF,IAAIoB,KAAK5/D,MAAMrgB,KACrE3I,KAAKwnF,IAAIoB,KAAK5/D,MAAMrgB,KAGpB4jB,GAAYkU,aAO3B8mD,EAAY5nF,UAAUirF,aAAe,WACjC,YAAoC,IAAzB5qF,KAAKgpB,MAAMuiD,WAAqD,MAAxBvrE,KAAKgpB,MAAMuiD,UACnDvrE,KAAKgpB,MAAMuiD,eAEuB,IAA7BvrE,KAAKwnF,IAAIx+D,MAAMuiD,WAAyD,MAA5BvrE,KAAKwnF,IAAIx+D,MAAMuiD,UAChEvrE,KAAKwnF,IAAIx+D,MAAMuiD,UAGfvrE,KAAKwnF,IAAIoB,KAAK5/D,MAAMuiD,WAOnCgc,EAAY5nF,UAAUgrF,WAAa,WAC/B,YAAkC,IAAvB3qF,KAAKgpB,MAAM+9D,SAAiD,MAAtB/mF,KAAKgpB,MAAM+9D,QACjD/mF,KAAKgpB,MAAM+9D,aAEqB,IAA3B/mF,KAAKwnF,IAAIx+D,MAAM+9D,SAAqD,MAA1B/mF,KAAKwnF,IAAIx+D,MAAM+9D,QAC9D/mF,KAAKwnF,IAAIx+D,MAAM+9D,QAGf/mF,KAAKwnF,IAAIoB,KAAK5/D,MAAM+9D,SAOnCQ,EAAY5nF,UAAUsqF,mBAAqB,WACvC,YAA0C,IAA/BjqF,KAAKgpB,MAAM09D,iBAAiE,MAA9B1mF,KAAKgpB,MAAM09D,gBACzD1mF,KAAKgpB,MAAM09D,qBAE6B,IAAnC1mF,KAAKwnF,IAAIx+D,MAAM09D,iBAAqE,MAAlC1mF,KAAKwnF,IAAIx+D,MAAM09D,gBACtE1mF,KAAKwnF,IAAIx+D,MAAM09D,gBAGf1mF,KAAKwnF,IAAIoB,KAAK5/D,MAAM09D,iBAOnCa,EAAY5nF,UAAUwqF,mBAAqB,WACvC,YAA0C,IAA/BnqF,KAAKgpB,MAAMkhE,iBAAiE,MAA9BlqF,KAAKgpB,MAAMkhE,gBACzDlqF,KAAKgpB,MAAMkhE,qBAE6B,IAAnClqF,KAAKwnF,IAAIx+D,MAAMkhE,iBAAqE,MAAlClqF,KAAKwnF,IAAIx+D,MAAMkhE,gBACtElqF,KAAKwnF,IAAIx+D,MAAMkhE,gBAGflqF,KAAKwnF,IAAIoB,KAAK5/D,MAAMkhE,iBAOnC3C,EAAY5nF,UAAUmrF,gBAAkB,WACpC,YAAuC,IAA5B9qF,KAAKgpB,MAAMmX,cAA2D,MAA3BngC,KAAKgpB,MAAMmX,aACtDngC,KAAKgpB,MAAMmX,aAGXngC,KAAKmgC,cAOpBonD,EAAY5nF,UAAU4pF,cAAgB,WAGlC,IAAIjgF,EAAQtJ,KAAKotF,iBAEa,MAA1BptF,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,YACpDxgF,GAAUtJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY7pE,MAAQjgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,MAI1FzW,GAAUtJ,KAAKgpB,MAAM8gE,YAAY7pE,MAAQjgB,KAAKgpB,MAAM8gE,YAAY/pE,KAChEzW,GAAUtJ,KAAKgpB,MAAMm+D,QAAQpnE,KAAKzW,MAAQtJ,KAAKgpB,MAAMm+D,QAAQlnE,MAAM3W,OAEvE,IAAIC,EAAS,EACTogF,EAAW,IAAI/kE,EACnB,GAAgC,iBAArB5kB,KAAK0oF,aAAsD,iBAAnB1oF,KAAKyoF,UAAwB,CAC5E,IAAI4E,EAAertF,KAAK0oF,YAEnB1oF,KAAKioF,WACNoF,EAAoC,OAAnBrtF,KAAKyoF,WAAyC,KAAnBzoF,KAAKyoF,gBACnB,IAAnBzoF,KAAKyoF,UAA6BzoF,KAAKyoF,UAAYzoF,KAAK0oF,aACvE,IACI4E,EAAYttF,KAAKwnF,IAAIhB,MAAMljF,QAAQtD,MACI,GAAvCA,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,cACxBzgF,GAA+C,EAAtCtJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,aAEhC/pF,KAAKwnF,IAAIhB,MAAMC,QAAQ6G,GAAWtF,YAAehoF,KAAKwnF,IAAIhB,MAAMC,QAAQ6G,GAAWvF,aAChF/nF,KAAKooF,QAAQQ,KAAKG,aACdz/E,EAAQ,GACRtJ,KAAK2nF,QAAUr+E,EACe,MAA1BtJ,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,YACpD9pF,KAAK2nF,SAAY3nF,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY7pE,MAAQjgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,MAGjG/f,KAAK2nF,SAAY3nF,KAAKgpB,MAAM8gE,YAAY7pE,MAAQjgB,KAAKgpB,MAAM8gE,YAAY/pE,KACvE/f,KAAK2nF,SAAY3nF,KAAKgpB,MAAMm+D,QAAQpnE,KAAKzW,MAAQtJ,KAAKgpB,MAAMm+D,QAAQlnE,MAAM3W,QAI9EtJ,KAAK2nF,QAAUr+E,EAGnBC,GADMogF,EAAS7kE,OAAOuoE,EAAcrtF,KAAK4pF,cAAe5pF,KAAKmgC,aAAc,IAAI7gB,EAAMtf,KAAK2nF,QAAS,IAAI,EAAO,IAAIroE,EAAM,EAAG,IAC7G4I,WAAW3e,QAIzBA,GADMogF,EAAS7kE,OAAOuoE,EAAcrtF,KAAK4pF,cAAe5pF,KAAKmgC,aAAc,IAAI7gB,EAAMhW,EAAO,IAAI,EAAO,IAAIgW,EAAM,EAAG,IACtG4I,WAAW3e,QAIjCA,GAA6E,GAAlEvJ,KAAKgpB,MAAMm+D,QAAQnnE,IAAI1W,MAAQtJ,KAAKgpB,MAAMm+D,QAAQjnE,OAAO5W,YAEnE,GAAItJ,KAAK0oF,uBAAuBC,GAAS,CACtC2E,EAAYttF,KAAKwnF,IAAIhB,MAAMljF,QAAQtD,MAAvC,IACIutF,EAAgB,EACW,MAA1BvtF,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,aACrDyD,EAAgBvtF,KAAKotF,sBACsB,IAAhCptF,KAAKgpB,MAAM8gE,YAAY/pE,MAAwB/f,KAAKgpB,MAAM8gE,YAAY7b,aAC7Esf,GAAiBvtF,KAAKgpB,MAAM8gE,YAAY/pE,WAEA,IAAjC/f,KAAKgpB,MAAM8gE,YAAY7pE,OAAyBjgB,KAAKgpB,MAAM8gE,YAAY5b,cAC9Eqf,GAAiBvtF,KAAKgpB,MAAM8gE,YAAY7pE,QAGH,MAAnCjgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,kBAAkE,IAApC9pF,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,aAC5EyD,EAAgBvtF,KAAKotF,sBAC+B,IAAzCptF,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY/pE,MAAwB/f,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY7b,aAC/Fsf,GAAiBvtF,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY/pE,WAEA,IAA1C/f,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY7pE,OAAyBjgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5b,cAChGqf,GAAiBvtF,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY7pE,QAIrDstE,EAAgBvtF,KAAKotF,iBAEzBptF,KAAK0oF,YAAY8E,UAAYD,EACxBvtF,KAAKwnF,IAAIhB,MAAMC,QAAQ6G,GAAWtF,YAAehoF,KAAKwnF,IAAIhB,MAAMC,QAAQ6G,GAAWvF,WAIpFx+E,GAA6E,GAAlEvJ,KAAKgpB,MAAMm+D,QAAQnnE,IAAI1W,MAAQtJ,KAAKgpB,MAAMm+D,QAAQjnE,OAAO5W,OAHpEC,EAASvJ,KAAK0oF,YAAYhnF,KAAK6H,OAKS,IAAxCvJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,cACxBzgF,GAA+C,EAAtCtJ,KAAKooF,QAAQQ,KAAK5/D,MAAM+gE,aAGP,MAA1B/pF,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,mBACD,IAAxC9pF,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,KAAuBhgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY3b,YAC9F5kE,GAAUvJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,KAE1ChgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY1b,mBAAkE,IAA3CpuE,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,SACvF3W,GAAUvJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,SAGlD3W,GAAUvJ,KAAK0oF,YAAY1/D,MAAM+gE,iBAEhC,GAAI/pF,KAAK0oF,uBAAuBniD,IAAYvmC,KAAK0oF,uBAAuBthD,GACzE79B,GAAUvJ,KAAK0oF,YAAYn/E,YAE1B,GAAIvJ,KAAK0oF,uBAAuB5Y,GAAgB,CACjD,IAAI+Z,EAAU7pF,KAAK0oF,YAInBn/E,GAFUogF,EAAS7kE,OAAO+kE,EAAQxzE,KAAMwzE,EAAQlhF,KAAMkhF,EAAQ1pD,aAAc,IAAI7gB,EAAMhW,EAAO,IAAI,EAAO,IAAIgW,EAAM,EAAG,IAEvG4I,WAAW3e,OACzBA,GAA6E,GAAlEvJ,KAAKgpB,MAAMm+D,QAAQnnE,IAAI1W,MAAQtJ,KAAKgpB,MAAMm+D,QAAQjnE,OAAO5W,iBAEnC,IAArBtJ,KAAK0oF,cACa,MAA1B1oF,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,YACpDxgF,GAAUtJ,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY7pE,MAAQjgB,KAAKooF,QAAQQ,KAAK5/D,MAAM8gE,YAAY/pE,MAG1FzW,GAAUtJ,KAAKgpB,MAAM8gE,YAAY7pE,MAAQjgB,KAAKgpB,MAAM8gE,YAAY/pE,KAChEzW,GAAUtJ,KAAKgpB,MAAMm+D,QAAQpnE,KAAKzW,MAAQtJ,KAAKgpB,MAAMm+D,QAAQlnE,MAAM3W,OAEvEC,GAA6E,GAAlEvJ,KAAKgpB,MAAMm+D,QAAQnnE,IAAI1W,MAAQtJ,KAAKgpB,MAAMm+D,QAAQjnE,OAAO5W,QA8BxE,OA3BMtJ,KAAK0oF,uBAAuBC,GASA,MAA1B3oF,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,kBACD,IAAxC9pF,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,KAAuBhgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY3b,YAC9F5kE,GAAUvJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,UAEQ,IAA3ChgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,QAA0BlgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY1b,eACjG7kE,GAAUvJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,eAIJ,IAA/BlgB,KAAKgpB,MAAM8gE,YAAY9pE,KAAuBhgB,KAAKgpB,MAAM8gE,YAAY3b,YAC5E5kE,GAAUvJ,KAAKgpB,MAAM8gE,YAAY9pE,UAEQ,IAAlChgB,KAAKgpB,MAAM8gE,YAAY5pE,QAA0BlgB,KAAKgpB,MAAM8gE,YAAY1b,eAC/E7kE,GAAUvJ,KAAKgpB,MAAM8gE,YAAY5pE,SArBX,MAA1BlgB,KAAKgpB,MAAM8gE,kBAAyD,IAA3B9pF,KAAKgpB,MAAM8gE,YACpDvgF,GAAWvJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,IAAMhgB,KAAKwnF,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,OAGjF3W,GAAWvJ,KAAKgpB,MAAM8gE,YAAY9pE,IAAMhgB,KAAKgpB,MAAM8gE,YAAY5pE,OAqBvE3W,GAAUvJ,KAAKwnF,IAAIoB,KAAK5/D,MAAM+gE,aAOlCxC,EAAY5nF,UAAUytF,eAAiB,WACnC,IAAIE,EAAYttF,KAAKwnF,IAAIhB,MAAMljF,QAAQtD,MAEnCwsF,GADWxsF,KAAKwnF,IAAIoB,KAAKK,KAAK8D,cAAczpF,QAAQtD,KAAKwnF,KAC5CxnF,KAAKwsF,YAClBljF,EAAQ,EACZ,GAAmB,IAAfkjF,EACA,IAAK,IAAItpF,EAAI,EAAGA,EAAIspF,EAAYtpF,IAC5BoG,GAAStJ,KAAKwnF,IAAIoB,KAAKj/E,QAAQkjF,UAAUS,EAAYpqF,GAAGoG,WAG3D,GAAIkjF,EAAa,EAClB,IAAStpF,EAAI,EAAGA,EAAIspF,EAAYtpF,IAC5BoG,GAAStJ,KAAKwnF,IAAIoB,KAAKj/E,QAAQkjF,UAAUS,EAAYpqF,GAAGoG,MACnDpG,EAAI,EAAKspF,IACVxsF,KAAKwnF,IAAIhB,MAAMC,QAAQ6G,EAAYpqF,EAAI,GAAG8kF,YAAa,GAInE,GAAmB,MAAfhoF,KAAKuI,QAAkBvI,KAAKuI,OAAOi/E,IAAIl+E,MAAQ,GAC1CtJ,KAAKwnF,IAAIoB,KAAgB,aAAoB,MAAf5oF,KAAKuI,QAAmBvI,KAAKwnF,IAAIl+E,MAAQtJ,KAAKuI,OAAOi/E,IAAIl+E,MAAQ,CAChGA,EAAQ,EACR,IAAK,IAAIuqC,EAAI,EAAGA,EAAI7zC,KAAKuI,OAAOikF,WAAY34C,IACxCvqC,GAAStJ,KAAKuI,OAAOi/E,IAAIoB,KAAKj/E,QAAQkjF,UAAUh5C,GAAGvqC,MAEvDA,GAAgBtJ,KAAKwnF,IAAIhB,MAAMr+E,MAGvC,OAAOmB,GAEJi+E,KAQPkG,GAAuC,WAMvC,SAASA,EAAsBjG,GAK3BxnF,KAAKwmF,SACLxmF,KAAKooF,QAAUZ,EA0CnB,OAnCAiG,EAAsB9tF,UAAU8mF,QAAU,SAAUj3E,GAChD,GAAIA,EAAQ,GAAKA,GAASxP,KAAKmI,MAC3B,MAAM,IAAImO,MAAM,4BAEpB,OAAOtW,KAAKwmF,MAAMh3E,IAEtB9P,OAAOuC,eAAewrF,EAAsB9tF,UAAW,SAKnDuC,IAAK,WACD,OAAOlC,KAAKwmF,MAAMxlF,QAEtBqB,YAAY,EACZC,cAAc,IAElBmrF,EAAsB9tF,UAAU8T,IAAM,SAAUi6E,GAC5C,QAAoB,IAATA,EAAsB,CAC7B,IAAIC,EAAW,IAAIpG,GAEnB,OADAvnF,KAAKyT,IAAIk6E,GACFD,EAGPA,EAAKlG,IAAMxnF,KAAKooF,QAChBpoF,KAAKwmF,MAAMtlF,KAAKwsF,IAOxBD,EAAsB9tF,UAAU2D,QAAU,SAAUoqF,GAChD,OAAO1tF,KAAKwmF,MAAMljF,QAAQoqF,IAEvBD,KC/pCPG,GAA+B,WAM/B,SAASA,EAAchF,GAMnB5oF,KAAK6tF,YAAc,EACnB7tF,KAAK4oF,KAAOA,EAkChB,OAhCAlpF,OAAOuC,eAAe2rF,EAAcjuF,UAAW,SAK3CuC,IAAK,WACD,OAAOlC,KAAK6tF,aAEhBzrF,IAAK,SAAU7B,GACXP,KAAK8tF,eAAgB,EACrB9tF,KAAK6tF,YAActtF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2rF,EAAcjuF,UAAW,UAK3CuC,IAAK,WAID,OAHyB,MAArBlC,KAAKmgC,eACLngC,KAAKmgC,aAAe,IAAIre,GAErB9hB,KAAKmgC,cAEhB/9B,IAAK,SAAU7B,GACXP,KAAKmgC,aAAe5/B,GAExB8B,YAAY,EACZC,cAAc,IAEXsrF,KAQPG,GAAyC,WAOzC,SAASA,EAAwBnF,GAK7B5oF,KAAKguF,mBAKLhuF,KAAK6tF,YAAc,EACnB7tF,KAAK4oF,KAAOA,EACZ5oF,KAAKguF,mBA0HT,OAnHAD,EAAwBpuF,UAAU8T,IAAM,SAAUtL,GAI9C,IAAK,IAAIjF,EAAI,EAAGA,EAAIiF,EAAOjF,IAAK,CAC5BlD,KAAKguF,gBAAgB9sF,KAAK,IAAI0sF,GAAc5tF,KAAK4oF,OACjD,IAAK,IAAIp5E,EAAQ,EAAGA,EAAQxP,KAAK4oF,KAAKK,KAAK9gF,MAAOqH,IAAS,CACvD,IAAIg4E,EAAMxnF,KAAK4oF,KAAKK,KAAKC,OAAO15E,GAC5Bk+E,EAAO,IAAInG,GACfmG,EAAKntF,MAAQ,GACbinF,EAAIhB,MAAM/yE,IAAIi6E,MAS1BhuF,OAAOuC,eAAe8rF,EAAwBpuF,UAAW,SAKrDuC,IAAK,WACD,OAAOlC,KAAKguF,gBAAgBhtF,QAEhCqB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8rF,EAAwBpuF,UAAW,SAKrDuC,IAAK,WAQD,OAPyB,IAArBlC,KAAK6tF,cACL7tF,KAAK6tF,YAAc7tF,KAAKiuF,uBAEG,IAA3BjuF,KAAK4oF,KAAKsF,cAAsBluF,KAAK6tF,cAAgB7tF,KAAK4oF,KAAKsF,cAAiBluF,KAAK4oF,KAAK5/D,MAAMwhE,0BAChGxqF,KAAK6tF,YAAc7tF,KAAK4oF,KAAKsF,aAC7BluF,KAAK4oF,KAAKuF,aAAc,GAErBnuF,KAAK6tF,aAEhBxrF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe8rF,EAAwBpuF,UAAW,WAKrDuC,IAAK,WACD,OAAOlC,KAAKguF,iBAEhB3rF,YAAY,EACZC,cAAc,IAMlByrF,EAAwBpuF,UAAUktF,UAAY,SAAUr9E,GACpD,GAAIA,GAAS,GAAKA,GAASxP,KAAK2J,QAAQ3I,OACpC,OAAOhB,KAAK2J,QAAQ6F,GAGpB,MAAM8G,MAAM,0CAA4C9G,IAQhEu+E,EAAwBpuF,UAAUsuF,oBAAsB,WACpD,IAAItB,EAAa,EACjB3sF,KAAK4oF,KAAKqF,sBACV,IAAK,IAAI/qF,EAAI,EAAGiF,EAAQnI,KAAKguF,gBAAgBhtF,OAAQkC,EAAIiF,EAAOjF,IAC5DypF,GAAc3sF,KAAKguF,gBAAgB9qF,GAAGoG,MAE1C,OAAOqjF,GAMXoB,EAAwBpuF,UAAUyuF,iBAAmB,SAAUzB,GAI3D,IAAK,IAHDtxC,KAEAgzC,EAAYruF,KAAKmI,MACZjF,EAAI,EAAGA,EAAIlD,KAAKmI,MAAOjF,IACxBlD,KAAK4oF,KAAKuF,aAAexB,GAAc,IAAM3sF,KAAKguF,gBAAgB9qF,GAAG4qF,cACrE9tF,KAAKguF,gBAAgB9qF,GAAGoG,MAAQ,GAGhC+xC,EAAOn4C,GAAKlD,KAAKguF,gBAAgB9qF,GAAGoG,MAChCtJ,KAAKguF,gBAAgB9qF,GAAGoG,MAAQ,GAAKtJ,KAAKguF,gBAAgB9qF,GAAG4qF,eAC7DnB,GAAc3sF,KAAKguF,gBAAgB9qF,GAAGoG,MACtC+kF,KAGAhzC,EAAOn4C,GAAK,GAIxB,IAASA,EAAI,EAAGA,EAAIlD,KAAKmI,MAAOjF,IAAK,CACjC,IAAIoG,EAAQqjF,EAAa0B,EACrBhzC,EAAOn4C,IAAM,IACbm4C,EAAOn4C,GAAKoG,GAGpB,OAAO+xC,GAEJ0yC,KCpMPO,GAA4B,WAM5B,SAASA,EAAW1F,GAKhB5oF,KAAKuuF,qBAAuB,EAK5BvuF,KAAKwuF,UAAY,EAKjBxuF,KAAKyuF,SAAW,EAKhBzuF,KAAK0uF,aAAc,EAMnB1uF,KAAK2uF,uBAAwB,EAK7B3uF,KAAK4uF,cAAgB,EAMrB5uF,KAAK6uF,gBAAiB,EACtB7uF,KAAK8uF,2BAA4B,EAMjC9uF,KAAK+uF,oBAAqB,EAC1B/uF,KAAKorF,YAAa,EAClBprF,KAAKmrF,cAAe,EACpBnrF,KAAKgvF,aAAc,EACnBhvF,KAAKivF,QAAUrG,EAoQnB,OAlQAlpF,OAAOuC,eAAeqsF,EAAW3uF,UAAW,iBAMxCuC,IAAK,WACD,OAAOlC,KAAKkvF,gBAEhB9sF,IAAK,SAAU7B,GACXP,KAAKkvF,eAAiB3uF,GAE1B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,SAKxCuC,IAAK,WAID,OAHsB,MAAlBlC,KAAKmvF,YACLnvF,KAAKmvF,UAAY,IAAI1B,GAAsBztF,OAExCA,KAAKmvF,WAEhB9sF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,QAKxCuC,IAAK,WACD,OAAOlC,KAAKivF,SAEhB7sF,IAAK,SAAU7B,GACXP,KAAKivF,QAAU1uF,GAEnB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,SAKxCuC,IAAK,WAKD,YAJ6B,IAAlBlC,KAAKovF,WACZpvF,KAAKovF,SAAW,IAAI/I,GACpBrmF,KAAKovF,SAAShI,UAAUpnF,OAErBA,KAAKovF,UAEhBhtF,IAAK,SAAU7B,GACXP,KAAKovF,SAAW7uF,EAChB,IAAK,IAAI2C,EAAI,EAAGA,EAAIlD,KAAKwmF,MAAMr+E,MAAOjF,IAClClD,KAAKwmF,MAAMC,QAAQvjF,GAAG8lB,MAAMm+D,QAAU5mF,EAAM8uF,YAClB,IAAf9uF,EAAMoI,OACb3I,KAAKwmF,MAAMC,QAAQvjF,GAAG8lB,MAAMrgB,KAAOpI,EAAMoI,WAER,IAA1BpI,EAAMmmF,kBACb1mF,KAAKwmF,MAAMC,QAAQvjF,GAAG8lB,MAAM09D,gBAAkBnmF,EAAMmmF,sBAEnB,IAA1BnmF,EAAM2pF,kBACblqF,KAAKwmF,MAAMC,QAAQvjF,GAAG8lB,MAAMkhE,gBAAkB3pF,EAAM2pF,sBAEzB,IAApB3pF,EAAMgrE,YACbvrE,KAAKwmF,MAAMC,QAAQvjF,GAAG8lB,MAAMuiD,UAAYhrE,EAAMgrE,gBAErB,IAAlBhrE,EAAMwmF,UACb/mF,KAAKwmF,MAAMC,QAAQvjF,GAAG8lB,MAAM+9D,QAAUxmF,EAAMwmF,UAIxD1kF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,kBAKxCuC,IAAK,WAID,YAHuC,IAA5BlC,KAAKsvF,qBACZtvF,KAAKsvF,mBAAqB,GAEvBtvF,KAAKsvF,oBAEhBltF,IAAK,SAAU7B,GACXP,KAAKsvF,mBAAqB/uF,GAE9B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,oBAKxCuC,IAAK,WACD,OAAOlC,KAAKuuF,sBAEhBnsF,IAAK,SAAU7B,GACXP,KAAKuuF,qBAAuBhuF,GAEhC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,UAKxCuC,IAAK,WAID,OAHKlC,KAAK6uF,iBACN7uF,KAAKwuF,UAAYxuF,KAAKupF,iBAEnBvpF,KAAKwuF,WAEhBpsF,IAAK,SAAU7B,GACXP,KAAKwuF,UAAYjuF,EACjBP,KAAK6uF,gBAAiB,GAE1BxsF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,SAKxCuC,IAAK,WAID,OAHsB,IAAlBlC,KAAKyuF,eAA2C,IAAlBzuF,KAAKyuF,WACnCzuF,KAAKyuF,SAAWzuF,KAAK0pF,gBAElB1pF,KAAKyuF,UAEhBpsF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,0BAKxCuC,IAAK,WACD,OAAOlC,KAAKuvF,YAEhBntF,IAAK,SAAU7B,GACXP,KAAKuvF,WAAahvF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,oBAKxCuC,IAAK,WACD,OAAOlC,KAAKwvF,mBAEhBptF,IAAK,SAAU7B,GACXP,KAAKwvF,kBAAoBjvF,GAE7B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,oBAKxCuC,IAAK,WACD,OAAOlC,KAAK+uF,oBAEhB3sF,IAAK,SAAU7B,GACXP,KAAK+uF,mBAAqBxuF,GAE9B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeqsF,EAAW3uF,UAAW,YAKxCuC,IAAK,WACD,OAAOlC,KAAK4oF,KAAKK,KAAK8D,cAAczpF,QAAQtD,OAEhDqC,YAAY,EACZC,cAAc,IAOlBgsF,EAAW3uF,UAAU4pF,cAAgB,WACjC,IACIiF,EADA1G,EAAyB,EAEzBx/D,EAAY,EAEZkmE,EADAxuF,KAAKwmF,MAAMC,QAAQ,GAAG6D,QAAU,EACpB,EAGAtqF,KAAKwmF,MAAMC,QAAQ,GAAGl9E,OAEtC,IAAK,IAAIrG,EAAI,EAAGA,EAAIlD,KAAKwmF,MAAMr+E,MAAOjF,IAAK,CACvC,IAAIwqF,EAAO1tF,KAAKwmF,MAAMC,QAAQvjF,GAa9B,GAXIwqF,EAAK5F,uBAAyBA,IAC9BA,EAAyB4F,EAAK5F,wBASlC9nF,KAAKmtF,kBAAmB,EACpBO,EAAKpD,QAAU,EAAnB,CAGI,IAAK,IAFDmF,EAASvsF,EACTwsF,EAAQ1vF,KAAKgvF,YAAchvF,KAAK4oF,KAAKoE,QAAQ1pF,QAAQtD,MAAQA,KAAK4oF,KAAKK,KAAK8D,cAAczpF,QAAQtD,MAC7F6zC,EAAI,EAAGA,EAAI65C,EAAKpD,QAASz2C,IACzBA,EAAI,EAAK65C,EAAKpD,WACdtqF,KAAKgvF,YAAchvF,KAAK4oF,KAAKoE,QAAQE,UAAUwC,EAAQ77C,EAAI,GAAK7zC,KAAK4oF,KAAKK,KAAKC,OAAOwG,EAAQ77C,EAAI,IAAI2yC,MAAMC,QAAQgJ,GAAQ1H,YAAa,GAG9Iz/D,EAAYolE,EAAKnkF,SACjB+e,EAAYolE,EAAKnkF,aAIzBilF,EAAY37E,KAAKsV,IAAIqmE,EAAWd,EAAKnkF,QAWzC,OATI+e,EAAYkmE,IACZA,EAAYlmE,GAEE,IAAdkmE,EACAA,EAAYlmE,EAEPw/D,EAAyB,IAC9B0G,GAAa1G,GAEV0G,GAEXF,EAAW3uF,UAAU+pF,aAAe,WAEhC,IAAK,IADDiG,EAAS,EACJzsF,EAAI,EAAGA,EAAIlD,KAAK4oF,KAAKj/E,QAAQxB,MAAOjF,IAAK,CAE9CysF,GADa3vF,KAAK4oF,KAAKj/E,QAAQkjF,UAAU3pF,GACxBoG,MAErB,OAAOqmF,GAEJrB,KAOPsB,GAAsC,WAMtC,SAASA,EAAqBhH,GAC1B5oF,KAAKipF,QACLjpF,KAAK4oF,KAAOA,EAoDhB,OAlDAlpF,OAAOuC,eAAe2tF,EAAqBjwF,UAAW,SAMlDuC,IAAK,WACD,OAAOlC,KAAKipF,KAAKjoF,QAErBqB,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe2tF,EAAqBjwF,UAAW,iBAMlDuC,IAAK,WACD,OAAOlC,KAAKipF,MAEhB5mF,YAAY,EACZC,cAAc,IAElBstF,EAAqBjwF,UAAUkwF,OAAS,SAAUp2D,GAC9C,QAAmB,IAARA,EAAqB,CAC5B,IAAIq2D,EAAU,IAAIxB,GAAWtuF,KAAK4oF,MAElC,OADA5oF,KAAK6vF,OAAOC,GACLA,EAOP,GAJAr2D,EAAIzQ,MAAMu9D,mBAAmBvmF,KAAK4oF,KAAK5/D,MAAM09D,iBAC7CjtD,EAAIzQ,MAAM1iB,QAAQtG,KAAK4oF,KAAK5/D,MAAMrgB,MAClC8wB,EAAIzQ,MAAM49D,aAAa5mF,KAAK4oF,KAAK5/D,MAAMuiD,WACvC9xC,EAAIzQ,MAAM89D,WAAW9mF,KAAK4oF,KAAK5/D,MAAM+9D,SACb,IAApBttD,EAAI+sD,MAAMr+E,MACV,IAAK,IAAIjF,EAAI,EAAGA,EAAIlD,KAAK4oF,KAAKj/E,QAAQxB,MAAOjF,IACzCu2B,EAAI+sD,MAAM/yE,IAAI,IAAI8zE,IAG1BvnF,KAAKipF,KAAK/nF,KAAKu4B,IAOvBm2D,EAAqBjwF,UAAUupF,OAAS,SAAU15E,GAC9C,OAAOxP,KAAKipF,KAAKz5E,IAEdogF,KAOPG,GAAyC,WAMzC,SAASA,EAAwBnH,GAK7B5oF,KAAKipF,QACLjpF,KAAK4oF,KAAOA,EACZ5oF,KAAKipF,QA4CT,OArCA8G,EAAwBpwF,UAAUutF,UAAY,SAAU19E,GAIpD,OAAQxP,KAAKipF,KAAKz5E,IAEtB9P,OAAOuC,eAAe8tF,EAAwBpwF,UAAW,SAKrDuC,IAAK,WACD,OAAOlC,KAAKipF,KAAKjoF,QAErBqB,YAAY,EACZC,cAAc,IAElBytF,EAAwBpwF,UAAU8T,IAAM,SAAUgmB,GAC9C,GAAmB,iBAARA,EAAkB,CAEzB,IAAK,IADD+tD,OAAM,EACDtkF,EAAI,EAAGA,EAAIu2B,EAAKv2B,IAAK,EAC1BskF,EAAM,IAAI8G,GAAWtuF,KAAK4oF,OACtBoG,aAAc,EAClB,IAAK,IAAIn7C,EAAI,EAAGA,EAAI7zC,KAAK4oF,KAAKj/E,QAAQxB,MAAO0rC,IACzC2zC,EAAIhB,MAAM/yE,IAAI,IAAI8zE,IAEtBvnF,KAAKipF,KAAK/nF,KAAKsmF,GAEnB,OAAOxnF,KAAKipF,KAGZjpF,KAAKipF,KAAK/nF,KAAKu4B,IAGvBs2D,EAAwBpwF,UAAU2D,QAAU,SAAUkkF,GAClD,OAAOxnF,KAAKipF,KAAK3lF,QAAQkkF,IAEtBuI,KClcPn7E,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAwBxCuzE,GAAyB,SAAUnzE,GAOnC,SAASmzE,IACL,IAAIjzE,EAAQF,EAAO3V,KAAKG,OAASA,KAoDjC,OA/CA0V,EAAMs6E,SAAW,IAAI1wE,EAAM,EAAG,GAI9B5J,EAAMu6E,aAAc,EAKpBv6E,EAAMw6E,cAAe,EAKrBx6E,EAAMy6E,WAAa,IAAI5wE,EAKvB7J,EAAM06E,uBAKN16E,EAAM26E,gBAAkB,EACxB36E,EAAM83E,UAAY,EAKlB93E,EAAM46E,UAAW,EACjB56E,EAAMw1E,oBAAsB,EAa5Bx1E,EAAM2zE,gBAAiB,EACvB3zE,EAAM66E,eAAgB,EACtB76E,EAAMmzE,cAAe,EACdnzE,EAupBX,OAltBAd,GAAU+zE,EAASnzE,GA6DnB9V,OAAOuC,eAAe0mF,EAAQhpF,UAAW,sBAMrCuC,IAAK,WACD,YAAsC,IAAvBlC,KAAKwwF,eAA+D,cAAvBxwF,KAAKwwF,eAErEnuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,oBAKrCuC,IAAK,WACD,YAAoC,IAArBlC,KAAKywF,aAA2D,cAArBzwF,KAAKywF,aAEnEpuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,gBAKrCuC,IAAK,WAID,OAH0B,MAAtBlC,KAAK0wF,oBAAuD,IAAvB1wF,KAAK0wF,gBAC1C1wF,KAAK0wF,eAAgB,GAElB1wF,KAAK0wF,eAEhBtuF,IAAK,SAAU7B,GACXP,KAAK0wF,cAAgBnwF,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,4BAKrCuC,IAAK,WACD,OAAOlC,KAAKswF,UAEhBluF,IAAK,SAAU7B,GACXP,KAAKswF,SAAW/vF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,WAKrCuC,IAAK,WAID,OAHwB,MAApBlC,KAAK2wF,kBAAmD,IAArB3wF,KAAK2wF,cACxC3wF,KAAK2wF,YAAc,IAAI5C,GAAwB/tF,OAE5CA,KAAK2wF,aAEhBtuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,QAKrCuC,IAAK,WAID,OAHqB,MAAjBlC,KAAK4wF,WACL5wF,KAAK4wF,SAAW,IAAIhB,GAAqB5vF,OAEtCA,KAAK4wF,UAEhBvuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,WAKrCuC,IAAK,WAID,OAHwB,MAApBlC,KAAK6wF,kBAAmD,IAArB7wF,KAAK6wF,cACxC7wF,KAAK6wF,YAAc,IAAId,GAAwB/vF,OAE5CA,KAAK6wF,aAEhBxuF,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,gBAKrCuC,IAAK,WACD,OAAOlC,KAAK8wF,kBAEhB1uF,IAAK,SAAU7B,GACXP,KAAK8wF,iBAAmBvwF,GAE5B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,SAKrCuC,IAAK,WAID,OAHsB,MAAlBlC,KAAK+wF,YACL/wF,KAAK+wF,UAAY,IAAIrL,IAElB1lF,KAAK+wF,WAEhB3uF,IAAK,SAAU7B,GACW,MAAlBP,KAAK+wF,YACL/wF,KAAK+wF,UAAYxwF,IAGzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,eAKrCuC,IAAK,WACD,OAAOlC,KAAKgxF,aAEhB5uF,IAAK,SAAU7B,GACXP,KAAKgxF,YAAczwF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,eAKrCuC,IAAK,WACD,OAAOlC,KAAKixF,aAEhB7uF,IAAK,SAAU7B,GACXP,KAAKixF,YAAc1wF,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,QAoBrCuC,IAAK,WAID,OAH6B,IAAxBlC,KAAKgwF,SAAS1mF,YAA8C,IAAxBtJ,KAAKgwF,SAAS1mF,OAAmD,IAAzBtJ,KAAKgwF,SAASzmF,SAC3FvJ,KAAKgwF,SAAWhwF,KAAKkxF,WAElBlxF,KAAKgwF,UAKhB5tF,IAAK,SAAU7B,GACXP,KAAKgwF,SAAWzvF,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,cACrCuC,IAAK,WACD,OAAOlC,KAAKmxF,YAEhB/uF,IAAK,SAAU7B,GACXP,KAAKmxF,WAAa5wF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe0mF,EAAQhpF,UAAW,gBACrCuC,IAAK,WACD,OAAOlC,KAAKotE,cAEhB/qE,YAAY,EACZC,cAAc,IAElBqmF,EAAQhpF,UAAUygC,KAAO,SAAU5gB,EAAMC,EAAMC,EAAMC,GACjD,GAAIF,aAAgBJ,QAAgC,IAAfI,EAAKnW,YAAyC,IAAToW,EACtE,OAAO1f,KAAKg/B,WAAWxf,EAAMC,EAAK/M,EAAG+M,EAAK9M,GAEzC,GAAoB,iBAAT8M,GAAqC,iBAATC,QAAqC,IAATC,EACpE,OAAO3f,KAAKg/B,WAAWxf,EAAMC,EAAMC,EAAM,MAExC,GAAID,aAAgBF,QAAoC,IAAfE,EAAKnW,YAAyC,IAAToW,EAC/E,OAAO1f,KAAKg/B,WAAWxf,EAAMC,EAAM,MAElC,GAAIA,aAAgBJ,QAAgC,IAAfI,EAAKnW,OAAyBoW,aAAgBmtD,GACpF,OAAO7sE,KAAKg/B,WAAWxf,EAAMC,EAAK/M,EAAG+M,EAAK9M,EAAG+M,GAE5C,GAAoB,iBAATD,GAAqC,iBAATC,IAAsBC,aAAgBktD,IAA2B,MAARltD,GAAe,CAChH,IAAIrW,EAASkW,EAAKyf,SAAS/Z,WAAW5b,MAAQmW,EAC1CqxC,EAAkB,IAAIvxC,EAAWE,EAAMC,EAAMpW,EAAO,GACxD,OAAOtJ,KAAKg/B,WAAWxf,EAAMsxC,EAAiBnxC,GAE7C,OAAIF,aAAgBF,QAAoC,IAAfE,EAAKnW,OAAyC,kBAAToW,EACxE1f,KAAKg/B,WAAWxf,EAAMC,EAAM,MAG5Bzf,KAAKg/B,WAAWxf,EAAMC,EAAMC,IAO3CipE,EAAQhpF,UAAUuxF,QAAU,WAGxB,IAAK,IAFD3nF,EAAS,EACTD,EAAQtJ,KAAK2J,QAAQL,MAChBpG,EAAI,EAAGA,EAAIlD,KAAKgtF,QAAQ7kF,MAAOjF,IAAK,CAEzCqG,GADUvJ,KAAKgtF,QAAQE,UAAUhqF,GACnBqG,OAElB,IAASrG,EAAI,EAAGA,EAAIlD,KAAKipF,KAAK9gF,MAAOjF,IAAK,CAEtCqG,GADUvJ,KAAKipF,KAAKC,OAAOhmF,GACbqG,OAElB,OAAO,IAAI+V,EAAMhW,EAAOC,IAE5Bo/E,EAAQhpF,UAAUyxF,gBAAkB,SAAUpuB,GACtChjE,KAAKqxF,oBACLrxF,KAAKwwF,cAAcxwF,KAAMgjE,IAGjC2lB,EAAQhpF,UAAU2xF,cAAgB,SAAUtuB,GACpChjE,KAAKuxF,kBACLvxF,KAAKywF,YAAYzwF,KAAMgjE,IAO/B2lB,EAAQhpF,UAAUmlB,OAAS,SAAUynD,GACjC,IAAIjjE,EAAQijE,EAAMh4D,OAAOjL,MACrBC,EAASgjE,EAAMh4D,OAAOhL,OACtBioF,GAAa,EAYjB,QAXkC,IAAvBjlB,EAAMh4D,OAAOjL,OAAgD,IAAvBijE,EAAMh4D,OAAOjL,QAC1DA,EAAQijE,EAAM5rC,KAAK89B,gBAAgBn1D,MAAQijE,EAAMh4D,OAAO7B,EACxD8+E,GAAa,QAEkB,IAAxBjlB,EAAMh4D,OAAOhL,QAAkD,IAAxBgjE,EAAMh4D,OAAOhL,SAC3DA,EAASgjE,EAAM5rC,KAAK89B,gBAAgBl1D,OAASgjE,EAAMh4D,OAAO5B,EAC1D6+E,GAAa,GAEbA,IACAjlB,EAAMh4D,OAAS,IAAIgL,EAAWgtD,EAAMh4D,OAAO7B,EAAG65D,EAAMh4D,OAAO5B,EAAGrJ,EAAOC,IAEjD,IAApBvJ,KAAKipF,KAAK9gF,MAAa,CACvB,IAAIspF,EAAazxF,KAAKipF,KAAKC,OAAO,GAAG1C,MAAMC,QAAQ,GAAGz9D,MACtD,GAA0B,MAAtByoE,EAAWtK,UAAgD,MAA3BsK,EAAWtK,QAAQpnE,MAAkD,IAAlC0xE,EAAWtK,QAAQpnE,KAAKzW,OAChE,MAA1BmoF,EAAWtK,QAAQnnE,KAAgD,IAAjCyxE,EAAWtK,QAAQnnE,IAAI1W,OAAe,CACzE,IAAIoJ,EAAI++E,EAAWtK,QAAQpnE,KAAKzW,MAAQ,EACpCqJ,EAAI8+E,EAAWtK,QAAQnnE,IAAI1W,MAAQ,EACvC,GAAIijE,EAAMh4D,OAAO7B,IAAM46D,GAAWyB,QAAQ9uD,MAAM3W,MAAQ,GAAKijE,EAAMh4D,OAAO5B,IAAM26D,GAAWyB,QAAQ9uD,MAAM3W,MAAQ,EAAG,CAChH,IAAI0lE,EAAW,IAAIzvD,EAAW7M,EAAGC,EAAG3S,KAAKgwF,SAAS1mF,MAAOtJ,KAAKgwF,SAASzmF,QACvEgjE,EAAMh4D,OAASy6D,IAI3BhvE,KAAK2rF,UACL3rF,KAAK4rF,YACL5rF,KAAKotE,aAAeb,EAAMnnD,OAC1BplB,KAAK0xF,aAAenlB,EAAMh4D,OAG1B,OAFe,IAAIg3E,GAAgBvrF,MACZysE,SAASF,IAGpCoc,EAAQhpF,UAAUgsF,QAAU,WAOxB,IAAK,IANDxD,EAAU,EACVmC,EAAU,EACVqH,EAAmB,EACnB7E,EAAkB,EAClB8E,EAAU,EACV5I,EAAWhpF,KAAKgtF,QAAQ7kF,MACnBjF,EAAI,EAAGA,EAAI8lF,EAAU9lF,IAAK,CAC/B,IAAIskF,EAAMxnF,KAAKgtF,QAAQE,UAAUhqF,GACjC0uF,EAAU,EAEV,IAAK,IADDzI,EAAW3B,EAAIhB,MAAMr+E,MAChB0rC,EAAI,EAAGA,EAAIs1C,EAAUt1C,IAAK,CAC/B,IAAI65C,EAAOlG,EAAIhB,MAAMC,QAAQ5yC,GAG7B,GAFA+9C,EAAU/+E,KAAKsV,IAAIypE,EAASlE,EAAKpD,UAE5BoD,EAAKjB,sBAAwBiB,EAAKmE,qBAAuBnE,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,GAAI,CACpG,GAAIoD,EAAKlB,WAAa34C,EAAI2zC,EAAIhB,MAAMr+E,MAChC,MAAM,IAAImO,MAAM,iCAAmCu9B,EAAEj0C,WAAa,WAAasD,EAAEtD,YAErF,GAAI8tF,EAAKpD,QAAUpnF,EAAIlD,KAAKgtF,QAAQ7kF,MAChC,MAAM,IAAImO,MAAM,oCAAsCu9B,EAAEj0C,WAAa,WAAasD,EAAEtD,YAKxF,GAAI8tF,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,EAAG,CAQzC,IAPAnC,EAAUuF,EAAKlB,WACflC,EAAUoD,EAAKpD,QACfqH,EAAmB99C,EACnBi5C,EAAkB5pF,EAClBwqF,EAAKoE,kBAAmB,EACxBpE,EAAKqE,iBAAkB,EAEhB5J,EAAU,GACbwJ,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DjF,EAAIhB,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACzDrK,EAAIhB,MAAMC,QAAQkL,GAAkBrH,QAAUA,EAC9CnC,IAKJ,IAHAwJ,EAAmB99C,EACnBs0C,EAAUuF,EAAKlB,WAERlC,EAAU,GAAG,CAKhB,IAJAwC,IACA9sF,KAAKgtF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQ5yC,GAAGg+C,oBAAqB,EAC9E7xF,KAAKgtF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EAC7FvH,IACOnC,EAAU,GACbwJ,IACA3xF,KAAKgtF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC9FzsF,KAAKgtF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EAC7F1J,IAEJA,EAAUuF,EAAKlB,WACfmF,EAAmB99C,QAGtB,GAAI65C,EAAKlB,WAAa,GAAsB,IAAjBkB,EAAKpD,QAKjC,IAJAnC,EAAUuF,EAAKlB,WACfmF,EAAmB99C,EACnB65C,EAAKoE,kBAAmB,EAEjB3J,EAAU,GACbwJ,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DtE,SAGH,GAAwB,IAApBuF,EAAKlB,YAAoBkB,EAAKpD,QAAU,EAI7C,IAHAA,EAAUoD,EAAKpD,QACfwC,EAAkB5pF,EAEXonF,EAAU,GACbwC,IACA9sF,KAAKgtF,QAAQE,UAAUJ,GAAiBtG,MAAMC,QAAQ5yC,GAAGg+C,oBAAqB,EAC9EvH,KAKhB9C,EAAIwK,eAAiBJ,IAG7BjJ,EAAQhpF,UAAUisF,UAAY,WAC1B,IAAIqG,EAGAN,EAFAO,EAAc,EACdC,EAAc,EAEdrF,EAAkB,EAGtB,GAFAmF,EAAcC,EAAc,EAC5BP,EAAmB7E,EAAkB,EACjC9sF,KAAKqpF,gBAAkBrpF,KAAKuwF,cAE5B,IAAK,IADDvH,EAAWhpF,KAAKipF,KAAK9gF,MAChBjF,EAAI,EAAGA,EAAI8lF,EAAU9lF,IAAK,CAC/B,IAAIskF,EAAMxnF,KAAKipF,KAAKC,OAAOhmF,GAC3BivF,EAAc,EAEd,IAAK,IADDhJ,EAAW3B,EAAIhB,MAAMr+E,MAChB0rC,EAAI,EAAGA,EAAIs1C,EAAUt1C,IAAK,CAC/B,IAAI65C,EAAOlG,EAAIhB,MAAMC,QAAQ5yC,GAG7B,GAFAs+C,EAAct/E,KAAKsV,IAAIgqE,EAAazE,EAAKpD,UAEpCoD,EAAKjB,sBAAwBiB,EAAKmE,qBAC/BnE,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,GAAI,CAC9C,GAAIoD,EAAKlB,WAAa34C,EAAI2zC,EAAIhB,MAAMr+E,MAChC,MAAM,IAAImO,MAAM,kCAAoCu9B,EAAEj0C,WAAa,WAAasD,EAAEtD,YAEtF,GAAI8tF,EAAKpD,QAAUpnF,EAAIlD,KAAKipF,KAAK9gF,MAC7B,MAAM,IAAImO,MAAM,kCAAoCu9B,EAAEj0C,WAAa,WAAasD,EAAEtD,YAEtF,GAAI8tF,EAAKlB,WAAa,GAAKkB,EAAKpD,QAAU,EAAG,CAQzC,IAPA2H,EAAcvE,EAAKlB,WACnB0F,EAAcxE,EAAKpD,QACnBqH,EAAmB99C,EACnBi5C,EAAkB5pF,EAClBwqF,EAAKoE,kBAAmB,EACxBpE,EAAKqE,iBAAkB,EAEhBE,EAAc,GACjBN,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DjF,EAAIhB,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACzDI,IAKJ,IAHAN,EAAmB99C,EACnBo+C,EAAcvE,EAAKlB,WAEZ0F,EAAc,GAAG,CAKpB,IAJApF,IACA9sF,KAAKipF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQ5yC,GAAGg+C,oBAAqB,EACxE7xF,KAAKipF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACvFK,IACOD,EAAc,GACjBN,IACA3xF,KAAKipF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EACxFzsF,KAAKipF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQkL,GAAkBE,oBAAqB,EACvFI,IAEJA,EAAcvE,EAAKlB,WACnBmF,EAAmB99C,QAGtB,GAAI65C,EAAKlB,WAAa,GAAsB,IAAjBkB,EAAKpD,QAKjC,IAJA2H,EAAcvE,EAAKlB,WACnBmF,EAAmB99C,EACnB65C,EAAKoE,kBAAmB,EAEjBG,EAAc,GACjBN,IACAnK,EAAIhB,MAAMC,QAAQkL,GAAkBlF,qBAAsB,EAC1DwF,SAGH,GAAwB,IAApBvE,EAAKlB,YAAoBkB,EAAKpD,QAAU,EAI7C,IAHA4H,EAAcxE,EAAKpD,QACnBwC,EAAkB5pF,EAEXgvF,EAAc,GACjBpF,IACA9sF,KAAKipF,KAAKC,OAAO4D,GAAiBtG,MAAMC,QAAQ5yC,GAAGg+C,oBAAqB,EACxEK,KAKhB1K,EAAIwK,eAAiBG,IAIjCxJ,EAAQhpF,UAAUsuF,oBAAsB,SAAU15E,GAC9C,QAAsB,IAAXA,EAAwB,CAC/BvU,KAAKmuF,aAAc,EAGnB,IAAK,IAFD9yC,EAASr7C,KAAK2J,QAAQykF,iBAAiB75E,EAAOjL,MAAQiL,EAAO7B,GAExDxP,EAAI,EAAGiF,EAAQnI,KAAK2J,QAAQxB,MAAOjF,EAAIiF,EAAOjF,IAInDlD,KAAK2J,QAAQkjF,UAAU3pF,GAAG2qF,YAAcxyC,EAAOn4C,GAC/ClD,KAAKwtF,UAAYnyC,EAAOn4C,GAE5B,GAAuB,MAAnBlD,KAAK8oF,YAA4D,GAAtC9oF,KAAKgpB,MAAMwhE,yBAA8F,GAA1DxqF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAMwhE,wBAAkC,CAC3I,IAAI4H,EAAU,EACVvE,EAAc,EACdwE,EAAcryF,KAAK2J,QAAQxB,MAC3BmqF,EAAuB,EACc,MAArCtyF,KAAK8oF,WAAW9/D,MAAM8gE,kBAAoE,IAAtC9pF,KAAK8oF,WAAW9/D,MAAM8gE,mBACrB,IAA1C9pF,KAAK8oF,WAAW9/D,MAAM8gE,YAAY/pE,MAAuB/f,KAAK8oF,WAAW9/D,MAAM8gE,YAAY7b,aAClGmkB,GAAWpyF,KAAK8oF,WAAW9/D,MAAM8gE,YAAY/pE,WAEK,IAA3C/f,KAAK8oF,WAAW9/D,MAAM8gE,YAAY7pE,OAAwBjgB,KAAK8oF,WAAW9/D,MAAM8gE,YAAY5b,cACnGkkB,GAAWpyF,KAAK8oF,WAAW9/D,MAAM8gE,YAAY7pE,QAGrD,IAAS/c,EAAI,EAAGA,EAAIlD,KAAK8oF,WAAW0D,WAAYtpF,IAC5C2qF,GAAe7tF,KAAK8oF,WAAWtB,IAAIoB,KAAKj/E,QAAQkjF,UAAU7sF,KAAKqwF,gBAAkBntF,GAAGoG,MAExF,IAAK,IAAIuqC,EAAI,EAAGA,EAAI7zC,KAAK2J,QAAQxB,MAAO0rC,IAChC7zC,KAAK2wF,YAAY9D,UAAUh5C,GAAGvqC,MAAQ,GAAKtJ,KAAK2wF,YAAY9D,UAAUh5C,GAAGi6C,gBACzED,GAAe7tF,KAAK2wF,YAAY9D,UAAUh5C,GAAGvqC,MAC7C+oF,KAcR,GAXmD,MAA9CryF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,kBAA4E,IAA9C9pF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,mBAChC,IAAlD9pF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,KAAsBhgB,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY3b,YACnHikB,GAAWpyF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,UAEM,IAArDhgB,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,QAAyBlgB,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY1b,eACtHgkB,GAAWpyF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,SAGZ,GAA9ClgB,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM+gE,cAC/B8D,GAA4D,EAA7C7tF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM+gE,aAE9C8D,EAAcuE,IACdE,GAAwBzE,EAAcuE,GAAWC,EACjDryF,KAAKwtF,UAAY8E,EACM,MAAnBtyF,KAAK8oF,YACL,IAASj1C,EAAI,EAAGA,EAAI7zC,KAAK2J,QAAQxB,MAAO0rC,IAC/B7zC,KAAK2J,QAAQkjF,UAAUh5C,GAAGi6C,gBAC3B9tF,KAAK2J,QAAQkjF,UAAUh5C,GAAGg6C,YAAcyE,QAiB3D,CACGj3C,GAAUr7C,KAAK2J,QAAQxB,OAC3B,IAAK,IAAI9D,EAAI,EAAGA,EAAIrE,KAAK2J,QAAQxB,MAAO9D,IACpCg3C,EAAOh3C,GAAK,EAEhB,IAAIojF,EAAY,EAKhB,SAHiC,IAArBznF,KAAK+oF,kBAA4D,IAAtB/oF,KAAK0xF,cAAuD,OAArB1xF,KAAK+oF,kBAAqD,IAAtB/oF,KAAK0xF,gBACnI1xF,KAAKkuF,aAAeluF,KAAK0xF,aAAapoF,OAEtCtJ,KAAKgtF,QAAQ7kF,MAAQ,EAGhB,CAAA,IAFDoqF,EAAavyF,KAAKgtF,QAAQE,UAAU,GAAG1G,MAAMr+E,MAC7C6gF,EAAWhpF,KAAKgtF,QAAQ7kF,MAC5B,IAASjF,EAAI,EAAGA,EAAIqvF,EAAYrvF,IAAK,CACjCukF,EAAY,EACZ,IAAS5zC,EAAI,EAAGA,EAAIm1C,EAAUn1C,IAAK,CAC/B,IAAI46C,EAAW57E,KAAKJ,IAAIzS,KAAKkuF,aAAcluF,KAAKgtF,QAAQE,UAAUr5C,GAAG2yC,MAAMC,QAAQvjF,GAAGoG,OACtFm+E,EAAY50E,KAAKsV,IAAIs/D,EAAWgH,GAEpCpzC,EAAOn4C,GAAKukF,GAepBA,EAAY,EACHvkF,EAAI,EAAb,IAAK,IAAWsvF,EAAaxyF,KAAK2J,QAAQxB,MAAOjF,EAAIsvF,EAAYtvF,IAAK,CAClE,IAAS2wC,EAAI,EAAGm1C,EAAWhpF,KAAKipF,KAAK9gF,MAAO0rC,EAAIm1C,EAAUn1C,IACtD,GAAwD,GAAnD7zC,KAAKipF,KAAKC,OAAOr1C,GAAG2yC,MAAMC,QAAQvjF,GAAGspF,aAAoBxsF,KAAKipF,KAAKC,OAAOr1C,GAAG2yC,MAAMC,QAAQvjF,GAAGupF,qBAAsE,MAA9CzsF,KAAKipF,KAAKC,OAAOr1C,GAAG2yC,MAAMC,QAAQvjF,GAAG3C,MAAe,CAC3K,GAAkD,MAA9CP,KAAKipF,KAAKC,OAAOr1C,GAAG2yC,MAAMC,QAAQvjF,GAAG3C,QAAkBP,KAAKipF,KAAKC,OAAOr1C,GAAG+0C,KAAK5/D,MAAMwhE,wBAC1ExqF,KAAKipF,KAAKC,OAAOr1C,GAAG+0C,KAAK5/D,MAAM8gE,YAAY7pE,MACnDjgB,KAAKipF,KAAKC,OAAOr1C,GAAG+0C,KAAK5/D,MAAM8gE,YAAY/pE,KACzC/f,KAAKipF,KAAKC,OAAOr1C,GAAG2yC,MAAMC,QAAQvjF,GAAG8lB,MAAMm+D,QAAQpnE,KAAKzW,MAI9DmlF,EAAW,EACfA,EAAWzuF,KAAKkuF,aAAe,EAAMr7E,KAAKJ,IAAIzS,KAAKkuF,aAAcluF,KAAKipF,KAAKC,OAAOr1C,GAAG2yC,MAAMC,QAAQvjF,GAAGoG,OAAStJ,KAAKipF,KAAKC,OAAOr1C,GAAG2yC,MAAMC,QAAQvjF,GAAGoG,MAapJm+E,EAAY50E,KAAKsV,IAAIkzB,EAAOn4C,GAAI2P,KAAKsV,IAAIs/D,EAAWgH,IACpDhH,EAAY50E,KAAKsV,IAAInoB,KAAK2J,QAAQkjF,UAAU3pF,GAAGoG,MAAOm+E,GAGvC,GAAnBznF,KAAKipF,KAAK9gF,QACVkzC,EAAOn4C,GAAKukF,GAChBA,EAAY,EAEPvkF,EAAI,EAAb,IAAK,IAAWuvF,EAAWzyF,KAAKipF,KAAK9gF,MAAOjF,EAAIuvF,EAAUvvF,IACjD,CAAI2wC,EAAI,EAAb,IAAK,IAAW6+C,EAAW1yF,KAAK2J,QAAQxB,MAAO0rC,EAAI6+C,EAAU7+C,IACzD,GAAI7zC,KAAKipF,KAAKC,OAAOhmF,GAAGsjF,MAAMC,QAAQ5yC,GAAG24C,WAAa,EAE7C,CADOnxC,EAAOxH,GACnB,IAAK,IAAIpzC,EAAI,EAAGA,EAAIT,KAAKipF,KAAKC,OAAOhmF,GAAGsjF,MAAMC,QAAQ5yC,GAAG24C,WAAY/rF,IACxD46C,EAAOxH,EAAIpzC,IAgBpC,IAASyC,EAAI,EAAGiF,EAAQnI,KAAK2J,QAAQxB,MAAOjF,EAAIiF,EAAOjF,IAC/ClD,KAAK2J,QAAQkjF,UAAU3pF,GAAGoG,OAAS,EACnCtJ,KAAK2J,QAAQkjF,UAAU3pF,GAAG2qF,YAAcxyC,EAAOn4C,GAC1ClD,KAAK2J,QAAQkjF,UAAU3pF,GAAGoG,MAAQ,IAAMtJ,KAAK2J,QAAQkjF,UAAU3pF,GAAG4qF,gBACvE9tF,KAAK2J,QAAQkjF,UAAU3pF,GAAG2qF,YAAcxyC,EAAOn4C,IAEnDkvF,EAAU,EAAd,IACIO,EAAW,EACXxJ,EAAWnpF,KAAK2J,QAAQxB,MACxByqF,EAAoB,EACxBD,EAAW3yF,KAAKwtF,UAChB,IAAS35C,EAAI,EAAGA,EAAI7zC,KAAK2J,QAAQxB,MAAO0rC,IAChC7zC,KAAK2wF,YAAY9D,UAAUh5C,GAAGvqC,MAAQ,GAAKtJ,KAAK2wF,YAAY9D,UAAUh5C,GAAGi6C,gBACzE6E,GAAY3yF,KAAK2wF,YAAY9D,UAAUh5C,GAAGvqC,MAC1C6/E,KAWR,GALIwJ,EAAW,GACuC,GAA9C3yF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM+gE,cAC/B4I,GAAyD,EAA7C3yF,KAAK8oF,WAAWtB,IAAIoB,KAAK5/D,MAAM+gE,aAG/C4I,EAAWP,IACXQ,EAAoB,EAAazJ,EACV,MAAnBnpF,KAAK8oF,YACL,IAASj1C,EAAI,EAAGA,EAAI7zC,KAAK2J,QAAQxB,MAAO0rC,IAC/B7zC,KAAK2J,QAAQkjF,UAAUh5C,GAAGi6C,gBAC3B9tF,KAAK2J,QAAQkjF,UAAUh5C,GAAGg6C,YAAc+E,KAMzDjK,GACTla,IC5uBE75D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GA2BxCm2E,GAAiC,SAAU/1E,GAO3C,SAAS+1E,EAAgBze,GACrB,IAAIp3D,EAAQF,EAAO3V,KAAKG,KAAM8sE,IAAe9sE,KAoE7C,OA/DA0V,EAAMo7E,iBAAmB,EAKzBp7E,EAAMs6E,SAAW,IAAI1wE,EAAM,EAAG,GAC9B5J,EAAM26E,gBAAkB,EACxB36E,EAAM83E,UAAY,EAClB93E,EAAMm9E,YAAc,EAKpBn9E,EAAMqzE,aAAc,EAKpBrzE,EAAM2zE,gBAAiB,EAKvB3zE,EAAMw6E,cAAe,EAKrBx6E,EAAMy6E,WAAa,IAAI5wE,EAKvB7J,EAAM06E,uBAKN16E,EAAMo9E,MAAO,EAKbp9E,EAAMq9E,gBAKNr9E,EAAMs9E,gBAAkB,IAAI3zE,EAAO,EAAG,GAKtC3J,EAAM46E,UAAW,EACjB56E,EAAMu9E,IAAM,KACZv9E,EAAMu6D,cAAgB,KACtBv6D,EAAMw9E,YAAa,EAMnBx9E,EAAMmP,wBAAyB,EACxBnP,EAo0CX,OA/4CAd,GAAU22E,EAAiB/1E,GA6E3B9V,OAAOuC,eAAespF,EAAgB5rF,UAAW,QAE7CuC,IAAK,WACD,OAAOlC,KAAKsT,UAEhBjR,YAAY,EACZC,cAAc,IAwDlBipF,EAAgB5rF,UAAUwzF,UAAY,SAAU/tE,GAE5C,OADQA,GAOZmmE,EAAgB5rF,UAAU6sE,eAAiB,SAAUD,GACjD,IAAInnD,EAASplB,KAAKmzF,UAAU5mB,EAAMnnD,QAGlC,GAFAplB,KAAKozF,iBAAmBpzF,KAAKmzF,UAAU5mB,EAAMnnD,QAC7CplB,KAAK4gC,YAAc2rC,EAAM5rC,KACA,OAArB3gC,KAAK4gC,YAML,MAAMtqB,MAAM,4BALKtW,KAAK4gC,YAAY69B,gBAAgBl1D,OAClCvJ,KAAK4gC,YAAY69B,gBAAgBn1D,MACjDtJ,KAAKqzF,kBAAoBrzF,KAAK4gC,YAAY69B,gBAM9Cz+D,KAAKszF,gBAAkBtzF,KAAK4gC,YAAY3B,SAWxC,IAAIzvB,EAAQ,EAUZ,GATAA,EAAQxP,KAAKszF,gBAAgB3yD,KAAK2xB,QAAQhvD,QAAQtD,KAAKszF,gBAAgB3yD,MACvE3gC,KAAKowF,oBAAoBlvF,KAAKsO,GAChB,MAAV4V,GAAkBA,EAAO2nD,QAAU9kB,qBAAmBsrC,iBACtDvzF,KAAKkvE,cAAgB,IAAI3vD,EAAW,IAAIF,EAAOktD,EAAMh4D,OAAO7B,EAAG65D,EAAMh4D,OAAO5B,GAAI,IAAI2M,EAAMtf,KAAKwzF,KAAK7pF,QAAQL,MAAOtJ,KAAKszF,gBAAgBpuE,WAAW3b,SAGnJvJ,KAAKkvE,cAAgB,IAAI3vD,EAAW,IAAIF,EAAOktD,EAAMh4D,OAAO7B,EAAG65D,EAAMh4D,OAAO5B,GAAI3S,KAAKszF,gBAAgBpuE,YAG5E,IAAzBllB,KAAKwzF,KAAKvK,KAAK9gF,MACfnI,KAAKkvE,cAAc5lE,MAASijE,EAAMh4D,OAAOjL,MAAQ,EAAKijE,EAAMh4D,OAAOjL,MAC9DtJ,KAAKkvE,cAAc5lE,MAAQtJ,KAAKwzF,KAAKvK,KAAKC,OAAO,GAAG1C,MAAMC,QAAQ,GAAGz9D,MAAMm+D,QAAQpnE,KAAKzW,MAAQ,MAEpG,CAAA,GAAgC,IAA5BtJ,KAAKwzF,KAAKxG,QAAQ7kF,MAMvB,MAAMmO,MAAM,sCAHZtW,KAAKkvE,cAAc5lE,MAAQijE,EAAMh4D,OAAOjL,MAsC5C,GAjCAtJ,KAAKyzF,cAAgB,IAAIp0E,EAAOktD,EAAMh4D,OAAO7B,EAAG65D,EAAMh4D,OAAO5B,GAazD45D,EAAMh4D,OAAOhL,OAAS,IAAMvJ,KAAKwzF,KAAKzK,cACtC/oF,KAAKkvE,cAAc3lE,OAASgjE,EAAMh4D,OAAOhL,QAExCvJ,KAAKwzF,KAAKzK,cACX/oF,KAAK0zF,MAAQ1zF,KAAKwzF,KAAKxqE,MAAM2qE,wBAE5B3zF,KAAKwzF,KAAKxqE,MAAMwhE,yBAWjBxqF,KAAKwzF,KAAKvF,sBACVjuF,KAAK4zF,8BAXL5zF,KAAK+yF,qBACgC,IAA1B/yF,KAAKwzF,KAAKzK,cAAsC/oF,KAAKwzF,KAAKzK,YAAjB,GAChD/oF,KAAKwzF,KAAKvF,oBAAoBjuF,KAAKkvE,eAGnClvE,KAAKwzF,KAAKvF,oBAAoB,IAAI1uE,EAAWvf,KAAKkvE,cAAcx8D,EAAG1S,KAAKkvE,cAAcv8D,EAAG3S,KAAKkvE,cAAcx8D,EAAI1S,KAAKkvE,cAAc5lE,MAAOtJ,KAAKkvE,cAAc3lE,SAEjKvJ,KAAK+yF,aAAa7xF,MAAM,EAAGlB,KAAKwzF,KAAK7pF,QAAQxB,MAAQ,KAMrDnI,KAAKwzF,KAAKnK,eACV,IAAK,IAAInmF,EAAI,EAAGA,EAAIlD,KAAKwzF,KAAKvK,KAAK9gF,MAAOjF,KACG,IAArClD,KAAKwzF,KAAKvK,KAAKC,OAAOhmF,GAAGqG,QAAkBvJ,KAAKwzF,KAAKvK,KAAKC,OAAOhmF,GAAG2rF,iBACpE7uF,KAAKwzF,KAAKvK,KAAKC,OAAOhmF,GAAG2rF,gBAAiB,GAKtD,OADa7uF,KAAKsvE,aAAa/C,IAQnCgf,EAAgB5rF,UAAUi0F,0BAA4B,WAKlD,IAAK,IAJDC,EAAc,EACdC,EAAY,EACZC,EAAa,EACbC,EAAiBh0F,KAAKszF,gBAAgBpuE,WAAW5b,MAAQtJ,KAAKkvE,cAAcx8D,EACvExP,EAAI,EAAGA,EAAIlD,KAAKwzF,KAAK7pF,QAAQxB,MAAOjF,IAEzC,IADA6wF,GAAc/zF,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,QAC3B0qF,EAAgB,CAE9B,IAAK,IADDC,EAAY,EACPpgD,EAAIggD,EAAahgD,GAAK3wC,MAC3B+wF,GAAaj0F,KAAKwzF,KAAK7pF,QAAQkjF,UAAUh5C,GAAGvqC,OAC5B0qF,GAFcngD,IAK9BigD,EAAYjgD,EAEhB7zC,KAAK+yF,aAAa7xF,MAAM2yF,EAAaC,IAGrCC,GADAD,EADAD,EAAcC,EAAY,IAEC5wF,EAAKlD,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,MAAQ,EAI/EtJ,KAAK+yF,aAAa7xF,MAAM2yF,EAAa7zF,KAAKwzF,KAAK7pF,QAAQxB,MAAQ,KAOnEojF,EAAgB5rF,UAAU2vE,aAAe,SAAU/C,GAE/CvsE,KAAKmwF,WAAWz9E,EAAI65D,EAAMh4D,OAAO7B,EACjC1S,KAAKmwF,WAAWx9E,EAAI45D,EAAMh4D,OAAO5B,EACjC3S,KAAKmwF,WAAW5mF,OAASgjE,EAAMh4D,OAAOhL,OAQtC,IAAK,IAPD6b,EAASplB,KAAKmzF,UAAU5mB,EAAMnnD,QAE9BniB,EAAS,KACTixF,EAAgB,IAAI91D,GACpB+1D,EAAY5nB,EAAM5rC,KAElByzD,KACK5kF,EAAQ,EAAGA,EAAQxP,KAAK+yF,aAAa/xF,OAAQwO,IAAS,CAC3D,IAAI/B,EAAQzN,KAAK+yF,aAAavjF,GAC9BxP,KAAKq0F,eAAiB5mF,EAAM,GAC5BzN,KAAKs0F,aAAe7mF,EAAM,GAC1B,IAAI8mF,EAAev0F,KAAKw0F,sBAAsBx0F,KAAK4gC,YAAa5gC,KAAKkvE,cAAelvE,KAAK8sF,iBACzF9sF,KAAKkvE,cAAgBqlB,EAAarlB,cAClClvE,KAAK8sF,gBAAkByH,EAAazH,gBAOpC,IAAK,IADD2H,OAAa,EACRt7C,EAAM,EAAGA,EAAMn5C,KAAKwzF,KAAKxG,QAAQ7kF,MAAOgxC,IAAO,CACpD,IAAIquC,EAAMxnF,KAAKwzF,KAAKxG,QAAQE,UAAU/zC,GAClCu7C,EAAe10F,KAAKkvE,cAAcv8D,EAEtC,GADA3S,KAAKssF,UAAW,EACZ6H,GAAan0F,KAAK4gC,YAClB,IAAK,IAAIngC,EAAIT,KAAKq0F,eAAgB5zF,GAAKT,KAAKs0F,aAAc7zF,IAClD+mF,EAAIhB,MAAMC,QAAQhmF,GAAGgsF,sBACrBjF,EAAIhB,MAAMC,QAAQhmF,GAAGgsF,qBAAsB,EAC3CjF,EAAIhB,MAAMC,QAAQhmF,GAAGF,MAAQ,IAKzC,IAAIo0F,EAAe30F,KAAK40F,QAAQpN,GAC5BkN,IAAiB10F,KAAKkvE,cAAcv8D,GACpC8hF,GAAa,GAC2B,IAApClJ,EAAgBsJ,iBAChBtJ,EAAgBsJ,eAAiB17C,IAIrCs7C,GAAa,GAEZE,EAAa1M,UAA0B,OAAdkM,GACvB/uE,EAAON,SAAWkjC,gBAAc8sC,SAAWL,IAC9Cz0F,KAAKyzF,cAAc/gF,EAAI1S,KAAKkvE,cAAcx8D,EAC1C1S,KAAK4gC,YAAc5gC,KAAK+0F,kBAAkB3vE,GAC1CplB,KAAKyzF,cAAc9gF,EAAI3S,KAAKkvE,cAAcv8D,OACL,IAA1ByS,EAAOwnD,gBAA8D,IAA5BxnD,EAAOwnD,eAAel6D,GAAuC,IAA5B0S,EAAOwnD,eAAej6D,GAA2C,IAAhCyS,EAAOwnD,eAAetjE,OAAgD,IAAjC8b,EAAOwnD,eAAerjE,SAC7KvJ,KAAKkvE,cAAcx8D,GAAK1S,KAAKyzF,cAAc/gF,GAC/C1S,KAAK40F,QAAQpN,IAEjBxnF,KAAKssF,UAAW,EAEpB,IAAIppF,EAAI,EAEJ8xF,GADWh1F,KAAKwzF,KAAKvK,KAAK9gF,WACd,GAEZ2qF,GAAO,EAEXsB,KAEA,IAAK,IAAIvgD,EAAI,EAAGA,EAAI7zC,KAAKwzF,KAAKvK,KAAK9gF,MAAO0rC,IAAK,CACvC2zC,EAAMxnF,KAAKwzF,KAAKvK,KAAKC,OAAOr1C,GAChC3wC,IACAlD,KAAK8sF,gBAAkB5pF,EAAI,EAC3B,IAAI+xF,EAAiBj1F,KAAKkvE,cAAcv8D,EACxCwhF,EAAYn0F,KAAK4gC,YACjB2qD,EAAgBsJ,gBAAkB,EAC9B/B,GAAQtL,EAAIoB,KAAKG,cACjB+J,GACO,GAEX,IAAIoC,EAAY,KA0BhB,IAAqC,GAAjCl1F,KAAKwzF,KAAKtI,mBACVgK,EAAYl1F,KAAK40F,QAAQpN,GACzBA,EAAIkH,aAAc,MAEjB,CACD,KAAIlH,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKqH,aAAejwF,KAAKwzF,KAAKtI,oBAAsB1D,EAAI2N,UAI/E,CAAA,GAAI3N,EAAIkH,YACT,SAGA,MAPAwG,EAAYl1F,KAAK40F,QAAQpN,GACzBA,EAAIkH,aAAc,EAwE1B,IA9DA0F,EAAWlzF,KAAKg0F,EAAU3gF,OAAOjL,OAsD7B2rF,IAAmBj1F,KAAKkvE,cAAcv8D,GACtCqiF,GAAY,EACZzJ,EAAgBsJ,eAAiB70F,KAAKwzF,KAAKvK,KAAK8D,cAAczpF,QAAQkkF,KAGtEwN,GAAY,EACZzJ,EAAgBsJ,gBAAkB,IAE9BK,EAAUjN,UAAyB,MAAbkM,GAAmB,CAC7C,IAAIiB,EAAap1F,KAAKuvE,kBAoCtB,GADUvvE,KAAKq1F,kBAAkBD,GACrBE,QAAUN,EAClB,MACC,GAAIh1F,KAAKwzF,KAAKxI,yBAA0B,CAEzChrF,KAAK4gC,YAAc5gC,KAAK+0F,kBAAkB3vE,GAC1C6vE,EAAiBj1F,KAAKkvE,cAAcv8D,EACpC,IAAI0tB,EAAa,IAAIhhB,EAAOiuD,GAAWyB,QAAQ9uD,MAAM3W,MAAQ,EAAGgkE,GAAWyB,QAAQ/uD,IAAI1W,MAAQ,GAiB/F,GAhBiC,IAA5B8b,EAAOwnD,eAAel6D,GAAuC,IAA5B0S,EAAOwnD,eAAej6D,GAA2C,IAAhCyS,EAAOwnD,eAAetjE,OACxD,IAAjC8b,EAAOwnD,eAAerjE,QAAkBvJ,KAAKyzF,cAAc/gF,IAAM2tB,EAAW3tB,GAAK1S,KAAKyzF,cAAc9gF,IAAM0tB,EAAW1tB,IACrH3S,KAAKkvE,cAAcx8D,GAAK1S,KAAKyzF,cAAc/gF,EAC3C1S,KAAKkvE,cAAcv8D,GAAK3S,KAAKyzF,cAAc9gF,GAE3C3S,KAAKkzF,aACLlzF,KAAKyzF,cAAc9gF,EAAI3S,KAAKkvE,cAAcv8D,EAC1C3S,KAAKkzF,YAAa,GAElBlzF,KAAKwzF,KAAKzK,aAAsC,MAAvBvB,EAAIoB,KAAKE,YACqB,MAAnD9oF,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,aAChCtC,EAAIuE,eAAiB/rF,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,IAAMhgB,KAAKkvE,cAAc3lE,SAC9FvJ,KAAKkvE,cAAcv8D,EAAI3S,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,KAIxD,MAAvBwnE,EAAIoB,KAAKE,WAAoB,CAC7BtB,EAAIoB,KAAKE,WAAWtB,IAAI+N,qBAAsB,EAC9C/N,EAAIoB,KAAKE,WAAWtB,IAAIsE,oBAAsBtE,EAAIuE,eAAiB/rF,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,IAAMhgB,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,OACzK,IAAK,IAAIs1E,EAAMhO,EAAI2N,SAAW,EAAGK,EAAMhO,EAAIoB,KAAKK,KAAK9gF,MAAOqtF,IACxDhO,EAAIoB,KAAKE,WAAWtB,IAAIsE,qBAAuBtE,EAAIoB,KAAKK,KAAKC,OAAOsM,GAAKjsF,OA6BjF,GAAIi+E,EAAIoB,KAAKG,YAAa,CAEtBvB,EAAIkH,aAAc,EAElBlH,EAAIoB,KAAKsC,mBAAqB1D,EAAI2N,SAClC3N,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKsC,mBAAqB1D,EAAIoB,KAAKE,WAAWtB,IAAI2N,SACtE3N,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKqH,cAC7BzI,EAAIoB,KAAKE,WAAWtB,IAAIoH,eAAiB,EACzCpH,EAAIoB,KAAKE,WAAWtB,IAAIoB,KAAKqH,aAAc,GAE/C,MAEJ,GAAIzI,EAAIoH,cAAgB,EAAG,CAIvB,IAHoC,GAAhCpH,EAAIoB,KAAKsC,qBACT1D,EAAIoB,KAAKqH,aAAc,GAEH,MAApBzI,EAAIx+D,MAAMqmE,SAA6C,MAAzB7H,EAAIx+D,MAAMqmE,OAAOtvE,MAAgD,IAAhCynE,EAAIx+D,MAAMqmE,OAAOtvE,KAAKzW,OACzD,MAAxBk+E,EAAIx+D,MAAMqmE,OAAOrvE,KAA8C,IAA/BwnE,EAAIx+D,MAAMqmE,OAAOrvE,IAAI1W,OAAe,CACxE,IAAIoJ,EAAI80E,EAAIx+D,MAAMqmE,OAAOtvE,KAAKzW,MAAQ,EAClCqJ,EAAI60E,EAAIx+D,MAAMqmE,OAAOrvE,IAAI1W,MAAQ,EACrC,GAAItJ,KAAKkvE,cAAcx8D,IAAM46D,GAAWyB,QAAQ9uD,MAAM3W,MAAQ,GAAKtJ,KAAKkvE,cAAcv8D,IAAM26D,GAAWyB,QAAQ9uD,MAAM3W,MAAQ,EAAG,CAC5H,IAAI0lE,EAAW,IAAIzvD,EAAW7M,EAAGC,EAAG3S,KAAKkvE,cAAc5lE,MAAOtJ,KAAKkvE,cAAc3lE,QACjFvJ,KAAKkvE,cAAgBF,GAG7B,GAAIhvE,KAAKwzF,KAAKiC,aACV,IAAK,IAAIC,EAAM,EAAGA,EAAM11F,KAAKwzF,KAAKxG,QAAQ7kF,MAAOutF,IAAO,CACpD,IAAIC,EAAe31F,KAAKwzF,KAAKxG,QAAQE,UAAUwI,GAC/C11F,KAAK40F,QAAQe,GAIrB,GADAT,EAAYl1F,KAAK40F,QAAQpN,GACrBA,EAAIoH,eAAiB,EAEhB,CADMpH,EAAIsE,oBACf,IAAK,IAAI8J,EAAM,EAAGA,EAAMpO,EAAIoH,cAAegH,IAAO,CAE9C,IAAIC,EAAc71F,KAAKuvE,kBASvB,GARUvvE,KAAKq1F,kBAAkBQ,GACjC71F,KAAK4gC,YAAc5gC,KAAK+0F,kBAAkB3vE,GAC1C6vE,EAAiBj1F,KAAKkvE,cAAcv8D,GAEA,GAAhC60E,EAAIoB,KAAKsC,qBACT1D,EAAIoB,KAAKqH,aAAc,GAE3BjwF,KAAKkvE,cAAcv8D,EAAI,GACnB3S,KAAKwzF,KAAKiC,aACV,IAAK,IAAIK,EAAM,EAAGA,EAAM91F,KAAKwzF,KAAKxG,QAAQ7kF,MAAO2tF,IAAO,CACpD,IAAIrxF,EAASzE,KAAKwzF,KAAKxG,QAAQE,UAAU4I,GACzC91F,KAAK40F,QAAQnwF,GAIrBzE,KAAK40F,QAAQpN,IAMrBA,EAAIoB,KAAKsC,oBAAsB,EAC/B1D,EAAIoB,KAAKqH,aAAc,EACvBiF,EAAUjN,SAAWjoF,KAAK+1F,gBAAgBvO,GAG1C,IAAK,IAAIwO,EAAM,EAAGA,EAAMxO,EAAIhB,MAAMr+E,MAAO6tF,IACjCxO,EAAIhB,MAAMC,QAAQuP,GAAKz1F,iBAAiBooF,KACxCnB,EAAIhB,MAAMC,QAAQuP,GAAKz1F,MAAM2qF,oBAAsB,KAavE,IAAKgK,EAAUjN,UAA0B,OAAdkM,GAAsB/uE,EAAON,SAAWkjC,gBAAc8sC,SAAWE,EAAW,CA2CnG,GAzCAh1F,KAAKyzF,cAAc/gF,EAAI1S,KAAKkvE,cAAcx8D,EAC1C1S,KACK4gC,YAAc5gC,KAAK+0F,kBAAkB3vE,GAuCtCplB,KAAKw0F,sBAAsBx0F,KAAK4gC,YAAa5gC,KAAKkvE,cAAelvE,KAAK8sF,iBAAiBxyD,YACvF,MA8BJ,GA5BsB,OAAjBiyC,EAAMnnD,SAAqBmnD,EAAMnnD,OAAOunD,mBAAsC,OAAjBJ,EAAMh4D,QACpEg4D,EAAMh4D,OAAOhL,OAAS,IAAMvJ,KAAKwzF,KAAKzK,cACtC/oF,KAAKkvE,cAAc3lE,OAASgjE,EAAMh4D,OAAOhL,aAEjB,IAAjBgjE,EAAMnnD,QAA0C,MAAhBmnD,EAAMnnD,aAA4D,IAAnCmnD,EAAMnnD,OAAOunD,mBAAsCJ,EAAMnnD,OAAOunD,mBAAyD,IAAlCJ,EAAMnnD,OAAOwnD,eAAel6D,GAA6C,IAAlC65D,EAAMnnD,OAAOwnD,eAAej6D,GAAiD,IAAtC45D,EAAMnnD,OAAOwnD,eAAetjE,OAAsD,IAAvCijE,EAAMnnD,OAAOwnD,eAAerjE,QAAmD,IAAlCgjE,EAAMnnD,OAAOwnD,eAAej6D,GAI/V3S,KAAKkvE,cAAcv8D,EAAc,MAAVyS,EAAiB,EAAIA,EAAOwnD,eAAej6D,EACpD,MAAVyS,GAA+C,IAA5BA,EAAOwnD,eAAel6D,GAAuC,IAA5B0S,EAAOwnD,eAAej6D,GAA4C,IAAjCyS,EAAOwnD,eAAerjE,QAAgD,IAAhC6b,EAAOwnD,eAAetjE,QACjJtJ,KAAKkvE,cAAcx8D,EAAI0S,EAAOwnD,eAAel6D,EAC7C1S,KAAKkvE,cAAc5lE,MAAQ8b,EAAOwnD,eAAetjE,MACjDtJ,KAAKkvE,cAAc3lE,OAAS6b,EAAOwnD,eAAerjE,SAPtDvJ,KAAKkvE,cAAcv8D,EAAI26D,GAAWyB,QAAQ/uD,IAAI1W,MAAQ,OAU9B,IAAjBijE,EAAMnnD,QAA4C,OAAjBmnD,EAAMnnD,aAA8D,IAAnCmnD,EAAMnnD,OAAOunD,oBAAsCJ,EAAMnnD,OAAOunD,mBAAsC,OAAjBJ,EAAMh4D,QACpKg4D,EAAMh4D,OAAO5B,EAAI,IAAM3S,KAAKwzF,KAAKzK,cACjC/oF,KAAKkvE,cAAcv8D,EAAI45D,EAAMh4D,OAAO5B,GAExC3S,KAAKyzF,cAAc9gF,EAAI3S,KAAKkvE,cAAcv8D,EACrCyS,EAAOwnD,eAAel6D,IAAM0S,EAAOwnD,eAAej6D,GAClDyS,EAAOwnD,eAAej6D,IAAMyS,EAAOwnD,eAAerjE,QAClD6b,EAAOwnD,eAAerjE,SAAW6b,EAAOwnD,eAAetjE,OAA2C,IAAhC8b,EAAOwnD,eAAetjE,QACzFtJ,KAAKkvE,cAAcx8D,GAAK1S,KAAKyzF,cAAc/gF,GAE3C1S,KAAKkvE,cAAcx8D,IAAM46D,GAAWyB,QAAQhvD,KAAKzW,MAAQ,IACzDtJ,KAAKkvE,cAAcv8D,GAAK3S,KAAKyzF,cAAc/gF,GAE3C1S,KAAKwzF,KAAKiC,aACV,IAAK,IAAIQ,EAAM,EAAGA,EAAMj2F,KAAKwzF,KAAKxG,QAAQ7kF,MAAO8tF,IAAO,CAChDxxF,EAASzE,KAAKwzF,KAAKxG,QAAQE,UAAU+I,GACzCj2F,KAAK40F,QAAQnwF,GAGrBzE,KAAK40F,QAAQpN,GACY,OAArBxnF,KAAK4gC,aAAyBszD,EAAc1yF,YAAYxB,KAAK4gC,cAC7DszD,EAAczgF,IAAIzT,KAAK4gC,YAAanzB,GAG5C,GAAkC,MAA9B+5E,EAAIwE,uBAAgC,CAEpChsF,KAAK4gC,YAAc4mD,EAAIwE,uBAAuBrrD,KAC9C3gC,KAAKszF,gBAAkBtzF,KAAK4gC,YAAY3B,SACxCj/B,KAAKyzF,cAAgB,IAAIp0E,EAAOmoE,EAAIwE,uBAAuBz3E,OAAO7B,EAAG80E,EAAIwE,uBAAuBz3E,OAAO5B,GACvG,IAAIujF,EAAcl2F,KAAKm2F,kBAAkB3O,EAAKA,EAAIwE,uBAAuBz3E,OAAOhL,QAGhF,GAFAvJ,KAAKkvE,cAAcv8D,EAAIujF,EAEnB/B,GAAan0F,KAAK4gC,YAAa,CAI/B,IAAK,IAHDw1D,EAASp2F,KAAK4gC,YAAY0xB,QAC1B+jC,EAAaD,EAAO9yF,QAAQ6wF,GAAa,EACzCmC,EAAWF,EAAO9yF,QAAQtD,KAAK4gC,aAC1BD,EAAO01D,EAAY11D,EAAO21D,EAAW,EAAG31D,IAAQ,CACrD,IAAI41D,EAAev2F,KAAK4gC,YAAY3B,SAChCu3D,EAAa,IAAIn3E,EAAO+F,EAAOwnD,eAAel6D,EAAG0S,EAAOwnD,eAAej6D,GACvEpJ,EAASo3B,GAAQ21D,EAAY9O,EAAIwE,uBAAuBz3E,OAAOhL,OAASgjE,EAAMh4D,OAAO5B,EACpF3S,KAAKkvE,cAAc3lE,OAASitF,EAAW7jF,EACxCpJ,GAAUgtF,EAAarxE,WAAW3b,SAClCA,GAAUgjE,EAAMh4D,OAAO5B,GAG3B6jF,EAAW7jF,EAAc,MAAVyS,EAAiB,GAAMA,EAAOwnD,eAAej6D,EAE5D,IAAK,IAAIpP,EAAI,EAAGA,EAAIikF,EAAIhB,MAAMr+E,MAAO5E,IAAK,CACtC,IAAImqF,EAAOlG,EAAIhB,MAAMC,QAAQljF,GACzBkkF,EAAY,EACZgP,EAAa,EACjB,GAAI/I,EAAKntF,iBAAiBooF,GACtB,IAAK,IAAI+N,EAAM,EAAGA,EAAMhJ,EAAKntF,MAAMoJ,QAAQxB,MAAOuuF,IAC9CD,GAAc/I,EAAKntF,MAAMoJ,QAAQkjF,UAAU6J,GAAK7I,iBAIpD4I,EAAa/I,EAAKpkF,MAQtBm+E,EAAY50E,KAAKsV,IAAIsuE,EAAYjP,EAAIoB,KAAKj/E,QAAQkjF,UAAUtpF,GAAG+F,OAC/DokF,EAAKxB,gBAAgBqK,EAAc,IAAIh3E,EAAWi3E,EAAY,IAAIl3E,EAAMmoE,EAAWl+E,KACnFitF,EAAW9jF,GAAK+0E,EAChBlkF,GAAMmqF,EAAKlB,WAAa,GAKhC2H,EAAYn0F,KAAK4gC,cAI7B,IAAI+1D,GAAY,EACZC,GAAyB,EACzBxC,EAAWpzF,OAAS,IACpB41F,GAAyBxC,EAAW,IAGnC,IADDyC,KAAsB,EAAG,IAC7B,IAAStzF,EAAI,EAAGA,EAAIvD,KAAKwzF,KAAKvK,KAAK9gF,MAAO5E,IACtC,IAA0B,GAAtBvD,KAAKs0F,cAAsBt0F,KAAKwzF,KAAKvK,KAAKC,OAAO3lF,GAAGijF,MAAMC,QAAQzmF,KAAKs0F,cAAc/zF,iBAAiBooF,GAAS,CAC/G,IAAIC,GAAO5oF,KAAKwzF,KAAKvK,KAAKC,OAAO3lF,GAAGijF,MAAMC,QAAQzmF,KAAKs0F,cAAc/zF,MACrEP,KAAK82F,qBAAuBlO,GAAKkO,qBACjCH,GAAY,EAYpB,IAAKA,GAAavC,EAAWpzF,OAAS,EAAG,CACrC,IAASuC,EAAI,EAAGA,EAAIL,EAAI,EAAGK,IACnBqzF,GAAyBxC,EAAW7wF,KACpCqzF,GAAyBxC,EAAW7wF,IAG5CvD,KAAK82F,qBAAuBF,QAG5B52F,KAAK82F,qBAAuBD,GAAkB,GAAG,GAErD,GAAI72F,KAAK+yF,aAAazvF,QAAQmK,GAASzN,KAAK+yF,aAAa/xF,OAAS,GAC9C,MAAbmzF,GAAqB/uE,EAAON,QAAUkjC,gBAAc8sC,QAEvD,GADe90F,KAAKwzF,KAAKzK,YACM,GAA3B8N,GAAkB,GAAG,GAAS,CAChB72F,KAAK4gC,YAAY0xB,QACPhvD,QAAQtD,KAAK4gC,aACrC5gC,KAAKszF,gBAAkBtzF,KAAK4gC,YAAY3B,SACxCj/B,KAAKkvE,cAAgB,IAAI3vD,EAAW,IAAIF,EAAO,EAAG,GAAIrf,KAAK4gC,YAAY69B,iBACvDz+D,KAAKszF,gBAAgB3yD,KAAK2xB,QAAQhvD,QAAQtD,KAAKszF,gBAAgB3yD,WAG/E3gC,KAAK4gC,YAAc5gC,KAAK+0F,kBAAkB3vE,GAS9CplB,KAAK+yF,aAAa/xF,OAAS,IAAMwO,GAASxP,KAAK+yF,aAAa/xF,OAAS,GAAKokB,EAAON,SAAWkjC,gBAAc8sC,UAC1G90F,KAAK4gC,YAAc5gC,KAAK+0F,kBAAkB3vE,GACrCA,EAAOwnD,eAAel6D,IAAM0S,EAAOwnD,eAAej6D,GAAOyS,EAAOwnD,eAAej6D,IAAMyS,EAAOwnD,eAAerjE,QACxG6b,EAAOwnD,eAAerjE,SAAW6b,EAAOwnD,eAAetjE,OAA2C,IAAhC8b,EAAOwnD,eAAetjE,QAC5FtJ,KAAKkvE,cAAcx8D,GAAK1S,KAAKyzF,cAAc/gF,EAC3C1S,KAAKkvE,cAAcv8D,GAAK3S,KAAKyzF,cAAc9gF,IAUvD,OALA1P,EAASjD,KAAKuvE,kBACVvvE,KAAKwzF,KAAKxqE,MAAMwhE,yBAA2BxqF,KAAKwzF,KAAKxqE,MAAM2qE,wBAA0B5N,4BAA0BgR,UAC/G/2F,KAAKg3F,eAAe9C,GAExBl0F,KAAKq1F,kBAAkBpyF,GAChBA,GAEXsoF,EAAgB5rF,UAAUo2F,gBAAkB,SAAUvO,GAElD,IAAK,IADDvkF,GAAS,EACJC,EAAI,EAAGA,EAAIskF,EAAIhB,MAAMr+E,MAAOjF,IAC5BskF,EAAIhB,MAAMC,QAAQvjF,GAAG+zF,sBACtBh0F,GAAS,GAGjB,OAAOA,GAOXsoF,EAAgB5rF,UAAUo1F,kBAAoB,SAAU3vE,GACpD,IAAIktC,EAAUtyD,KAAK4gC,YAAY0xB,QAC3B4kC,EAAW,KACX1nF,EAAQ8iD,EAAQhvD,QAAQtD,KAAK4gC,aACjC5gC,KAAK8yF,MAAO,EAERoE,EADA1nF,IAAU8iD,EAAQnqD,MAAQ,EACfmqD,EAAQ7+C,MAGR6+C,EAAQC,WAAW/iD,EAAQ,GAE1CxP,KAAKszF,gBAAkB4D,EAASj4D,SAChC,IAAIk4D,EAAYn3F,KAAKszF,gBAAgB3yD,KAAK2xB,QAAQhvD,QAAQtD,KAAKszF,gBAAgB3yD,MAW/E,OAVuD,IAAjD3gC,KAAKowF,oBAAoB9sF,QAAQ6zF,IACnCn3F,KAAKowF,oBAAoBlvF,KAAKi2F,GAElCn3F,KAAKkvE,cAAgB,IAAI3vD,EAAW,IAAIF,EAAO,EAAG,GAAI63E,EAASz4B,sBACxC,IAAXr5C,GAAqC,MAAVA,GAAkBA,EAAOunD,wBAAuD,IAA1BvnD,EAAOwnD,gBAA4D,MAAzBxnD,EAAOwnD,gBAA2BxnD,EAAOwnD,eAAel6D,IAAM0S,EAAOwnD,eAAej6D,GAAOyS,EAAOwnD,eAAej6D,IAAMyS,EAAOwnD,eAAerjE,QAC5Q6b,EAAOwnD,eAAerjE,SAAW6b,EAAOwnD,eAAetjE,OAA2C,IAAhC8b,EAAOwnD,eAAetjE,QAC5FtJ,KAAKkvE,cAAcx8D,EAAI0S,EAAOwnD,eAAel6D,EAC7C1S,KAAKkvE,cAAcv8D,EAAIyS,EAAOwnD,eAAej6D,EAC7C3S,KAAKkvE,cAAc3lE,OAAS6b,EAAOwnD,eAAerjE,QAE/C2tF,GAEX3L,EAAgB5rF,UAAUy3F,qBAAuB,SAAUhyE,GACvD,IAAIiyE,EAAgB,IAAIv1E,EACxB,OAAQsD,EAAOksC,YAAc+lC,EAAc/lC,WAAalsC,EAAOoF,mBAAqB6sE,EAAc7sE,kBAC9FpF,EAAO7d,WAAa8vF,EAAc9vF,UAAY6d,EAAOtC,kBAAoBu0E,EAAcv0E,iBACvFsC,EAAO4sC,0BAA4BqlC,EAAcrlC,yBACjD5sC,EAAOqsC,gBAAkB4lC,EAAc5lC,eACpCrsC,EAAOiD,YAAcgvE,EAAchvE,WAAajD,EAAOoB,cAAgB6wE,EAAc7wE,aACxFpB,EAAOkyE,wBAA0BD,EAAcC,uBAAyBlyE,EAAOmyE,SAAWF,EAAcE,QACxGnyE,EAAOkB,kBAAoB+wE,EAAc/wE,iBAAmBlB,EAAOuD,cAAgB0uE,EAAc1uE,aACjGvD,EAAO21B,iBAAmBs8C,EAAct8C,gBAAkB31B,EAAOqF,cAAgB4sE,EAAc5sE,aAC/FrF,EAAOqC,WAAa4vE,EAAc5vE,UAM1C8jE,EAAgB5rF,UAAU63F,oBAAsB,SAAUv4D,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,EAAOyoB,GACpG,IAAIg6C,EAAO,KAMX,OALIhjE,KAAKwzF,KAAKnC,qBACVruB,EAAO,IAAIy0B,GAA8Bx4D,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,EAAOyoB,GACvFhpB,KAAKwzF,KAAKpC,gBAAgBpuB,GAC1Bh6C,EAAQg6C,EAAKh6C,OAEVA,GAMXuiE,EAAgB5rF,UAAU+3F,mBAAqB,SAAUz4D,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,EAAOo3F,GACnG,IAAI30B,EAAO,KACPhjE,KAAKwzF,KAAKjC,mBACVvuB,EAAO,IAAI40B,GAA4B34D,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,EAAOo3F,GACrF33F,KAAKwzF,KAAKlC,cAActuB,KAGhCuoB,EAAgB5rF,UAAUq3F,eAAiB,SAAU9C,GAKjD,IAAK,IAJD34E,EAAWvb,KAAK4gC,YAAYrlB,SAC5BtT,KACArH,EAAOszF,EAActzF,OAEhBsC,GADIgxF,EAAc/yF,SACd,GAAG+B,EAAItC,EAAKI,OAAQkC,IAAK,EAC9By9B,EAAO//B,EAAKsC,IACXovD,QAAU,KACfrqD,EAAM/G,KAAKy/B,GACXplB,EAAStT,MAAMvH,OAAOigC,GAG1B,IAASz9B,EAAI,EAAGA,EAAIgxF,EAAcxyF,OAAQwB,IACtC,IACK,IAAI2wC,EAAI3wC,EAAG20F,EAAW3D,EAAcxyF,OAAS1B,KAAK+yF,aAAa/xF,OAAS6yC,EAAIqgD,EAAcxyF,OAAQmyC,GAAKgkD,EAAS,CACjH,IAAIl3D,OACgB,KADhBA,EAAO14B,EAAM4rC,MACoD,IAAlCt4B,EAAStT,MAAM3E,QAAQq9B,IACtDplB,EAAStT,MAAMwL,IAAIktB,KAUnC4qD,EAAgB5rF,UAAU4vE,gBAAkB,WACxC,GAAIvvE,KAAKwzF,KAAKzK,aAAe/oF,KAAKwzF,KAAKxI,yBACnC,IAAK,IAAI9nF,EAAI,EAAGA,EAAIlD,KAAKwzF,KAAKvK,KAAK9gF,MAAOjF,IAAK,CAC3C,IAAIskF,EAAMxnF,KAAKwzF,KAAKvK,KAAKC,OAAOhmF,GAC5BskF,EAAIuE,eAAiB,GAAKvE,EAAI4D,aAC9BprF,KAAKyzF,cAAc9gF,EAAI3S,KAAK4gC,YAAYi7B,OAAOlpD,GAI3D,IAAI4B,EAUJ,OATKvU,KAAK83F,YACNvjF,EAAS,IAAIgL,EAAWvf,KAAKyzF,cAAe,IAAIn0E,EAAMtf,KAAKkvE,cAAc5lE,MAAOtJ,KAAKkvE,cAAcv8D,EAC/F3S,KAAKyzF,cAAc9gF,KAOpB,IAAIolF,GAAoB/3F,KAAK4gC,YAAarsB,IAMrDg3E,EAAgB5rF,UAAUw2F,kBAAoB,SAAU3O,EAAKj+E,GAEzD,IAAK,IADDyuF,EAAY,EACP90F,EAAIlD,KAAKq0F,eAAgBnxF,GAAKlD,KAAKs0F,aAAcpxF,IACP,OAAzCskF,EAAIhB,MAAMC,QAAQvjF,GAAGgvD,iBAAqE,KAAzCs1B,EAAIhB,MAAMC,QAAQvjF,GAAGgvD,sBACxB,IAAzCs1B,EAAIhB,MAAMC,QAAQvjF,GAAGgvD,kBAC5B8lC,EAAYnlF,KAAKsV,IAAI6vE,EAAWxQ,EAAIhB,MAAMC,QAAQvjF,GAAGqmF,kBAG7D,OAAO12E,KAAKsV,IAAI5e,EAAQyuF,IAM5BzM,EAAgB5rF,UAAU60F,sBAAwB,SAAU5zD,EAAasuC,EAAeuiB,GACpF,IAAI6D,GAAS,EACb,GAAIt1F,KAAKwzF,KAAKyE,qBAAsB,CAChC,IAAIj1B,EAAO,IAAIk1B,GAAgChpB,EAAetuC,EAAa6wD,GAC3EzxF,KAAKwzF,KAAK5kB,kBAAkB5L,GAQ5BsyB,OAAiC,IAAhBtyB,EAAKsyB,QAAiCtyB,EAAKsyB,OAC5DpmB,EAAgBlM,EAAKzuD,OACrBk9E,EAAazuB,EAAKm1B,cAEtB,OAAS79D,YAAag7D,EAAQpmB,cAAeA,EAAe4d,gBAAiB2E,IAMjFlG,EAAgB5rF,UAAU01F,kBAAoB,SAAUpyF,GACpD,IAAI+/D,EAAO,IAAIo1B,GAA8Bn1F,GAI7C,OAHIjD,KAAKwzF,KAAK6E,oBACVr4F,KAAKwzF,KAAK3kB,gBAAgB7L,GAEvBA,GAEXuoB,EAAgB5rF,UAAUi1F,QAAU,SAAUpN,EAAKvkF,EAAQsG,GACvD,QAAsB,IAAXtG,EAAwB,CAG/B,IAAIq1F,EAAW,IAAIC,GACfC,EAAoB,EAEpB92F,EAAO,IAAI4d,EAAM,EAAG,GACpBgtE,GAAW,EACf,GAAI9E,EAAI4B,cAAe,CACnB,IAAIwI,EAAU,EACV6G,EAAez4F,KAAKwzF,KAAKvK,KAAK8D,cAAczpF,QAAQkkF,IAClC,IAAlBiR,IAEsB,KADtBA,EAAez4F,KAAKwzF,KAAKxG,QAAQ1pF,QAAQkkF,MAErC8E,GAAW,GAGnB,IAAK,IAAIppF,EAAI,EAAGA,EAAIskF,EAAIhB,MAAMr+E,MAAOjF,IAAK,CACtC,IAAIwqF,EAAOlG,EAAIhB,MAAMC,QAAQvjF,GAC7B0uF,EAAU/+E,KAAKsV,IAAIypE,EAASlE,EAAKpD,SAErC,IAASpnF,EAAIu1F,EAAcv1F,EAAIu1F,EAAe7G,EAAS1uF,IACnDs1F,GAAsBlM,EAAWtsF,KAAKwzF,KAAKxG,QAAQE,UAAUhqF,GAAGqG,OAASvJ,KAAKwzF,KAAKvK,KAAKC,OAAOhmF,GAAGqG,OAkB1G,IAAImvF,EAAmBlR,EAAIuE,eAAiB,EAAMvE,EAAIuE,eAAiBvE,EAAIj+E,OAC3E,QAAqC,IAA1BvJ,KAAKwzF,KAAKzK,aAA+B/oF,KAAKwzF,KAAKzK,kBAA+C,IAAzB/oF,KAAKwzF,KAAK1K,YAAsD,MAAxB9oF,KAAKwzF,KAAK1K,WAyB9H9oF,KAAKkvE,cAAcv8D,EAAI3S,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,OAASw4E,EAChF14F,KAAKqzF,kBAAkB9pF,QAAUvJ,KAAKkvE,cAAcv8D,EAAI3S,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,OACtGw4E,EAAmB14F,KAAKkvE,cAAc3lE,QAAUvJ,KAAKkvE,cAAcv8D,EACrE3S,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,OAASs4E,EAAoBx4F,KAAKqzF,kBAAkB9pF,aAE1C,IAA/CvJ,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK6C,cAAgCzrF,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK6C,aAAa1e,QAAU9kB,qBAAmB0wC,UAC7IpN,EAAgBsJ,eAAiB70F,KAAKwzF,KAAKvK,KAAK8D,cAAczpF,QAAQkkF,GACtExnF,KAAKwzF,KAAKtI,mBAAqBlrF,KAAKwzF,KAAKvK,KAAK8D,cAAczpF,QAAQkkF,IAEpE+D,EAAgBsJ,gBAAkB,GAAKtJ,EAAgBsJ,iBAAmBrN,EAAI2N,UAC1En1F,KAAKwzF,KAAKxI,2BACVsN,EAASrQ,UAAW,EAOpBqQ,EAAS/jF,OAASvU,KAAKkvE,cACvBlvE,KAAK44F,iBAAiBN,EAAU9Q,EAAKkR,GACrClR,EAAI4D,YAAa,EACjB5D,EAAIqR,gBAAkBtN,EAAgBsJ,kBAa9CyD,EAASrQ,UAAW,EAChBT,EAAIoB,KAAKE,WAAWtB,IAAIsE,oBAAsB,EAC9CtE,EAAI4D,YAAa,GAGjB5D,EAAI4D,YAAa,EACjBsN,EAAmBlR,EAAIj+E,QAEvBvJ,KAAKwzF,KAAKzK,aAAevB,EAAIuE,eAAiB,GACS,MAAnD/rF,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,cACpC4O,GAAoB14F,KAAKwzF,KAAK1K,WAAWtB,IAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,QAG5ElgB,KAAK40F,QAAQpN,EAAK8Q,EAAUI,SAKhC,GAAIA,EAAmB14F,KAAKqzF,kBAAkB9pF,OACtCvJ,KAAKwzF,KAAKxI,2BACVsN,EAASrQ,UAAW,EAEpBjoF,KAAK44F,iBAAiBN,EAAU9Q,EAAKkR,GACrClR,EAAIkH,aAAc,EAClBlH,EAAI4D,YAAa,GACoB,IAAjC5D,EAAIoB,KAAKsC,qBACToN,EAASrQ,UAAW,SAS3B,GAAIjoF,KAAKkvE,cAAcv8D,EAAI+lF,EAAmB14F,KAAKqzF,kBAAkB9pF,QACtEvJ,KAAKkvE,cAAcv8D,EAAI+lF,EAAoB14F,KAAKkvE,cAAc3lE,OAASvJ,KAAKyzF,cAAc9gF,GAC1F3S,KAAKkvE,cAAcv8D,EAAI6lF,EAAoBx4F,KAAKqzF,kBAAkB9pF,OAAQ,CAE1E,IAAIuvF,GAAQ,GACP94F,KAAKwzF,KAAKxI,0BAA6BhrF,KAAKwzF,KAAKiC,cAAiBjO,EAAIqH,gBAAmBrH,EAAI2F,iBAUzFntF,KAAKwzF,KAAKxI,0BAAsD,MAA1BhrF,KAAKwzF,KAAK/H,cAAwBzrF,KAAKwzF,KAAK/H,aAAa3mE,QAAUkjC,gBAAc0jC,UAAY1rF,KAAKwzF,KAAK/H,aAAa1e,OAAS9kB,qBAAmB4nB,YAAc2X,EAAIqH,gBAAkB7uF,KAAKkvE,cAAcv8D,EAAIpJ,EAASvJ,KAAKqzF,kBAAkB9pF,UACtRuvF,EAAQ94F,KAAK+4F,YAAY/4F,KAAKqzF,kBAAkB9pF,OAASvJ,KAAKkvE,cAAcv8D,EAAG3S,KAAKwzF,KAAMhM,MAEtFsR,IAAuB,OAAb94F,KAAKizF,KAA8C,GAA9BjzF,KAAKizF,IAAI/qE,WAAW3e,QAAqC,MAAtBvJ,KAAKizF,IAAI5jB,WAAqBrvE,KAAKizF,IAAI5jB,UAAUruE,OAAS,GAAKhB,KAAKiwE,eAAiBjwE,KAAKizF,IAAI5jB,YAChKypB,GAAqB,MAAZ94F,KAAKizF,KAAejzF,KAAKizF,IAAIliC,UAAY,IAElD+nC,GAAQ,GAEZ94F,KAAKiwE,cAAgB,OAhBjB6oB,EAD2B,OAA3B94F,KAAKwzF,KAAK/H,cAAyBzrF,KAAKwzF,KAAK/H,aAAa7e,eAAerjE,OAAS,EAC1EvJ,KAAK+4F,YAAa/4F,KAAKkvE,cAAc3lE,OAASvJ,KAAKyzF,cAAc9gF,EAAK3S,KAAKkvE,cAAcv8D,EAAG3S,KAAKwzF,KAAMhM,GAGvGxnF,KAAK+4F,YAAY/4F,KAAKqzF,kBAAkB9pF,OAASvJ,KAAKkvE,cAAcv8D,EAAG3S,KAAKwzF,KAAMhM,MAE1FxnF,KAAKkzF,YAAa,GAatB3H,EAAgBsJ,gBAAkB,GAAKtJ,EAAgBsJ,iBAAmBrN,EAAI2N,UAAY2D,EACtF94F,KAAKwzF,KAAKxI,0BACVsN,EAASrQ,UAAW,EACpBjoF,KAAK44F,iBAAiBN,EAAU9Q,EAAKkR,GACrClR,EAAI4D,YAAa,EACjB5D,EAAIqR,gBAAkBtN,EAAgBsJ,gBACD,IAAjCrN,EAAIoB,KAAKsC,qBACToN,EAASrQ,UAAW,KAIxBqQ,EAASrQ,UAAW,EACpBjoF,KAAK40F,QAAQpN,EAAK8Q,EAAUI,IAIhCJ,EAASrQ,UAAW,OAIxBqQ,EAASrQ,UAAW,EACpBjoF,KAAK40F,QAAQpN,EAAK8Q,EAAUI,GAC5BlR,EAAI4D,YAAa,EAGzB,OAAOkN,EAGP,IACIU,EAAa,IAAI35E,EAAOrf,KAAKkvE,cAAcx8D,EAAG1S,KAAKkvE,cAAcv8D,GAKrE1P,EAAOsR,OAAS,IAAIgL,EAAWy5E,EAAY,IAAI15E,EAAM,EAAG,IACxD/V,EAASvJ,KAAKm2F,kBAAkB3O,EAAKj+E,GACrC,IAASrG,EAAIlD,KAAKq0F,eAAgBnxF,GAAKlD,KAAKs0F,aAAcpxF,IAAK,CAC3D,IAAI+1F,EAAgB/1F,EAAIlD,KAAKs0F,aAAe,GAAO9M,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAa,EAErF,IAAKyM,EACD,IAAK,IAAIplD,EAAI,EAAGA,EAAI2zC,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAY34C,IACjD2zC,EAAIhB,MAAMC,QAAQvjF,EAAI2wC,GAAG44C,qBAAsB,EAGnD/qF,EAAO,IAAI4d,EAAMtf,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,MAAOC,IAUtDvJ,KAAKo3F,qBAAqBp3F,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGkiB,SAC1DplB,KAAKo3F,qBAAqB5P,EAAIhB,MAAMC,QAAQvjF,GAAGi9B,gBAC/CqnD,EAAIhB,MAAMC,QAAQvjF,GAAGi9B,aAAengC,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGkiB,QAEvE,IAAIuyE,EAAYnQ,EAAIhB,MAAMC,QAAQvjF,GAAG8lB,MACjCkwE,EAAoD,iBAA/B1R,EAAIhB,MAAMC,QAAQvjF,GAAG3C,OACX,OAA/BinF,EAAIhB,MAAMC,QAAQvjF,GAAG3C,MAAkBinF,EAAIhB,MAAMC,QAAQvjF,GAAG3C,MAAQ,GAIpE,GAHJinF,EAAIhB,MAAMC,QAAQvjF,GAAG8lB,MAAQhpB,KAAKw3F,oBAAoBx3F,KAAKszF,gBAAiBtzF,KAAK8sF,gBAAiB5pF,EAAG,IAAIqc,EAAWy5E,EAAYt3F,GAAOw3F,EAAWvB,GAG1InQ,EAAIhB,MAAMC,QAAQvjF,GAAG3C,iBAAiBooF,GAAS,EAC3CC,EAAOpB,EAAIhB,MAAMC,QAAQvjF,GAAG3C,OAC3B8vF,gBAAkBntF,EAE3B,IAAIysE,EAAe6X,EAAIhB,MAAMC,QAAQvjF,GAAGk9B,KAAKpgC,KAAKszF,gBAAiB,IAAI/zE,EAAWy5E,EAAYt3F,GAAOu3F,GAqBzG,GApBQzR,EAAIoB,KAAK5/D,MAAMwhE,0BAA4BhD,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAaxsF,KAAKs0F,cAClFpxF,EAAIskF,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAaxsF,KAAKs0F,aAAe,IAAMt0F,KAAKs0F,aAAe9M,EAAIhB,MAAMr+E,MAAQ,IACtGq/E,EAAIiD,iBAAmBzqF,KAAKs0F,cAE5B9M,EAAIoB,KAAK5/D,MAAMwhE,yBAA4BhD,EAAIiD,iBAAmB,IAAMjD,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAC7FxsF,KAAKs0F,cAAgBpxF,EAAIskF,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAaxsF,KAAKs0F,aAAe,IAC/E9M,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAaxsF,KAAKs0F,aAAepxF,EAAI,EAAI,IAC9DskF,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAGlqF,MAAyB,OAAjBovE,QAAoDx2D,IAA3Bw2D,EAAaN,UACtFM,EAAaN,UAAiB,GAClCmY,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAGtqD,aAAeqnD,EAAIhB,MAAMC,QAAQvjF,GAAGi9B,aAChFqnD,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAGzhE,MAAQw+D,EAAIhB,MAAMC,QAAQvjF,GAAG8lB,MACzEw+D,EAAIhB,MAAMC,QAAQe,EAAIiD,iBAAmB,GAAG+B,WAAahF,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAaxsF,KAAKs0F,aAAepxF,EAAI,GAI3Hg2F,EAAoD,iBAA/B1R,EAAIhB,MAAMC,QAAQvjF,GAAG3C,OACP,OAA/BinF,EAAIhB,MAAMC,QAAQvjF,GAAG3C,MAAkBinF,EAAIhB,MAAMC,QAAQvjF,GAAG3C,MAAQ,GACnE04F,GACDj5F,KAAK03F,mBAAmB13F,KAAKszF,gBAAiBtzF,KAAK8sF,gBAAiB5pF,EAAG,IAAIqc,EAAWy5E,EAAYt3F,GAAOw3F,EAAW1R,EAAIhB,MAAMC,QAAQvjF,GAAG8lB,OAEzIw+D,EAAIhB,MAAMC,QAAQvjF,GAAG3C,iBAAiBooF,GAAS,CAC/C,IAAIC,EAAOpB,EAAIhB,MAAMC,QAAQvjF,GAAG3C,MAC5BP,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,OAAStJ,KAAKszF,gBAAgBpuE,WAAW5b,OACxE0vF,EAAWtmF,EAAIk2E,EAAKkO,qBACpBkC,EAAWtmF,GAAKk2E,EAAK5/D,MAAM+gE,aAG3BiP,EAAWtmF,GAAK1S,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,WAInD0vF,EAAWtmF,GAAK1S,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,MAGlDk+E,EAAI2F,mBAAoB3F,EAAIqH,iBAC7B7uF,KAAKkvE,cAAcv8D,GAAKpJ,GAE5BtG,EAAOsR,OAAS,IAAIgL,EAAW,IAAIF,EAAOpc,EAAOsR,OAAO7B,EAAGzP,EAAOsR,OAAO5B,GAAI,IAAI2M,EAAM05E,EAAWtmF,EAAGsmF,EAAWrmF,KAGxH44E,EAAgB5rF,UAAUo5F,YAAc,SAAUI,EAAevQ,EAAMR,GAGnE,IAAK,IAFD0Q,GAAQ,EACRnP,EAAW,IAAI/kE,EACV1hB,EAAI,EAAGA,EAAIklF,EAAQ5B,MAAMr+E,MAAOjF,IAAK,CAC1C,IAAIwqF,EAAOtF,EAAQ5B,MAAMC,QAAQvjF,GACjC,QAA0B,IAAfwqF,EAAKntF,OAAwC,OAAfmtF,EAAKntF,OAAwC,iBAAfmtF,EAAKntF,MAAoB,CAC5F,IAAIoI,EAAO,KAEPA,OAD2B,IAApB+kF,EAAK1kE,MAAMrgB,MAA2C,MAAnB+kF,EAAK1kE,MAAMrgB,KAC9C+kF,EAAK1kE,MAAMrgB,UAEkB,IAAxB+kF,EAAKlG,IAAIx+D,MAAMrgB,MAA+C,MAAvB+kF,EAAKlG,IAAIx+D,MAAMrgB,KAC3D+kF,EAAKlG,IAAIx+D,MAAMrgB,UAEmB,IAA7B+kF,EAAKlG,IAAIoB,KAAK5/D,MAAMrgB,MAAoD,MAA5B+kF,EAAKlG,IAAIoB,KAAK5/D,MAAMrgB,KACrE+kF,EAAKlG,IAAIoB,KAAK5/D,MAAMrgB,KAGpB4jB,GAAYkU,YAEvBzgC,KAAKiwE,cAAgByd,EAAKntF,MAC1B,IAAI+I,EAAQokF,EAAKpkF,MACb8vF,EAASxQ,EAAKj/E,QAAQkjF,UAAU3pF,GAChCk2F,EAAOtL,eAAiBJ,EAAKpkF,MAAQ8vF,EAAO9vF,QAC5CA,EAAQ8vF,EAAO9vF,OAEnBtJ,KAAKizF,IAAMtJ,EAAS7kE,OAAO4oE,EAAKntF,MAAOoI,EAAM+kF,EAAKvtD,aAAc,IAAI7gB,EAAMhW,EAAO6vF,IAAgB,EAAOn5F,KAAKqzF,mBAC7G,IAAI9pF,EAASvJ,KAAKizF,IAAI/qE,WAAW3e,OACjC,GAAmB,KAAfmkF,EAAKntF,OAA2B,IAAXgJ,EAAc,CACnCuvF,GAAQ,EACR,MAeJ,GAbmB,OAAfpL,EAAK1kE,OAAyC,OAAvB0kE,EAAK1kE,MAAMm+D,SAA+C,OAA3BuG,EAAK1kE,MAAMm+D,QAAQnnE,KAA8C,OAA9B0tE,EAAK1kE,MAAMm+D,QAAQjnE,SAC5G3W,GAA6E,GAAlEmkF,EAAK1kE,MAAMm+D,QAAQnnE,IAAI1W,MAAQokF,EAAK1kE,MAAMm+D,QAAQjnE,OAAO5W,QAEpEtJ,KAAKizF,IAAIliC,UAAY,GAA0B,MAArB28B,EAAKvtD,cAAyD,GAAjCutD,EAAKvtD,aAAa3Z,cACzEjd,IAAWvJ,KAAKizF,IAAIliC,UAAY,GAAM28B,EAAK1kE,MAAMmX,aAAwB,aAEzEutD,EAAK1kE,MAAM8gE,YACXvgF,GAAWq/E,EAAK5/D,MAAM8gE,YAAY9pE,IAAM4oE,EAAK5/D,MAAM8gE,YAAY5pE,OAKnE3W,GAAUq/E,EAAK5/D,MAAM+gE,YACjBoP,EAAgB5vF,QAAyC,IAAvBvJ,KAAKizF,IAAI5jB,WAAoD,OAAvBrvE,KAAKizF,IAAI5jB,UAAqB,CACtGypB,GAAQ,EACR,QAIZ,OAAOA,GAEXvN,EAAgB5rF,UAAUi5F,iBAAmB,SAAU31F,EAAQukF,EAAK6R,GAChE,IAAIt5D,EAAW,IAAI1gB,EAAOrf,KAAKkvE,cAAcx8D,EAAG1S,KAAKkvE,cAAcv8D,GAC/D60E,EAAIoB,KAAKG,aAAevB,EAAIoB,KAAKoC,0BAA4BhrF,KAAKyzF,cAAc/gF,IAAM1S,KAAKkvE,cAAcx8D,IACzGqtB,EAASrtB,EAAI1S,KAAKyzF,cAAc/gF,GAEpCzP,EAAOsR,OAAS,IAAIgL,EAAWwgB,EAAU,IAAIzgB,EAAM,EAAG,IACtDtf,KAAKs5F,WAAa9R,EAAIuE,eAAiB,EAAI/rF,KAAKqzF,kBAAkB9pF,OAAS,EAEvEi+E,EAAIoB,KAAK5/D,MAAM8gE,YAAY9pE,IAAMhgB,KAAKkvE,cAAcv8D,EAAI60E,EAAIoB,KAAK5/D,MAAM8gE,YAAY5pE,OAASlgB,KAAKqzF,kBAAkB9pF,SACnHi+E,EAAIuE,eAAiB/rF,KAAKkvE,cAAcv8D,EAAI0mF,EAAkBr5F,KAAKqzF,kBAAkB9pF,QAQzF,IAAK,IAAIrG,EAAI,EAAGA,EAAIskF,EAAIhB,MAAMr+E,MAAOjF,IAAK,CACtC,IAAIwqF,EAAOlG,EAAIhB,MAAMC,QAAQvjF,GACZwqF,EAAKnE,kBACH8P,GAAmB3L,EAAKntF,iBAAiBooF,KACxDnB,EAAIuE,eAAiB,GAM7B,IAAS7oF,EAAIlD,KAAKq0F,eAAgBnxF,GAAKlD,KAAKs0F,aAAcpxF,IAAK,CAC3D,IAAI+1F,EAAgBzR,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAatpF,EAAIlD,KAAKs0F,aAAe,GACzE9M,EAAIhB,MAAMC,QAAQvjF,GAAGspF,WAAa,EAMnC9qF,EAAO,IAAI4d,EAAMtf,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,MAAOtJ,KAAKs5F,WAAa,EAAMt5F,KAAKs5F,WACpFt5F,KAAKqzF,kBAAkB9pF,QAQvBgwF,EAAa/R,EAAIhB,MAAMC,QAAQvjF,GAAG8lB,MACtCw+D,EAAIhB,MAAMC,QAAQvjF,GAAG8lB,MAAQuwE,EAC7B,IACI5pB,EAAe,KAuBnB,GArBI6X,EAAIhB,MAAMC,QAAQvjF,GAAG+nF,WAAazD,EAAIj+E,OACtComE,EAAe6X,EAAIhB,MAAMC,QAAQvjF,GAAGk9B,KAAKpgC,KAAKszF,gBAAiB,IAAI/zE,EAAWwgB,EAAUr+B,GAAOu3F,GAG/FzR,EAAIuE,eAAiB,GACD,MAAhBpc,QAA0D,IAA3BA,EAAaN,YAC5CmY,EAAIhB,MAAMC,QAAQvjF,GAAG+zF,qBAAsB,EAC3CzP,EAAIhB,MAAMC,QAAQvjF,GAAGgvD,gBAA4C,MAA1Byd,EAAaN,UAAoB,IAAMM,EAAaN,UAC3FmY,EAAIuE,eAAiBsN,EAAkB1pB,EAAaznD,WAAW3e,QAGvEtG,EAAOglF,SAAahlF,EAAOglF,SAA8BT,EAAIhB,MAAMC,QAAQvjF,GAAG+zF,oBAAvCh0F,EAAOglF,SAU1CT,EAAIhB,MAAMC,QAAQvjF,GAAG3C,iBAAiBooF,GAAS,CAC/C,IAAIC,EAAOpB,EAAIhB,MAAMC,QAAQvjF,GAAG3C,MAChCP,KAAKw5F,4BAA8Bt2F,EAM/BlD,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,OAAStJ,KAAKszF,gBAAgBpuE,WAAW5b,OACxEy2B,EAASrtB,EAAI1S,KAAK82F,qBAClB/2D,EAASrtB,GAAKk2E,EAAK5/D,MAAM+gE,aAGzBhqD,EAASrtB,GAAK1S,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,WAIjDy2B,EAASrtB,GAAK1S,KAAKwzF,KAAK7pF,QAAQkjF,UAAU3pF,GAAGoG,MAGrDtJ,KAAKkvE,cAAcv8D,GAAK3S,KAAKs5F,WAAa,EAAMt5F,KAAKs5F,WAAaD,EAClEp2F,EAAOsR,OAAS,IAAIgL,EAAW,IAAIF,EAAOpc,EAAOsR,OAAO7B,EAAGzP,EAAOsR,OAAO5B,GAAI,IAAI2M,EAAMygB,EAASrtB,EAAGqtB,EAASptB,KAMhH44E,EAAgBsJ,gBAAkB,EAC3BtJ,GACTnf,IASE2rB,GAAqC,SAAUviF,GAM/C,SAASuiF,EAAoBp3D,EAAMpsB,GAC/B,OAAOiB,EAAO3V,KAAKG,KAAM2gC,EAAMpsB,IAAWvU,KAE9C,OARA4U,GAAUmjF,EAAqBviF,GAQxBuiF,GACT1qB,IAKEme,GAAqC,SAAUh2E,GAM/C,SAASg2E,EAAoB1e,GACzB,OAAOt3D,EAAO3V,KAAKG,KAAM8sE,IAAe9sE,KAE5C,OARA4U,GAAU42E,EAAqBh2E,GAQxBg2E,GACT3e,IAEE4sB,GAAmC,WAMnC,SAASA,EAAkBx6D,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,GAC9DP,KAAK05F,aAAevE,EACpBn1F,KAAK25F,cAAgBrM,EACrBttF,KAAK6B,cAAgBtB,EACrBP,KAAK45F,WAAarlF,EAClBvU,KAAK0pD,YAAczqB,EA0DvB,OAxDAv/B,OAAOuC,eAAew3F,EAAkB95F,UAAW,YAM/CuC,IAAK,WACD,OAAOlC,KAAK05F,cAEhBr3F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew3F,EAAkB95F,UAAW,aAK/CuC,IAAK,WACD,OAAOlC,KAAK25F,eAEhBt3F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew3F,EAAkB95F,UAAW,SAK/CuC,IAAK,WACD,OAAOlC,KAAK6B,eAEhBQ,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew3F,EAAkB95F,UAAW,UAK/CuC,IAAK,WACD,OAAOlC,KAAK45F,YAEhBv3F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew3F,EAAkB95F,UAAW,YAK/CuC,IAAK,WACD,OAAOlC,KAAK0pD,aAEhBrnD,YAAY,EACZC,cAAc,IAEXm3F,KAGPhC,GAA+C,SAAUjiF,GAOzD,SAASiiF,EAA8Bx4D,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,EAAOyoB,GACjF,IAAItT,EAAQF,EAAO3V,KAAKG,KAAMi/B,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,IAAUP,KAE/E,OADA0V,EAAMsT,MAAQA,EACPtT,EA+BX,OAxCAd,GAAU6iF,EAA+BjiF,GAWzC9V,OAAOuC,eAAew1F,EAA8B93F,UAAW,QAM3DuC,IAAK,WACD,OAAOlC,KAAK65F,OAEhBz3F,IAAK,SAAU7B,GACXP,KAAK65F,MAAQt5F,GAEjB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAew1F,EAA8B93F,UAAW,SAK3DuC,IAAK,WACD,OAAOlC,KAAKspF,WAEhBlnF,IAAK,SAAU7B,GACXP,KAAKspF,UAAY/oF,GAErB8B,YAAY,EACZC,cAAc,IAEXm1F,GACTgC,IAEE7B,GAA6C,SAAUpiF,GAOvD,SAASoiF,EAA4B34D,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,EAAOyoB,GAC/E,IAAItT,EAAQF,EAAO3V,KAAKG,KAAMi/B,EAAUk2D,EAAU7H,EAAW/4E,EAAQhU,IAAUP,KAE/E,OADA0V,EAAM4zE,UAAYtgE,EACXtT,EAcX,OAvBAd,GAAUgjF,EAA6BpiF,GAWvC9V,OAAOuC,eAAe21F,EAA4Bj4F,UAAW,SAMzDuC,IAAK,WACD,OAAOlC,KAAKspF,WAEhBjnF,YAAY,EACZC,cAAc,IAEXs1F,GACT6B,IAEEK,GAAoC,WACpC,SAASA,KAiBT,OAfAp6F,OAAOuC,eAAe63F,EAAmBn6F,UAAW,UAMhDuC,IAAK,WACD,OAAOlC,KAAK+5F,UAEhB33F,IAAK,SAAU7B,GACXP,KAAK+5F,SAAWx5F,GAEpB8B,YAAY,EACZC,cAAc,IAEXw3F,KAGPE,GAA0C,SAAUxkF,GAOpD,SAASwkF,EAAyBzlF,EAAQosB,GACtC,IAAIjrB,EAAQF,EAAO3V,KAAKG,OAASA,KAGjC,OAFA0V,EAAMnB,OAASA,EACfmB,EAAMylD,QAAUx6B,EACTjrB,EA4BX,OAtCAd,GAAUolF,EAA0BxkF,GAYpC9V,OAAOuC,eAAe+3F,EAAyBr6F,UAAW,UAMtDuC,IAAK,WACD,OAAOlC,KAAKo0F,YAEhBhyF,IAAK,SAAU7B,GACXP,KAAKo0F,WAAa7zF,GAEtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAe+3F,EAAyBr6F,UAAW,QAKtDuC,IAAK,WACD,OAAOlC,KAAKm7D,SAEhB94D,YAAY,EACZC,cAAc,IAEX03F,GACTF,IAKEG,GAAwC,SAAUzkF,GAOlD,SAASykF,EAAuBh3F,GAC5B,IAAIyS,EAAQF,EAAO3V,KAAKG,OAASA,KAEjC,OADA0V,EAAMqoD,aAAe96D,EACdyS,EA4BX,OArCAd,GAAUqlF,EAAwBzkF,GAWlC9V,OAAOuC,eAAeg4F,EAAuBt6F,UAAW,UAMpDuC,IAAK,WACD,OAAOlC,KAAK+9D,cAEhB17D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeg4F,EAAuBt6F,UAAW,YAKpDuC,IAAK,WACD,OAAOlC,KAAKk6F,aAEhB93F,IAAK,SAAU7B,GACXP,KAAKk6F,YAAc35F,GAEvB8B,YAAY,EACZC,cAAc,IAEX23F,GACTH,IAKE5B,GAAiD,SAAU1iF,GAO3D,SAAS0iF,EAAgC3jF,EAAQosB,EAAMw5D,GACnD,IAAIzkF,EAAQF,EAAO3V,KAAKG,KAAMuU,EAAQosB,IAAS3gC,KAE/C,OADA0V,EAAMykF,SAAWA,EACVzkF,EAcX,OAvBAd,GAAUsjF,EAAiC1iF,GAW3C9V,OAAOuC,eAAei2F,EAAgCv4F,UAAW,iBAM7DuC,IAAK,WACD,OAAOlC,KAAKm6F,UAEhB93F,YAAY,EACZC,cAAc,IAEX41F,GACT8B,IAKE5B,GAA+C,SAAU5iF,GAOzD,SAAS4iF,EAA8Bn1F,GACnC,OAAOuS,EAAO3V,KAAKG,KAAMiD,IAAWjD,KAExC,OATA4U,GAAUwjF,EAA+B5iF,GASlC4iF,GACT6B,IAEE1B,GAAiC,WAMjC,SAASA,IACLv4F,KAAKo6F,eAAiB,IAAI76E,EAAW,EAAG,EAAG,EAAG,GA8BlD,OA5BA7f,OAAOuC,eAAes2F,EAAgB54F,UAAW,YAK7CuC,IAAK,WACD,OAAOlC,KAAKq6F,aAEhBj4F,IAAK,SAAU7B,GACXP,KAAKq6F,YAAc95F,GAEvB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes2F,EAAgB54F,UAAW,UAK7CuC,IAAK,WACD,OAAOlC,KAAKo6F,gBAEhBh4F,IAAK,SAAU7B,GACXP,KAAKo6F,eAAiB75F,GAE1B8B,YAAY,EACZC,cAAc,IAEXi2F,KC7xDP3jF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAyBxCklF,GAA+B,SAAU9kF,GAOzC,SAAS8kF,EAAcxmF,GACnB,IAAI4B,EAAQF,EAAO3V,KAAKG,KAAM8T,IAAY9T,KAoB1C,OAbA0V,EAAM6kF,aAAe,EAMrB7kF,EAAM8kF,YAAc,IAAIj7E,EAMxB7J,EAAM+kF,cAAgB,EACf/kF,EA+MX,OA1OAd,GAAU0lF,EAAe9kF,GA6BzB9V,OAAOuC,eAAeq4F,EAAc36F,UAAW,WAM3CuC,IAAK,WACD,OAAOlC,KAAKsT,UAEhBjR,YAAY,EACZC,cAAc,IAOlBg4F,EAAc36F,UAAU6sE,eAAiB,SAAUD,GAC/C,IAAI3rC,EAAc2rC,EAAM5rC,KACpBuuC,EAAgB3C,EAAMh4D,OACtBmmF,EAAoB16F,KAAK8T,QAAQ6mF,YACrCD,EAAkBhoF,EAAI,EACtBgoF,EAAkB/nF,EAAI,EAEtB,IAAI2L,EAAWte,KAAKw6F,YAAY9nF,IAAM1S,KAAKw6F,YAAY7nF,GAAK3S,KAAKw6F,YAAY7nF,IAAM3S,KAAKw6F,YAAYlxF,OAAStJ,KAAKw6F,YAAYlxF,QAAUtJ,KAAKw6F,YAAYjxF,QAAsC,IAA5BvJ,KAAKw6F,YAAYjxF,OAE/KvJ,KAAc,gBACf06F,EAAoB16F,KAAKw6F,aAE7B,IAAIv3F,EAAS,KACTksE,EAAa,IAAIyrB,GAGrB,IAFAzrB,EAAWxuC,KAAOC,IAEL,CAET,IAAIkZ,EAAU95C,KAAKw0F,sBAAsB5zD,EAAasuC,GACtDA,EAAgBp1B,EAAQo1B,cACxB,IAAI2rB,EAAU,KAOd,GANK/gD,EAAQw7C,SACTnmB,EAAanvE,KAAKsvE,aAAa1uC,EAAasuC,EAAewrB,EAAmBnuB,GAE9EsuB,EAAU76F,KAAKq4F,mBAAmBlpB,GAClCr1B,EAAQw7C,OAAsB,OAAZuF,GAA4BA,EAAQvF,QAErDnmB,EAAWhrD,KAAQ21B,EAAQw7C,OAU3B,CACDryF,EAASjD,KAAKuvE,gBAAgBJ,GAC9B,MAPA,GAJAD,EAAgBlvE,KAAK0sE,kBAAkBH,GACvCmuB,EAAoB16F,KAAK86F,mBAAmBJ,EAAmBvrB,GAC/DvuC,EAA2B,OAAZi6D,GAAyC,OAArBA,EAAQ3D,SACvCl3F,KAAKqyD,YAAYzxB,GAAei6D,EAAQ3D,SACxCl3F,KAAK22F,UAAW,CAChB1zF,EAASjD,KAAKuvE,gBAAgBJ,GAC9B,OAQZ,OAAOlsE,GAMXq3F,EAAc36F,UAAU60F,sBAAwB,SAAU5zD,EAAasuC,GACnE,IAAIomB,GAAS,EACb,GAAIt1F,KAAK8T,QAAQmkF,qBAAsB,CACnC,IAAIj1B,EAAO,IAAIg3B,GAAyB9qB,EAAetuC,GACvD5gC,KAAK8T,QAAQ86D,kBAAkB5L,GAC/BsyB,EAAStyB,EAAKsyB,OACdpmB,EAAgBlM,EAAKzuD,OAEzB,OAAS26D,cAAeA,EAAeomB,OAAQA,IAMnDgF,EAAc36F,UAAU04F,mBAAqB,SAAUlpB,GACnD,IAAInM,EAAO,KACX,GAAIhjE,KAAK8T,QAAQukF,mBAAoB,CACjC,IAAI91C,EAAMviD,KAAKuvE,gBAAgBJ,GAC/BnM,EAAO,IAAIi3B,GAAuB13C,GAClCviD,KAAK8T,QAAQ+6D,gBAAgB7L,GAEjC,OAAOA,GAMXs3B,EAAc36F,UAAU4vE,gBAAkB,SAAUJ,GAEhD,OADa,IAAI9B,GAAgB8B,EAAWxuC,KAAMwuC,EAAW56D,SAOjE+lF,EAAc36F,UAAUm7F,mBAAqB,SAAUJ,EAAmBvrB,GACtE,IAAIirB,EAAiBjrB,EAAW56D,OAGhC,OAFAmmF,EAAkB/nF,EAAK+nF,EAAkB/nF,EAAIynF,EAAe7wF,OAC5DmxF,EAAkBnxF,OAAUmxF,EAAkBnxF,OAAS6wF,EAAe7wF,OAC/DmxF,GAMXJ,EAAc36F,UAAU2vE,aAAe,SAAU1uC,EAAam6D,EAAWC,EAASzuB,GAC9E,IAAItpE,EAAS,IAAI23F,GACjBG,EAAY/6F,KAAKi7F,0BAA0Br6D,EAAam6D,EAAWxuB,GACnE,IAAI2uB,EAAYl7F,KAAKm7F,aAAaJ,EAAWC,GAGzCI,GAAgB,EACpB,KAHiB7uB,EAAMnnD,OAAO2nD,QAAU9kB,qBAAmB4nB,aAClDqrB,GAAct6D,IAAgB2rC,EAAM5rC,MAEhC,CACT,IAAIkvB,EAAgB7vD,KAAKq7F,cAAcN,EAAWC,GAClDh7F,KAAKs7F,UAAU16D,EAAY3B,SAAU87D,EAAWlrC,GAChD5sD,EAAOsR,OAASvU,KAAKu7F,oBAAoBR,EAAWC,GACpDI,EAAkBL,EAAgB,QAAMC,EAAc,OAI1D,OAFA/3F,EAAOkhB,IAAOi3E,GAAkB7uB,EAAMnnD,OAAON,SAAWkjC,gBAAc8sC,QACtE7xF,EAAO09B,KAAOC,EACP39B,GAMXq3F,EAAc36F,UAAU07F,cAAgB,SAAUnsB,EAAewrB,GAC7D,IAAIz3F,EAASisE,EAGb,OAFAjsE,EAAO0P,EAAK1P,EAAO0P,EAAI+nF,EAAkB/nF,EACzC1P,EAAOsG,OAAUtG,EAAOsG,OAASmxF,EAAkB/nF,EAC5C1P,GAMXq3F,EAAc36F,UAAU27F,UAAY,SAAUl+E,EAAG8xD,EAAerf,GAC5D,IAAI1wB,EAAS/hB,EAAE3a,OACf,IACI2a,EAAEo1C,QAAQ0c,GACVlvE,KAAK8T,QAAQ0nF,mBAAmBp+E,EAAG,IAAIiC,EAAOwwC,EAAcn9C,EAAGm9C,EAAcl9C,YAG7EyK,EAAEkiB,QAAQH,KAOlBm7D,EAAc36F,UAAUs7F,0BAA4B,SAAUr6D,EAAam6D,EAAWxuB,GAClF,IAAIx1C,EAAW6J,EAAY3B,SAAS/Z,WAMpC,OALA61E,EAAUzxF,MAASyxF,EAAUzxF,MAAQ,EAAKyxF,EAAUzxF,MAASytB,EAASztB,MAAQyxF,EAAUroF,EACxFqoF,EAAUxxF,OAAUwxF,EAAUxxF,OAAS,EAAKwxF,EAAUxxF,OAAUwtB,EAASxtB,OAASwxF,EAAUpoF,EACxF3S,KAAK22F,YACLoE,EAAUxxF,OAAUwxF,EAAUxxF,OAASvJ,KAAKy7F,mBAEzCV,GAMXT,EAAc36F,UAAU47F,oBAAsB,SAAUrsB,EAAewrB,GACnE,IAAIz3F,EAASisE,EAEb,OADAjsE,EAAOsG,OAASsJ,KAAKJ,IAAIxP,EAAOsG,OAAQmxF,EAAkBnxF,QACnDtG,GAMXq3F,EAAc36F,UAAUw7F,aAAe,SAAUjsB,EAAewrB,GAE5D,OADYA,EAAkBnxF,QAAU2lE,EAAc3lE,QAQ1D+wF,EAAc9qF,MAAQ,EAMtB8qF,EAAcoB,UAAY,EAM1BpB,EAAcn8C,MAAO,EAMrBm8C,EAAcqB,YAAc,EACrBrB,GACTluB,IAMEwuB,GAAmC,WAGnC,OAFA,gBC5QAhmF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAmBxCwmF,GAAiC,SAAUpmF,GAE3C,SAASomF,IACL,OAAkB,OAAXpmF,GAAmBA,EAAOqmF,MAAM77F,KAAMo0E,YAAcp0E,KAiD/D,OAnDA4U,GAAUgnF,EAAiBpmF,GAS3BomF,EAAgBj8F,UAAUg7F,UAAY,WAElC,OADW36F,KAAK87F,qBAOpBF,EAAgBj8F,UAAU67F,mBAAqB,SAAUv8D,EAAUc,GAC/D,GAAiB,MAAZd,EACD,MAAM,IAAI3oB,MAAM,mCAEpBtW,KAAK+7F,gBAAgB98D,EAAUc,EAASrtB,EAAGqtB,EAASptB,IAMxDipF,EAAgBj8F,UAAUo8F,gBAAkB,SAAU98D,EAAUvsB,EAAGC,GAC/D,IAAIusB,EAAmB,KAANxsB,GAAmB,KAANC,EAC1BwsB,EAAS,KAETD,IAEAC,EAASF,EAASx8B,OAClBw8B,EAASG,mBAAmB1sB,EAAGC,IAEnC3S,KAAKq/B,aAAaJ,GACdC,GAEAD,EAASK,QAAQH,IAOzBy8D,EAAgBj8F,UAAUmlB,OAAS,SAAUynD,GAGzC,OAFe,IAAI+tB,GAAct6F,MACX8kB,OAAOynD,IAG1BqvB,GACTntB,ICxEE75D,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAoBxC4mF,GAAgC,SAAUxmF,GAM1C,SAASwmF,EAAehgE,GACpB,IAAItmB,EAAQF,EAAO3V,KAAKG,OAASA,KAIjC,YAHmB,IAARg8B,IACPtmB,EAAMumF,KAAOjgE,GAEVtmB,EAiBX,OA3BAd,GAAUonF,EAAgBxmF,GAY1B9V,OAAOuC,eAAe+5F,EAAer8F,UAAW,OAM5CuC,IAAK,WACD,OAAOlC,KAAKi8F,MAEhB75F,IAAK,SAAU7B,GACXP,KAAKi8F,KAAO17F,GAEhB8B,YAAY,EACZC,cAAc,IAEX05F,GACTJ,ICjDEhnF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAsBxC8mF,GAAgC,SAAU1mF,GAM1C,SAAS0mF,EAAe18E,EAAMC,GAC1B,IAAI/J,EAAQF,EAAO3V,KAAKG,OAASA,KAgBjC,OAVA0V,EAAMqrE,OAAS,UACK,IAATvhE,IAGFA,aAAgBmb,GACrBjlB,EAAQF,EAAO3V,KAAKG,KAAMwf,IAASxf,KAGnC0V,EAAMqrE,OAASthE,GAEZ/J,EAyBX,OA/CAd,GAAUsnF,EAAgB1mF,GAwB1B9V,OAAOuC,eAAei6F,EAAev8F,UAAW,SAM5CuC,IAAK,WACD,OAAOlC,KAAK+gF,QAEhB3+E,IAAK,SAAU7B,GACXP,KAAK+gF,OAASxgF,GAElB8B,YAAY,EACZC,cAAc,IAOlB45F,EAAev8F,UAAUw8F,UAAY,WACjC,OAAwB,MAAfn8F,KAAK+gF,QAAgC,MAAZ/gF,KAAKg8B,IAAgB,IAAIrB,GAAO,IAAIhe,EAAS,EAAG,EAAG,IAAM3c,KAAKg8B,KAE7FkgE,GACTF,ICvEEpnF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GA2BxCgnF,GAAyB,SAAU5mF,GAOnC,SAAS4mF,EAAQ58E,EAAMC,EAAMC,EAAMC,GAC/B,IAAIjK,EAAQF,EAAO3V,KAAKG,OAASA,KAyDjC,OAnDA0V,EAAM2mF,QAAU,KAKhB3mF,EAAM4mF,WAAa,KAKnB5mF,EAAM6mF,cAAe,EAKrB7mF,EAAM8mF,UAAYngF,cAAYi0C,UAK9B56C,EAAM+mF,YAAa,EAKnB/mF,EAAMgnF,OAAQ,OACM,IAATl9E,IAGFA,aAAgBmb,IACrBjlB,EAAQF,EAAO3V,KAAKG,KAAMwf,IAASxf,KAC/Byf,aAAgBW,GAChB1K,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAMC,IAASzf,MACnC23D,SAAWj4C,EAEH,OAATD,QAAiC,IAATA,GAAiC,OAATC,QAAiC,IAATA,GAC7EhK,EAAMinF,QAAQl9E,EAAMC,IAGnBF,aAAgBY,GACrB1K,EAAQF,EAAO3V,KAAKG,KAAMwf,IAASxf,KACtB,OAATyf,QAAiC,IAATA,IACxB/J,EAAMiiD,SAAWl4C,GAER,OAATC,QAAiC,IAATA,GAAiC,OAATC,QAAiC,IAATA,GACxEjK,EAAMinF,QAAQj9E,EAAMC,IAIxBjK,EAAMinF,QAAQn9E,EAAMC,IAEjB/J,EA4ZX,OA5dAd,GAAUwnF,EAAS5mF,GAkEnB9V,OAAOuC,eAAem6F,EAAQz8F,UAAW,YAMrCuC,IAAK,WACD,OAAOlC,KAAKw8F,WAEhBp6F,IAAK,SAAU7B,GACXP,KAAKw8F,UAAYj8F,GAErB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAem6F,EAAQz8F,UAAW,cAKrCuC,IAAK,WACD,OAAOlC,KAAKu4D,QAEhBl2D,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAem6F,EAAQz8F,UAAW,aAKrCuC,IAAK,WACD,OAAOlC,KAAKwjD,OAEhBnhD,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAem6F,EAAQz8F,UAAW,cAKrCuC,IAAK,WACD,IAAIiG,EAAQ,EAIZ,OAHqB,MAAhBnI,KAAKq8F,UACNl0F,EAAQnI,KAAKq8F,QAAQr7F,QAElBmH,GAEX9F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAem6F,EAAQz8F,UAAW,aAKrCuC,IAAK,WACD,OAAOlC,KAAK48F,gBAEhBv6F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAem6F,EAAQz8F,UAAW,UAKrCuC,IAAK,WAID,OAHqB,MAAhBlC,KAAKq8F,UACNr8F,KAAKq8F,YAEFr8F,KAAKq8F,SAEhBh6F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAem6F,EAAQz8F,UAAW,SAKrCuC,IAAK,WAID,OAHwB,MAAnBlC,KAAKs8F,aACNt8F,KAAKs8F,eAEFt8F,KAAKs8F,YAEhBj6F,YAAY,EACZC,cAAc,IAElB85F,EAAQz8F,UAAUygC,KAAO,SAAU5gB,EAAMC,EAAMC,EAAMC,GACjD,GAAIF,aAAgBJ,QAAgC,IAAfI,EAAKnW,YAAyC,IAAToW,EACtE,OAAO1f,KAAKg/B,WAAWxf,EAAMC,EAAK/M,EAAG+M,EAAK9M,GAEzC,GAAI8M,aAAgBF,QAAoC,IAAfE,EAAKnW,YAAyC,IAAToW,EAC/E,OAAO1f,KAAKg/B,WAAWxf,EAAMC,EAAM,MAElC,GAAoB,iBAATA,GAAqC,iBAATC,QAAqC,IAATC,EACpE,OAAO3f,KAAKg/B,WAAWxf,EAAMC,EAAMC,EAAM,MAExC,GAAID,aAAgBJ,GAAUK,aAAgBmtD,GAC/C,OAAO7sE,KAAKg/B,WAAWxf,EAAMC,EAAK/M,EAAG+M,EAAK9M,EAAG+M,GAE5C,GAAoB,iBAATD,IAAsBE,aAAgBktD,IAA2B,MAARltD,IAAiC,iBAATD,EAAmB,CAChH,IAAIm9E,EAAcr9E,EAAKyf,SAAS/Z,WAAW5b,MAAQmW,EAC/C6rE,EAAa,IAAI/rE,EAAWE,EAAMC,EAAMm9E,EAAY,GACxD,OAAO78F,KAAKg/B,WAAWxf,EAAM8rE,EAAY3rE,GAExC,OACM3f,KAAKg/B,WAAWxf,EAAMC,EAAMC,IAM3C08E,EAAQz8F,UAAUm9F,OAAS,SAAUt9E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GAC/D,GAAIxF,aAAgBD,EAChBvf,KAAK88F,OAAOt9E,EAAK9M,EAAG8M,EAAK7M,EAAG6M,EAAKlW,MAAOkW,EAAKjW,OAAQkW,EAAMC,QAI3D,IAAK,IADD64C,EAASv4D,KAAK+8F,mBAAmBv9E,EAAMC,EAAOA,EAAOC,EAAQD,EAAOE,EAAOoF,EAAMC,GAC5E9hB,EAAI,EAAGA,EAAIq1D,EAAOv3D,OAAQkC,GAAQ,EAAG,CAE1C,IAAIw6B,GAAS66B,EAAOr1D,GAAIq1D,EAAOr1D,EAAI,GAAIq1D,EAAOr1D,EAAI,GAAIq1D,EAAOr1D,EAAI,GAAIq1D,EAAOr1D,EAAI,GAAIq1D,EAAOr1D,EAAI,GAAIq1D,EAAOr1D,EAAI,GAAIq1D,EAAOr1D,EAAI,IAC7HlD,KAAKujF,UAAU7lD,EAAOwqB,gBAAc+P,WAKhDmkC,EAAQz8F,UAAUq9F,UAAY,SAAUx9E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,EAAMgqC,GAC9E,GAAIzvC,aAAgBH,GAAUI,aAAgBJ,GAAUK,aAAgBL,GAAUM,aAAgBN,EAC9Frf,KAAKg9F,UAAUx9E,EAAK9M,EAAG8M,EAAK7M,EAAG8M,EAAK/M,EAAG+M,EAAK9M,EAAG+M,EAAKhN,EAAGgN,EAAK/M,EAAGgN,EAAKjN,EAAGiN,EAAKhN,OAE3E,CACD,IAAI4lD,KACJA,EAAOr3D,KAAKse,GACZ+4C,EAAOr3D,KAAKue,GACZ84C,EAAOr3D,KAAKwe,GACZ64C,EAAOr3D,KAAKye,GACZ44C,EAAOr3D,KAAK6jB,GACZwzC,EAAOr3D,KAAK8jB,GACZuzC,EAAOr3D,KAAK+jB,GACZszC,EAAOr3D,KAAK+tD,GACZjvD,KAAKujF,UAAUhrB,EAAQrQ,gBAAc+P,WAG7CmkC,EAAQz8F,UAAUs9F,WAAa,SAAUz9E,EAAMC,EAAMC,EAAMC,GACnDH,aAAgBD,EAChBvf,KAAKi9F,WAAWz9E,EAAK9M,EAAG8M,EAAK7M,EAAG6M,EAAKlW,MAAOkW,EAAKjW,SAGjDvJ,KAAKk9F,cACLl9F,KAAK88F,OAAOt9E,EAAMC,EAAMC,EAAMC,EAAM,EAAG,KACvC3f,KAAKm9F,gBAGbf,EAAQz8F,UAAUy9F,QAAU,SAAU59E,EAAMC,EAAMC,EAAMC,GACpD,GAAIH,aAAgBH,GAAUI,aAAgBJ,EAC1Crf,KAAKo9F,QAAQ59E,EAAK9M,EAAG8M,EAAK7M,EAAG8M,EAAK/M,EAAG+M,EAAK9M,OAEzC,CACD,IAAI4lD,KACJA,EAAOr3D,KAAKse,GACZ+4C,EAAOr3D,KAAKue,GACZ84C,EAAOr3D,KAAKwe,GACZ64C,EAAOr3D,KAAKye,GACZ3f,KAAKujF,UAAUhrB,EAAQrQ,gBAAcmQ,QAG7C+jC,EAAQz8F,UAAUg9F,QAAU,SAAUn9E,EAAMC,GACxC,GAAID,aAAgB48E,EAChBp8F,KAAK28F,QAAQn9E,EAAKi4C,WAAYj4C,EAAKk4C,eAElC,CACD,GAAa,MAARl4C,EACD,MAAM,IAAIlJ,MAAM,oCAEpB,GAAa,MAARmJ,EACD,MAAM,IAAInJ,MAAM,mCAGpB,GADYkJ,EAAKxe,SACFye,EAAKze,OAChB,MAAM,IAAIsV,MAAM,oDAI5B8lF,EAAQz8F,UAAU09F,OAAS,SAAU79E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GAC3DxF,aAAgBD,EAChBvf,KAAKq9F,OAAO79E,EAAK9M,EAAG8M,EAAK7M,EAAG6M,EAAKlW,MAAOkW,EAAKjW,OAAQkW,EAAMC,IAG3D1f,KAAKk9F,cACLl9F,KAAK88F,OAAOt9E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GAC1ChlB,KAAKs9F,SAAS,IAAIj+E,EAAQG,EAAQE,EAAO,EAAMD,EAAQE,EAAO,GAAMuoC,gBAAcmQ,MAClFr4D,KAAKm9F,gBAObf,EAAQz8F,UAAU49F,WAAa,SAAUhlC,GACxBA,EAAOv3D,OAApB,IACIqJ,KACJrK,KAAKk9F,cACL,IAAK,IAAIh6F,EAAI,EAAGA,EAAIq1D,EAAOv3D,OAAQkC,IAC/BmH,EAAEnJ,KAAKq3D,EAAOr1D,GAAGwP,GACjBrI,EAAEnJ,KAAKq3D,EAAOr1D,GAAGyP,GAErB3S,KAAKujF,UAAUl5E,EAAG69C,gBAAcmQ,MAChCr4D,KAAKm9F,eAETf,EAAQz8F,UAAU69F,aAAe,SAAUh+E,EAAM7M,EAAGrJ,EAAOC,GACvD,GAAIiW,aAAgBD,EAChBvf,KAAKw9F,aAAah+E,EAAK9M,EAAG8M,EAAK7M,EAAG6M,EAAKlW,MAAOkW,EAAKjW,YAElD,CACD,IAAIgvD,KACJv4D,KAAKk9F,cACL3kC,EAAOr3D,KAAKse,GACZ+4C,EAAOr3D,KAAKyR,GACZ4lD,EAAOr3D,KAAMse,EAAOlW,GACpBivD,EAAOr3D,KAAKyR,GACZ4lD,EAAOr3D,KAAMse,EAAOlW,GACpBivD,EAAOr3D,KAAMyR,EAAIpJ,GACjBgvD,EAAOr3D,KAAKse,GACZ+4C,EAAOr3D,KAAMyR,EAAIpJ,GACjBvJ,KAAKujF,UAAUhrB,EAAQrQ,gBAAcmQ,MACrCr4D,KAAKm9F,gBAObf,EAAQz8F,UAAUu9F,YAAc,WAC5Bl9F,KAAKu8F,cAAe,GAMxBH,EAAQz8F,UAAU89F,gBAAkB,WAEhC,IAAK,IADDC,EAAY19F,KAAKy3D,WAAW,GACvBv0D,EAAI,EAAGA,EAAIlD,KAAKs8F,WAAWt7F,OAAQkC,IAAK,CAC7C,IAAI41D,EAAO94D,KAAKwjD,MAAMtgD,GAClB4vF,GAAO,EACC,IAAN5vF,GAAa41D,IAAO5Q,gBAAc8P,OACpCh4D,KAAKm9F,YAAaj6F,EAAI,GACtB4vF,GAAO,GAEA5vF,IAAOlD,KAAKs8F,WAAWt7F,OAAS,IAAS8xF,GAAQ9yF,KAAK08F,OACxDgB,EAAUhrF,IAAM1S,KAAKy3D,WAAWv0D,GAAGyP,GACpC3S,KAAKm9F,YAAYj6F,KASjCk5F,EAAQz8F,UAAUi9F,aAAe,WAC7B,IAAIe,EAAY,IAAIt+E,EAAO,EAAG,GAC1BlX,EAAQnI,KAAK49F,WAKjB,OAJMz1F,EAAQ,GAAuB,MAAhBnI,KAAKq8F,UACtBsB,EAAUjrF,EAAI1S,KAAKq8F,QAASl0F,EAAQ,GAAIuK,EACxCirF,EAAUhrF,EAAI3S,KAAKq8F,QAASl0F,EAAQ,GAAIwK,GAErCgrF,GAMXvB,EAAQz8F,UAAUo9F,mBAAqB,SAAU3nC,EAAIsD,EAAI/6B,EAAIC,EAAIu7B,EAAIC,GACjE,GAAKhE,EAAKz3B,EAAK,CACX,IAAI07B,OAAM,EACVA,EAAMjE,EACNA,EAAKz3B,EACLA,EAAK07B,EAET,GAAKz7B,EAAK86B,EAAK,CACPW,OAAM,EACVA,EAAMX,EACNA,EAAK96B,EACLA,EAAKy7B,EAET,IAAIwkC,EACAtkC,EACC1mD,KAAK+rC,IAAIwa,IAAO,IACjBykC,EAAYzkC,EACZG,EAAe,GAIfskC,EAAazkC,GADbG,EAAgB1mD,KAAKwiC,KAAMxiC,KAAK+rC,IAAIwa,GAAM,KAU9C,IAAK,IAPDI,GAASpE,EAAKz3B,GAAM,EACpB87B,GAASf,EAAK96B,GAAM,EACpB87B,GAAO/7B,EAAKy3B,GAAM,EAClBuE,GAAO/7B,EAAK86B,GAAM,EAClBkB,EAAYikC,GAAahrF,KAAKypB,GAAK,KACnCu9B,EAAShnD,KAAK+rC,IAAI,EAAM,GAAO,EAAM/rC,KAAKmqB,IAAI48B,IAAY/mD,KAAKoqB,IAAI28B,IACnEkkC,KACK56F,EAAI,EAAIA,EAAIq2D,EAAer2D,IAAK,CACrC,IAAI66F,GAAY5kC,EAAMj2D,EAAI26F,IAAehrF,KAAKypB,GAAK,KAC/C0hE,GAAY7kC,GAAOj2D,EAAI,GAAK26F,IAAehrF,KAAKypB,GAAK,KACrD29B,EAAQpnD,KAAKmqB,IAAI+gE,GACjB7jC,EAAQrnD,KAAKmqB,IAAIghE,GACjB7jC,EAAQtnD,KAAKoqB,IAAI8gE,GACjB3jC,EAAQvnD,KAAKoqB,IAAI+gE,GAChBH,EAAY,EAEbC,EAAU58F,KAAMs4D,EAAQE,EAAKO,EAASR,EAAQE,EAAKQ,EAASX,EAAQE,GAAMO,EAAQJ,EAAQM,GAAWV,EAAQE,GAAMQ,EAAQN,EAAQI,GAAWT,EAAQE,GAAMQ,EAAQL,EAAQO,GAAWX,EAAQE,GAAMS,EAAQP,EAAQK,GAAWV,EAAQE,EAAKQ,EAAST,EAAQE,EAAKS,GAInQ0jC,EAAU58F,KAAMs4D,EAAQE,EAAKO,EAASR,EAAQE,EAAKQ,EAASX,EAAQE,GAAMO,EAAQJ,EAAQM,GAAWV,EAAQE,GAAMQ,EAAQN,EAAQI,GAAWT,EAAQE,GAAMQ,EAAQL,EAAQO,GAAWX,EAAQE,GAAMS,EAAQP,EAAQK,GAAWV,EAAQE,EAAKQ,EAAST,EAAQE,EAAKS,GAG3Q,OAAO0jC,GAMX1B,EAAQz8F,UAAUm8F,kBAAoB,WAClC,IAAIvjC,EAASv4D,KAAKy3D,WACdljD,EAAS,IAAIgL,EAAW,EAAG,EAAG,EAAG,GACrC,GAAKg5C,EAAOv3D,OAAS,EAAI,CAKrB,IAAK,IAJDi9F,EAAO1lC,EAAO,GAAG7lD,EACjBwrF,EAAO3lC,EAAO,GAAG7lD,EACjByrF,EAAO5lC,EAAO,GAAG5lD,EACjByrF,EAAO7lC,EAAO,GAAG5lD,EACZzP,EAAI,EAAGA,EAAIq1D,EAAOv3D,OAAQkC,IAAK,CACpC,IAAIw6B,EAAQ66B,EAAOr1D,GACnB+6F,EAAOprF,KAAKJ,IAAIirB,EAAMhrB,EAAGurF,GACzBC,EAAOrrF,KAAKsV,IAAIuV,EAAMhrB,EAAGwrF,GACzBC,EAAOtrF,KAAKJ,IAAIirB,EAAM/qB,EAAGwrF,GACzBC,EAAOvrF,KAAKsV,IAAIuV,EAAM/qB,EAAGyrF,GAE7B7pF,EAAS,IAAIgL,EAAW0+E,EAAME,EAAOD,EAAOD,EAAQG,EAAOD,GAE/D,OAAO5pF,GAOX6nF,EAAQz8F,UAAU0/B,aAAe,SAAUJ,GACvC,GAAiB,MAAZA,EACD,MAAM,IAAI3oB,MAAM,mCAEpB2oB,EAASq4B,SAASt3D,KAAKm8F,YAAan8F,KAAKygB,MAAOzgB,OAEpDo8F,EAAQz8F,UAAU4jF,UAAY,SAAUhrB,EAAQ8lC,EAAWhI,EAAYC,GACnE,QAA0B,IAAfD,QAAkD,IAAbC,EAC5Ct2F,KAAKujF,UAAUhrB,EAAQ8lC,EAAW,EAAG9lC,EAAOv3D,aAG5C,IAAK,IAAIkC,EAAImzF,EAAYnzF,EAAIozF,EAAUpzF,IAAK,CACxC,IAAIw6B,EAAQ,IAAIre,EAAOk5C,EAAOr1D,GAAIq1D,EAAQr1D,EAAI,IACzCA,IAAMmzF,EACDr2F,KAAK49F,YAAc,GAAM59F,KAAKu8F,cAChCv8F,KAAKs9F,SAAS5/D,EAAOwqB,gBAAc8P,OACnCh4D,KAAKu8F,cAAe,GAEb7+D,EAAMhrB,IAAM1S,KAAK29F,UAAUjrF,GAAOgrB,EAAM/qB,IAAM3S,KAAK29F,UAAUhrF,GAAO3S,KAAKy8F,WAG1E/+D,EAAMhrB,IAAM1S,KAAK29F,UAAUjrF,GAAOgrB,EAAM/qB,IAAM3S,KAAK29F,UAAUhrF,GACnE3S,KAAKs9F,SAAS5/D,EAAOwqB,gBAAc+P,SAHnCj4D,KAAKs9F,SAAS5/D,EAAOwqB,gBAAcmQ,MAOvCr4D,KAAKs9F,SAAS5/D,EAAO2gE,GAEzBn7F,MAUZk5F,EAAQz8F,UAAU29F,SAAW,SAAU5/D,EAAO2gE,GAC1Cr+F,KAAKu4D,OAAOr3D,KAAKw8B,GACjB19B,KAAKwjD,MAAMtiD,SAEfk7F,EAAQz8F,UAAUw9F,YAAc,SAAU3tF,GACtC,QAAqB,IAAVA,EACFxP,KAAK49F,WAAa,GACnB59F,KAAKm9F,YAAYn9F,KAAK49F,WAAa,GAEvC59F,KAAKk9F,kBAEJ,CACD,GAAK1tF,EAAQ,EACT,MAAM,IAAI8G,MAAM,8BAEpB,IAAIwiD,EAAO94D,KAAKwjD,MAAMh0C,GACtBspD,GAAW5Q,gBAAcuQ,aACzBz4D,KAAKwjD,MAAMh0C,OAGZ4sF,GACTF,ICzfEtnF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAoBxCkpF,GAAkC,SAAU9oF,GAG5C,SAAS8oF,EAAiB9+E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,GACpD,IAAItP,EAAQF,EAAO3V,KAAKG,OAASA,KAyBjC,OAnBA0V,EAAMnB,OAAS,IAAIgL,EAAW,EAAG,EAAG,EAAG,QACnB,IAATC,IAGFA,aAAgBmb,IACrBjlB,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAMC,IAASzf,MAE/BuU,OADNmL,aAAgBH,EACDG,EAGA,IAAIH,EAAWG,EAAMC,EAAMoF,EAAMC,GAIpDtP,EAAMnB,OADDiL,aAAgBD,EACNC,EAGA,IAAID,EAAWC,EAAMC,EAAMC,EAAMC,IAE7CjK,EA+DX,OA3FAd,GAAU0pF,EAAkB9oF,GA8B5B9V,OAAOuC,eAAeq8F,EAAiB3+F,UAAW,KAM9CuC,IAAK,WACD,OAAOlC,KAAKuU,OAAO7B,GAEvBtQ,IAAK,SAAU7B,GACXP,KAAKuU,OAAO7B,EAAInS,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq8F,EAAiB3+F,UAAW,KAK9CuC,IAAK,WACD,OAAOlC,KAAKuU,OAAO5B,GAEvBvQ,IAAK,SAAU7B,GACXP,KAAKuU,OAAO5B,EAAIpS,GAEpB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq8F,EAAiB3+F,UAAW,SAK9CuC,IAAK,WACD,OAAOlC,KAAKuU,OAAOjL,OAEvBlH,IAAK,SAAU7B,GACXP,KAAKuU,OAAOjL,MAAQ/I,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAeq8F,EAAiB3+F,UAAW,UAK9CuC,IAAK,WACD,OAAOlC,KAAKuU,OAAOhL,QAEvBnH,IAAK,SAAU7B,GACXP,KAAKuU,OAAOhL,OAAShJ,GAEzB8B,YAAY,EACZC,cAAc,IAGlBg8F,EAAiB3+F,UAAUm8F,kBAAoB,WAC3C,OAAO97F,KAAKuU,QAET+pF,GACTpC,ICjHEtnF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAoBxCmpF,GAAgC,SAAU/oF,GAG1C,SAAS+oF,EAAe/+E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,EAAMgqC,GAC9D,IAAIv5C,EAAQF,EAAO3V,KAAKG,OAASA,KAqCjC,OA/BA0V,EAAM8oF,WAAa,EAKnB9oF,EAAMkjD,WAAa,OACC,IAATp5C,IAGFA,aAAgBD,QAA8B,IAATE,QAAwC,IAATC,IACzEhK,EAAQF,EAAO3V,KAAKG,KAAMwf,IAASxf,MAC7Bw+F,WAAa/+E,EACnB/J,EAAMkjD,WAAal5C,GAEdF,aAAgBmb,GACjBjb,aAAgBH,IAChB7J,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAMC,EAAMC,IAAS1f,MACzCw+F,WAAa7+E,EACnBjK,EAAMkjD,WAAa7zC,KAGnBrP,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,IAAShlB,MAC3Dw+F,WAAav5E,EACnBvP,EAAMkjD,WAAa3J,KAIvBv5C,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAMC,EAAMC,EAAMC,IAAS3f,MAC/Cw+F,WAAaz5E,EACnBrP,EAAMkjD,WAAa5zC,IAEhBtP,EAEX,OA1CAd,GAAU2pF,EAAgB/oF,GA0CnB+oF,GACTD,IChEE1pF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAwBxCqpF,GAAwB,SAAUjpF,GAGlC,SAASipF,EAAOj/E,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,GAChD,IAAIvP,EAAQ1V,KAwBZ,YAvBoB,IAATwf,EACP9J,EAAQF,EAAO3V,KAAKG,OAASA,KAExBwf,aAAgBD,EACrB7J,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAMC,EAAMC,IAAS1f,KAE1Cwf,aAAgBmb,GACjBlb,aAAgBF,EAChB7J,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAM,KAAMC,EAAMC,EAAMC,IAAS3f,UAEtC,IAATglB,QAAwC,IAATC,EAC3CvP,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAM,KAAM,EAAG,EAAGC,EAAMC,EAAMC,EAAMoF,IAAS/kB,UAElD,IAATglB,QAAwC,IAATC,IAC3CvP,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAM,KAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,EAAMC,IAASjlB,WAG5D,IAATwf,QAAwC,IAATuF,QAAwC,IAATC,EAC1EtP,EAAQF,EAAO3V,KAAKG,KAAM,EAAG,EAAGwf,EAAMC,EAAMC,EAAMC,IAAS3f,UAEtC,IAATwf,QAAwC,IAATuF,QAAwC,IAATC,IAC1EtP,EAAQF,EAAO3V,KAAKG,KAAMwf,EAAMC,EAAMC,EAAMC,EAAMoF,EAAMC,IAAShlB,MAE9D0V,EAoCX,OA/DAd,GAAU6pF,EAAQjpF,GA6BlBipF,EAAO9+F,UAAUygC,KAAO,SAAUs+D,EAAOj/E,EAAMC,EAAMC,GACjD,GAAIF,aAAgBJ,QAAgC,IAAfI,EAAKnW,YAAyC,IAAToW,EACtE,OAAO1f,KAAKg/B,WAAW0/D,EAAOj/E,EAAK/M,EAAG+M,EAAK9M,GAE1C,GAAI8M,aAAgBF,QAAoC,IAAfE,EAAKnW,YAAyC,IAAToW,EAC/E,OAAO1f,KAAKg/B,WAAW0/D,EAAOj/E,EAAM,MAEnC,GAAoB,iBAATA,GAAqC,iBAATC,QAAqC,IAATC,EACpE,OAAO3f,KAAKg/B,WAAW0/D,EAAOj/E,EAAMC,EAAM,MAEzC,GAAID,aAAgBJ,GAAUK,aAAgBmtD,GAC/C,OAAO7sE,KAAKg/B,WAAW0/D,EAAOj/E,EAAK/M,EAAG+M,EAAK9M,EAAG+M,GAE7C,GAAoB,iBAATD,IAAsBE,aAAgBktD,IAA2B,MAARltD,IAAiC,iBAATD,EAAmB,CAChH,IAAIm9E,EAAc6B,EAAMz/D,SAAS/Z,WAAW5b,MAAQmW,EAChD6rE,EAAa,IAAI/rE,EAAWE,EAAMC,EAAMm9E,EAAY,GACxD,OAAO78F,KAAKg/B,WAAW0/D,EAAOpT,EAAY3rE,GAG1C,OAAO3f,KAAKg/B,WAAW0/D,EAAOj/E,EAAMC,IAS5C++E,EAAO9+F,UAAU0/B,aAAe,SAAUJ,GACtC,GAAiB,MAAZA,EACD,MAAM,IAAI3oB,MAAM,oCAEpB2oB,EAAS24B,QAAQ53D,KAAKm8F,YAAan8F,KAAKuU,OAAQvU,KAAKw+F,WAAYx+F,KAAK44D,aAEnE6lC,GACTF,ICzFE3pF,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBnV,OAAOsV,iBAChBC,wBAA2BC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI1K,KAAK0K,EAAOA,EAAEI,eAAe9K,KAAIyK,EAAEzK,GAAK0K,EAAE1K,MACpDyK,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASK,IAAOpV,KAAKqV,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnV,UAAkB,OAANoV,EAAarV,OAAO4V,OAAOP,IAAMK,EAAGzV,UAAYoV,EAAEpV,UAAW,IAAIyV,IAV3C,GAuBxCupF,GAAiC,SAAUnpF,GAE3C,SAASmpF,EAAgBpjD,EAAc75C,EAAMsnB,GACzC,IAAItT,EAAQF,EAAO3V,KAAKG,KAAM0B,IAAS1B,KAiBvC,OAZA0V,EAAMgmC,aAAc,EAKpBhmC,EAAMwkC,WAAY,OACJ/gC,IAAV6P,EACAtT,EAAMkpF,mBAAmBrjD,EAAcvyB,GAGvCtT,EAAMkpF,mBAAmBrjD,EAAct6B,eAAaiI,SAEjDxT,EA2HX,OA9IAd,GAAU+pF,EAAiBnpF,GAqB3BmpF,EAAgBh/F,UAAUuqB,aAAe,SAAUvhB,GAG/C,OAFa,GAIjBg2F,EAAgBh/F,UAAU8mB,aAAe,SAAU3C,EAAMsB,GACrD,IAAI9b,EAAQ,EACZ,GAAe,OAAX8b,QAAqC,IAAXA,GAA0BA,EAAOuiC,gBAAkBjrC,mBAAiBkG,KAAM,CAEpGtZ,EADkBtJ,KAAK6+F,oBAAoB/6E,EAAcxa,EAAO8b,GAC5C9b,WAGpBA,EAAQtJ,KAAKynD,aAAahhC,aAAa3C,GAE3C,IAAIpiB,EAAO1B,KAAKqpB,QAAQkX,QAAQnb,GAGhC,OAFA9b,GAAUyf,EAAQ2B,mBAAqBhpB,EACvC4H,EAAQtJ,KAAKsqB,oBAAoBxG,EAAMsB,EAAQ9b,IAMnDq1F,EAAgBh/F,UAAUs6C,aAAe,SAAU1R,EAAUnjB,GACzD,IAAI05E,EAAY9+F,KAAKynD,aAAaxN,aAAa1R,GAG/C,OADAu2D,GAAc,KADH9+F,KAAKqpB,QAAQkX,QAAQnb,IAKpCu5E,EAAgBh/F,UAAUi/F,mBAAqB,SAAUrjD,EAAcvyB,GACnEhpB,KAAKynD,aAAe,IAAInM,GAAoBC,EAAcv7C,KAAK0B,MAC/D1B,KAAK++F,eAAe/1E,GACpBhpB,KAAK4qE,uBAET+zB,EAAgBh/F,UAAUo/F,eAAiB,SAAU/1E,GACjD,IAAIg2E,EAASh/F,KAAKynD,aAAatL,WAAWpU,SACD,IAApC/e,EAAQ/H,eAAayI,aACtBs1E,GAAU/9E,eAAayI,WAEc,IAApCV,EAAQ/H,eAAawI,aACtBu1E,GAAU/9E,eAAawI,WAE3BzpB,KAAKopB,SAAS41E,IAElBL,EAAgBh/F,UAAUirE,oBAAsB,WAC5C,IAAIq0B,EAAY,KACZ1yE,GAAY2yE,cAEZD,EAAY1yE,GAAYk6C,MAAMlB,OAAOvlE,OAEzC,IAAIqqB,EAAY,KAEhB,GAAkB,OAAd40E,QAAoC9lF,IAAd8lF,EAAyB,CAE/C50E,EAAY40E,EAAU90E,eACtB,IAAId,EAAU41E,EAAU51E,SACxBA,EAAUA,EAAQxmB,SACVnB,KAAO1B,KAAK0B,KACpB1B,KAAKqpB,QAAUA,EACfrpB,KAAKynD,aAAew3C,EAAUx3C,kBAGb,MAAbw3C,IACIj/F,KAAKynD,wBAAwBnM,KAC7Bt7C,KAAKynD,aAAa03C,QAAUn/F,KAAK07C,aAErC17C,KAAKynD,aAAapO,kBAClBhvB,EAAYrqB,KAAKynD,aAAat9B,eAC9BnqB,KAAKqpB,QAAUrpB,KAAKynD,aAAap+B,SAGzCrpB,KAAKqpB,QAAQ+1E,eAAgB,EAC7Bp/F,KAAKoqB,aAAaC,IAMtBs0E,EAAgBh/F,UAAUo/C,WAAa,SAAU1oC,GAC7C,IAAIqpB,EAAe1/B,KAAKynD,aACJ,MAAhB/nB,GACAA,EAAaqf,WAAW1oC,IAGhC3W,OAAOuC,eAAe08F,EAAgBh/F,UAAW,WAK7CuC,IAAK,WACD,OAAOlC,KAAKk6C,WAEhB73C,YAAY,EACZC,cAAc,IAKlBq8F,EAAgBh/F,UAAUk/F,oBAAsB,SAAU/6E,EAAcxa,EAAO8b,GAI3E9b,EAAQ,EACR,IAAI+1F,EAAe,KAGfp8F,GAFY,IAAI6jD,IAEGQ,cAAcxjC,EAAM9jB,KAAOolB,EAAOuiC,gBAAkBjrC,mBAAiBi3C,YAAqC0rC,GAAc,GAC3IC,EAAcr8F,EAAOijB,QAEzB,GADAm5E,EAAep8F,EAAOskD,OAClB+3C,GAAgC,OAAjBD,EAEf,IAAK,IADDnjD,EAAYl8C,KAAKynD,aAAavL,UACzBh5C,EAAI,EAAGkR,EAAMirF,EAAar+F,OAAQkC,EAAIkR,EAAKlR,IAAK,CACrD,IAAI2zC,EAAawoD,EAAan8F,GAC1BulC,EAAQyT,EAAUvG,SAASkB,GACjB,OAAVpO,QAAmC,IAAVA,IACzBn/B,GAASm/B,EAAMn/B,OAI3B,OAAS4c,QAASo5E,EAAah2F,MAAOA,IAEnCq1F,GACT51E,GC5JEw2E,GAAwC,WAExC,SAASA,EAAuB//E,EAAMC,EAAMC,EAAMC,EAAMoF,GAChDvF,aAAgBD,QAA8B,IAATE,EACrCzf,KAAKw/F,eAAehgF,EAAK9M,EAAG8M,EAAK7M,EAAG6M,EAAKlW,MAAOkW,EAAKjW,OAAQ,MAExDiW,aAAgBD,GAAcE,aAAgBmsC,SAA2B,IAATlsC,EACrE1f,KAAKw/F,eAAehgF,EAAK9M,EAAG8M,EAAK7M,EAAG6M,EAAKlW,MAAOkW,EAAKjW,OAAQkW,GAExDD,aAAgBH,GAAUI,aAAgBH,QAAyB,IAATI,EAC/D1f,KAAKw/F,eAAehgF,EAAK9M,EAAG8M,EAAK7M,EAAG8M,EAAKnW,MAAOmW,EAAKlW,OAAQ,MAExDiW,aAAgBH,GAAUI,aAAgBH,GAASI,aAAgBksC,SAA2B,IAATjsC,EAC1F3f,KAAKw/F,eAAehgF,EAAK9M,EAAG8M,EAAK7M,EAAG8M,EAAKnW,MAAOmW,EAAKlW,OAAQmW,GAExDF,aAAgBF,QAAyB,IAATG,EACrCzf,KAAKw/F,eAAe,EAAG,EAAGhgF,EAAKlW,MAAOkW,EAAKjW,OAAQ,MAE9B,iBAATiW,GAAqC,iBAATC,QAAqC,IAATC,EACpE1f,KAAKw/F,eAAe,EAAG,EAAGhgF,EAAMC,EAAM,MAEjB,iBAATD,GAAqC,iBAATC,GAAqBC,aAAgBksC,SAA2B,IAATjsC,EAC/F3f,KAAKw/F,eAAe,EAAG,EAAGhgF,EAAMC,EAAMC,GAGtC1f,KAAKw/F,eAAehgF,EAAMC,EAAMC,EAAMC,EAAM,MAylBpD,OAjlBAjgB,OAAOuC,eAAes9F,EAAuB5/F,UAAW,QAMpDuC,IAAK,WACD,OAAOlC,KAAKy/F,WAEhBr9F,IAAK,SAAU7B,GAEXP,KAAKy/F,UAAYl/F,EAEjBP,KAAK0/F,kBAGTr9F,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,aAKpDuC,IAAK,WACD,OAAOlC,KAAK2/F,gBAEhBv9F,IAAK,SAAU7B,GAEXP,KAAK4/F,aAAar/F,IAGtB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,cAKpDuC,IAAK,WACD,OAAOlC,KAAK6/F,cAEhBz9F,IAAK,SAAU7B,GAEXP,KAAK6/F,aAAet/F,GAGxB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,cAKpDuC,IAAK,WACD,OAAQlC,KAAK6/F,cAEjBz9F,IAAK,SAAU7B,GACXP,KAAK6/F,cAAgBt/F,GAEzB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,YAKpDuC,IAAK,WACD,OAAOlC,KAAKgzF,iBAEhB5wF,IAAK,SAAU7B,GACPP,KAAKqI,OAAS2tB,eAAapT,OAC3B5iB,KAAKgzF,gBAAkBzyF,IAM/B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,KAKpDuC,IAAK,WAED,YAD6C,IAAzBlC,KAAKgzF,gBAAmChzF,KAAKgzF,gBAAgBtgF,EAAI,GAGzFtQ,IAAK,SAAU7B,GACPP,KAAKqI,OAAS2tB,eAAapT,OAC3B5iB,KAAKgzF,gBAAgBtgF,EAAInS,IAMjC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,KAKpDuC,IAAK,WAED,YAD6C,IAAzBlC,KAAKgzF,gBAAmChzF,KAAKgzF,gBAAgBrgF,EAAI,GAGzFvQ,IAAK,SAAU7B,GACPP,KAAKqI,OAAS2tB,eAAapT,OAC3B5iB,KAAKgzF,gBAAgBrgF,EAAIpS,IAMjC8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,QAKpDuC,IAAK,WACD,OAAOlC,KAAK2uD,SAASjtD,MAEzBU,IAAK,SAAU7B,GACPP,KAAKqI,OAAS2tB,eAAapT,MAC3B5iB,KAAK2uD,SAAS1qB,MAAM1jC,IAG5B8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,SAKpDuC,IAAK,WACD,OAAOlC,KAAK2uD,SAASrlD,OAEzBlH,IAAK,SAAU7B,GACX,GAAIP,KAAK2uD,SAASrlD,QAAU/I,GAASP,KAAKqI,OAAS2tB,eAAapT,KAAM,CAClE,IAAIlhB,EAAO1B,KAAK2uD,SAASjtD,KACzBA,EAAK4H,MAAQ/I,EACbP,KAAK2uD,SAAS1qB,MAAMviC,KAG5BW,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,UAKpDuC,IAAK,WACD,OAAOlC,KAAK2uD,SAASplD,QAEzBnH,IAAK,SAAU7B,GACX,GAAIP,KAAK2uD,SAASplD,SAAWhJ,GAASP,KAAKqI,OAAS2tB,eAAapT,KAAM,CACnE,IAAIlhB,EAAO1B,KAAK2uD,SAASjtD,KACzBA,EAAK6H,OAAShJ,EACdP,KAAK2uD,SAAS1qB,MAAMviC,KAG5BW,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,YAKpDuC,IAAK,WACD,OAAOlC,KAAK2uD,SAAS1vB,UAEzB58B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,YAKpDuC,IAAK,WAID,OAAOlC,KAAK6zE,aAEhBxxE,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,QAKpDuC,IAAK,WACD,OAAOlC,KAAK8/F,cAEhB19F,IAAK,SAAU7B,GACXP,KAAK+/F,cAAcx/F,GACnBP,KAAK8/F,aAAev/F,GAExB8B,YAAY,EACZC,cAAc,IAElB5C,OAAOuC,eAAes9F,EAAuB5/F,UAAW,UAKpDuC,IAAK,WACD,OAAO,IAAIqd,EAAW,IAAIF,EAAOrf,KAAK0S,EAAG1S,KAAK2S,GAAI3S,KAAK0B,OAE3DU,IAAK,SAAU7B,GACPP,KAAKqI,OAAS2tB,eAAapT,OAC3B5iB,KAAK+/B,SAAW,IAAI1gB,EAAO9e,EAAMmS,EAAGnS,EAAMoS,GAC1C3S,KAAK0B,KAAO,IAAI4d,EAAM/e,EAAM+I,MAAO/I,EAAMgJ,UAGjDlH,YAAY,EACZC,cAAc,IAMlBi9F,EAAuB5/F,UAAU6/F,eAAiB,SAAUhgF,EAAMC,EAAMC,EAAMC,EAAMoF,GAChF/kB,KAAK0S,EAAI8M,EACTxf,KAAK2S,EAAI8M,EACTzf,KAAK6zE,YAAc,IAAIvqB,GAAY5pC,EAAMC,IAO7C4/E,EAAuB5/F,UAAUogG,cAAgB,SAAU13F,GACvD,GAAIA,IAAS2tB,eAAapT,KAAM,CAC5B,OAAQva,GACJ,KAAK2tB,eAAa1T,IACdtiB,KAAKggG,KAAOlqE,eAAaxT,IACzB,MACJ,KAAK0T,eAAa27B,OACd3xD,KAAKggG,KAAOlqE,eAAa67B,OACzB,MACJ,KAAK37B,eAAa0/B,KACd11D,KAAKggG,KAAOlqE,eAAa4/B,KACzB,MACJ,KAAK1/B,eAAaw7B,MACdxxD,KAAKggG,KAAOlqE,eAAa07B,MAGjCxxD,KAAK0/F,mBAObH,EAAuB5/F,UAAU+/F,eAAiB,WAC9C1/F,KAAKsxD,UAAYv7B,oBAAkBnT,MAMvC28E,EAAuB5/F,UAAUigG,aAAe,SAAUtuC,GACtD,GAAItxD,KAAKggG,OAASlqE,eAAalT,KAC3B5iB,KAAK2/F,eAAiBruC,MAErB,CAED,IAAI2uC,GAAW,EACf,OAAQjgG,KAAKggG,MACT,KAAKlqE,eAAa4/B,KACduqC,EAAY3uC,IAAcv7B,oBAAkBmqE,SAAW5uC,IAAcv7B,oBAAkBoqE,YACnF7uC,IAAcv7B,oBAAkBqqE,YAAc9uC,IAAcv7B,oBAAkBnT,KAClF,MACJ,KAAKkT,eAAaxT,IACd29E,EAAY3uC,IAAcv7B,oBAAkBmqE,SAAW5uC,IAAcv7B,oBAAkBsqE,WACnF/uC,IAAcv7B,oBAAkBuqE,UAAYhvC,IAAcv7B,oBAAkBnT,KAChF,MACJ,KAAKkT,eAAa07B,MACdyuC,EAAY3uC,IAAcv7B,oBAAkBuqE,UAAYhvC,IAAcv7B,oBAAkBwqE,aACpFjvC,IAAcv7B,oBAAkByqE,aAAelvC,IAAcv7B,oBAAkBnT,KACnF,MACJ,KAAKkT,eAAa67B,OACdsuC,EAAY3uC,IAAcv7B,oBAAkBqqE,YAAc9uC,IAAcv7B,oBAAkB0qE,cACnFnvC,IAAcv7B,oBAAkByqE,aAAelvC,IAAcv7B,oBAAkBnT,KACtF,MACJ,KAAKkT,eAAa62B,KACdszC,EAAY3uC,IAAcv7B,oBAAkB2qE,cAAgBpvC,IAAcv7B,oBAAkBnT,KAGhGq9E,IACAjgG,KAAK2/F,eAAiBruC,KAQlCiuC,EAAuB5/F,UAAUygC,KAAO,SAAU4vB,EAAOz0C,GACrD,IAAIolB,EAAOqvB,EAAMrvB,KACbpsB,EAASvU,KAAKsxE,gBAAgB3wC,EAAMplB,IACtB,IAAdhH,EAAO7B,IACP6B,EAAO7B,EAAI,GAEfs9C,EAAM/wB,SAASyvB,gBAAgB1uD,KAAK2uD,SAAU,IAAItvC,EAAO9K,EAAO7B,EAAG6B,EAAO5B,GAAI,IAAI2M,EAAM/K,EAAOjL,MAAOiL,EAAOhL,UAMjHg2F,EAAuB5/F,UAAU2xE,gBAAkB,SAAU3wC,EAAMplB,GAC/D,IAAItY,EAASjD,KAAKuU,OAOlB,OANIvU,KAAK2/F,iBAAmB5pE,oBAAkBnT,KAC1C3f,EAASjD,KAAK2gG,mBAAmBhgE,EAAMplB,GAElCvb,KAAKy/F,YAAc3pE,eAAalT,OACrC3f,EAASjD,KAAK4gG,cAAcjgE,EAAMplB,IAE/BtY,GAMXs8F,EAAuB5/F,UAAUghG,mBAAqB,SAAUhgE,EAAMplB,GACrDvb,KAAKuU,OAOlB,OANIvU,KAAKqI,OAAS2tB,eAAapT,KAClB5iB,KAAK6gG,yBAAyBlgE,EAAMplB,GAGpCvb,KAAK8gG,2BAA2BngE,EAAMplB,IAQvDgkF,EAAuB5/F,UAAUkhG,yBAA2B,SAAUlgE,EAAMplB,GACxE,IAAIhH,EAASvU,KAAKuU,OAEdwsF,EADapgE,EAAK2xB,QACQyJ,gBAAgBxgD,EAAUolB,GAAM,GAC1DjuB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACb,OAAQ3S,KAAK2/F,gBACT,KAAK5pE,oBAAkBmqE,QACnBxtF,EAAI,EACJC,EAAI,EACJ,MACJ,KAAKojB,oBAAkBsqE,UACnB3tF,GAAKquF,EAAaz3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,EAAI,EACJ,MACJ,KAAKojB,oBAAkBuqE,SACnB5tF,EAAIquF,EAAaz3F,MAAQtJ,KAAKsJ,MAC9BqJ,EAAI,EACJ,MACJ,KAAKojB,oBAAkBoqE,WACnBztF,EAAI,EACJC,GAAKouF,EAAax3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKwsB,oBAAkB2qE,aACnBhuF,GAAKquF,EAAaz3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,GAAKouF,EAAax3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKwsB,oBAAkBwqE,YACnB7tF,EAAIquF,EAAaz3F,MAAQtJ,KAAKsJ,MAC9BqJ,GAAKouF,EAAax3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKwsB,oBAAkBqqE,WACnB1tF,EAAI,EACJC,EAAIouF,EAAax3F,OAASvJ,KAAKuJ,OAC/B,MACJ,KAAKwsB,oBAAkB0qE,aACnB/tF,GAAKquF,EAAaz3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,EAAIouF,EAAax3F,OAASvJ,KAAKuJ,OAC/B,MACJ,KAAKwsB,oBAAkByqE,YACnB9tF,EAAIquF,EAAaz3F,MAAQtJ,KAAKsJ,MAC9BqJ,EAAIouF,EAAax3F,OAASvJ,KAAKuJ,OAKvC,OAFAgL,EAAO7B,EAAIA,EACX6B,EAAO5B,EAAIA,EACJ4B,GAMXgrF,EAAuB5/F,UAAUmhG,2BAA6B,SAAUngE,EAAMplB,GAC1E,IAAItY,EAASjD,KAAKuU,OACd+9C,EAAU3xB,EAAK2xB,QACfyuC,EAAezuC,EAAQyJ,gBAAgBxgD,EAAUolB,GAAM,GACvDjuB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACb,OAAQ3S,KAAK2/F,gBACT,KAAK5pE,oBAAkBmqE,QACflgG,KAAKqI,OAAS2tB,eAAa0/B,MAC3BhjD,GAAKquF,EAAaruF,EAClBC,EAAI,GAEC3S,KAAKqI,OAAS2tB,eAAa1T,MAChC5P,GAAKquF,EAAaruF,EAClBC,GAAKouF,EAAapuF,GAEtB,MACJ,KAAKojB,oBAAkBsqE,UACnB3tF,GAAKquF,EAAaz3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,GAAKouF,EAAapuF,EAClB,MACJ,KAAKojB,oBAAkBuqE,SACftgG,KAAKqI,OAAS2tB,eAAaw7B,OAC3B9+C,EAAIquF,EAAaz3F,MAAQgpD,EAAQgR,oBAAoB/nD,EAAUolB,GAAM,GAAS3gC,KAAKsJ,MACnFqJ,EAAI,GAEC3S,KAAKqI,OAAS2tB,eAAa1T,MAChC5P,EAAIquF,EAAaz3F,MAAQgpD,EAAQgR,oBAAoB/nD,EAAUolB,GAAM,GAAS3gC,KAAKsJ,MACnFqJ,GAAKouF,EAAapuF,GAEtB,MACJ,KAAKojB,oBAAkBoqE,WACnBztF,GAAKquF,EAAaruF,EAClBC,GAAKouF,EAAax3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKwsB,oBAAkB2qE,aACnBhuF,GAAKquF,EAAaz3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,GAAKouF,EAAax3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKwsB,oBAAkBwqE,YACnB7tF,EAAIquF,EAAaz3F,MAAQgpD,EAAQgR,oBAAoB/nD,EAAUolB,GAAM,GAAS3gC,KAAKsJ,MACnFqJ,GAAKouF,EAAax3F,OAASvJ,KAAKuJ,QAAU,EAC1C,MACJ,KAAKwsB,oBAAkBqqE,WACfpgG,KAAKqI,OAAS2tB,eAAa0/B,MAC3BhjD,GAAKquF,EAAaruF,EAClBC,EAAIouF,EAAax3F,OAASvJ,KAAKuJ,QAE1BvJ,KAAKqI,OAAS2tB,eAAa27B,SAChCj/C,GAAKquF,EAAaruF,EAClBC,EAAIouF,EAAax3F,OAAS+oD,EAAQiR,sBAAsBhoD,EAAUolB,GAAM,GAAS3gC,KAAKuJ,QAE1F,MACJ,KAAKwsB,oBAAkB0qE,aACnB/tF,GAAKquF,EAAaz3F,MAAQtJ,KAAKsJ,OAAS,EACxCqJ,EAAIouF,EAAax3F,OAAS+oD,EAAQiR,sBAAsBhoD,EAAUolB,GAAM,GAAS3gC,KAAKuJ,OACtF,MACJ,KAAKwsB,oBAAkByqE,YACfxgG,KAAKqI,OAAS2tB,eAAaw7B,OAC3B9+C,EAAIquF,EAAaz3F,MAAQgpD,EAAQgR,oBAAoB/nD,EAAUolB,GAAM,GAAS3gC,KAAKsJ,MACnFqJ,EAAIouF,EAAax3F,OAASvJ,KAAKuJ,QAE1BvJ,KAAKqI,OAAS2tB,eAAa27B,SAChCj/C,EAAIquF,EAAaz3F,MAAQgpD,EAAQgR,oBAAoB/nD,EAAUolB,GAAM,GAAS3gC,KAAKsJ,MACnFqJ,EAAIouF,EAAax3F,OAAS+oD,EAAQiR,sBAAsBhoD,EAAUolB,GAAM,GAAS3gC,KAAKuJ,QAMlG,OAFAtG,EAAOyP,EAAIA,EACXzP,EAAO0P,EAAIA,EACJ1P,GAMXs8F,EAAuB5/F,UAAUihG,cAAgB,SAAUjgE,EAAMplB,GAChDvb,KAAKuU,OAOlB,OANIvU,KAAKqI,OAAS2tB,eAAapT,KAClB5iB,KAAKghG,oBAAoBrgE,EAAMplB,GAG/Bvb,KAAKihG,sBAAsBtgE,EAAMplB,IAQlDgkF,EAAuB5/F,UAAUqhG,oBAAsB,SAAUrgE,EAAMplB,GACtDvb,KAAKuU,OAAlB,IAEIwsF,EADUpgE,EAAK2xB,QACQyJ,gBAAgBxgD,EAAUolB,GAAM,GACvDjuB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACTrJ,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OAClB,OAAQvJ,KAAKy/F,WACT,KAAK3pE,eAAa4/B,KACdhjD,EAAI,EACJC,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASw3F,EAAax3F,OACtB,MACJ,KAAKusB,eAAaxT,IACd5P,EAAI,EACJC,EAAI,EACJrJ,EAAQy3F,EAAaz3F,MACrBC,EAASvJ,KAAKuJ,OACd,MACJ,KAAKusB,eAAa07B,MACd9+C,EAAIquF,EAAaz3F,MAAQtJ,KAAKsJ,MAC9BqJ,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASw3F,EAAax3F,OACtB,MACJ,KAAKusB,eAAa67B,OACdj/C,EAAI,EACJC,EAAIouF,EAAax3F,OAASvJ,KAAKuJ,OAC/BD,EAAQy3F,EAAaz3F,MACrBC,EAASvJ,KAAKuJ,OACd,MACJ,KAAKusB,eAAa62B,KACdj6C,EAAI,EACJA,EAAI,EACJpJ,EAAQy3F,EAAaz3F,MACrBC,EAASw3F,EAAax3F,OAI9B,OADS,IAAIgW,EAAW7M,EAAGC,EAAGrJ,EAAOC,IAOzCg2F,EAAuB5/F,UAAUshG,sBAAwB,SAAUtgE,EAAMplB,GACxDvb,KAAKuU,OAAlB,IACI+9C,EAAU3xB,EAAK2xB,QACfyuC,EAAezuC,EAAQyJ,gBAAgBxgD,EAAUolB,GAAM,GACvDzY,EAAaoqC,EAAQ0J,aAAatkC,gBAClChlB,EAAI1S,KAAK0S,EACTC,EAAI3S,KAAK2S,EACTrJ,EAAQtJ,KAAKsJ,MACbC,EAASvJ,KAAKuJ,OAClB,OAAQvJ,KAAKy/F,WACT,KAAK3pE,eAAa4/B,KACdhjD,GAAKquF,EAAaruF,EAClBC,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASw3F,EAAax3F,OACtB,MACJ,KAAKusB,eAAaxT,IACd5P,GAAKquF,EAAaruF,EAClBC,GAAKouF,EAAapuF,EAClBrJ,EAAQ4e,EAAW5e,MACnBC,EAASvJ,KAAKuJ,OACVw3F,EAAax3F,OAAS,IACtBoJ,GAAKouF,EAAapuF,EAAIuV,EAAW3e,QAErC,MACJ,KAAKusB,eAAa07B,MACd9+C,EAAIquF,EAAaz3F,MAAQgpD,EAAQgR,oBAAoB/nD,EAAUolB,GAAM,GAAS3gC,KAAKsJ,MACnFqJ,EAAI,EACJrJ,EAAQtJ,KAAKsJ,MACbC,EAASw3F,EAAax3F,OACtB,MACJ,KAAKusB,eAAa67B,OACdj/C,GAAKquF,EAAaruF,EAClBC,EAAIouF,EAAax3F,OAAS+oD,EAAQiR,sBAAsBhoD,EAAUolB,GAAM,GAAS3gC,KAAKuJ,OACtFD,EAAQ4e,EAAW5e,MACnBC,EAASvJ,KAAKuJ,OACVw3F,EAAax3F,OAAS,IACtBoJ,GAAKuV,EAAW3e,QAEpB,MACJ,KAAKusB,eAAa62B,KACdj6C,EAAI,EACJA,EAAI,EACJpJ,EAAQy3F,EAAaz3F,MACrBC,EAASw3F,EAAax3F,OAI9B,OADS,IAAIgW,EAAW7M,EAAGC,EAAGrJ,EAAOC,IAGlCg2F"}