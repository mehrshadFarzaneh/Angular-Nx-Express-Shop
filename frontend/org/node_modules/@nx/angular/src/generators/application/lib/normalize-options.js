"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeOptions = void 0;
const devkit_1 = require("@nx/devkit");
const get_npm_scope_1 = require("@nx/js/src/utils/package-json/get-npm-scope");
const test_runners_1 = require("../../../utils/test-runners");
const linter_1 = require("@nx/linter");
const project_1 = require("../../utils/project");
function normalizeOptions(host, options) {
    var _a;
    const { layoutDirectory, projectDirectory } = (0, devkit_1.extractLayoutDirectory)(options.directory);
    const appDirectory = (0, project_1.normalizeDirectory)(options.name, projectDirectory);
    const appProjectName = (0, project_1.normalizeProjectName)(options.name, projectDirectory);
    const e2eProjectName = options.rootProject
        ? 'e2e'
        : `${(0, devkit_1.names)(options.name).fileName}-e2e`;
    const { appsDir: defaultAppsDir, standaloneAsDefault } = (0, devkit_1.getWorkspaceLayout)(host);
    const appsDir = layoutDirectory !== null && layoutDirectory !== void 0 ? layoutDirectory : defaultAppsDir;
    const appProjectRoot = options.rootProject
        ? '.'
        : (0, devkit_1.joinPathFragments)(appsDir, appDirectory);
    const e2eProjectRoot = options.rootProject
        ? 'e2e'
        : (0, devkit_1.joinPathFragments)(appsDir, `${appDirectory}-e2e`);
    const parsedTags = options.tags
        ? options.tags.split(',').map((s) => s.trim())
        : [];
    const prefix = (0, project_1.normalizeNewProjectPrefix)(options.prefix, (0, get_npm_scope_1.getNpmScope)(host), 'app');
    options.standaloneConfig = (_a = options.standaloneConfig) !== null && _a !== void 0 ? _a : standaloneAsDefault;
    const ngCliSchematicAppRoot = appProjectName;
    const ngCliSchematicE2ERoot = `${appProjectName}/e2e`;
    // Set defaults and then overwrite with user options
    return Object.assign(Object.assign({ style: 'css', routing: false, inlineStyle: false, inlineTemplate: false, skipTests: options.unitTestRunner === test_runners_1.UnitTestRunner.None, skipFormat: false, unitTestRunner: test_runners_1.UnitTestRunner.Jest, e2eTestRunner: test_runners_1.E2eTestRunner.Cypress, linter: linter_1.Linter.EsLint, strict: true }, options), { prefix, name: appProjectName, appProjectRoot,
        e2eProjectRoot,
        e2eProjectName,
        parsedTags,
        ngCliSchematicAppRoot,
        ngCliSchematicE2ERoot });
}
exports.normalizeOptions = normalizeOptions;
