import type { Tree } from '@nx/devkit';
import type { GeneratorOptions } from '../../schema';
import type { Logger, MigrationProjectConfiguration, ValidationResult } from '../../utilities';
import { ProjectMigrator } from './project.migrator';
type SupportedTargets = 'e2e';
export declare class E2eMigrator extends ProjectMigrator<SupportedTargets> {
    private lintTargetName;
    private appConfig;
    private appName;
    private isProjectUsingEsLint;
    private cypressInstalledVersion;
    private cypressPreset;
    constructor(tree: Tree, options: GeneratorOptions, project: MigrationProjectConfiguration, lintTargetName: string | undefined, logger?: Logger);
    migrate(): Promise<void>;
    validate(): ValidationResult;
    private initialize;
    private migrateProtractorE2eProject;
    private migrateCypressE2eProject;
    private updateOrCreateCypressConfigFile;
    private updateCypressProjectConfiguration;
    private updateE2eCypressTarget;
    private updateCypressConfigFilePaths;
    private cypressConfigGlobToNewGlob;
    private cypressConfigSrcPathToNewPath;
    private cypressConfigDistPathToNewPath;
    private updateCypress10ConfigFile;
    private updateCypressComponentConfig;
    private updateCypressE2EConfig;
    private updateCypressConfigNodeValue;
    private isValidPathLikePropertyWithStringLiteralValue;
    private normalizeNodeText;
    private getOldCypressConfigFilePath;
    private getDefaultCypressConfigFilePath;
    private findCypressConfigFilePath;
    private isCypressE2eProject;
    private isProtractorE2eProject;
}
export {};
