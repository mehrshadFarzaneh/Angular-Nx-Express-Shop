"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pipeGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
const utils_1 = require("../utils");
const lib_1 = require("./lib");
function pipeGenerator(tree, rawOptions) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        (0, lib_1.validateOptions)(tree, rawOptions);
        const options = (0, lib_1.normalizeOptions)(tree, rawOptions);
        const pipeNames = (0, devkit_1.names)(options.name);
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, 'files'), options.directory, {
            pipeClassName: pipeNames.className,
            pipeFileName: pipeNames.fileName,
            pipePropertyName: pipeNames.propertyName,
            standalone: options.standalone,
            tpl: '',
        });
        if (options.skipTests) {
            const pathToSpecFile = (0, devkit_1.joinPathFragments)(options.directory, `${pipeNames.fileName}.pipe.spec.ts`);
            tree.delete(pathToSpecFile);
        }
        if (!options.skipImport && !options.standalone) {
            const modulePath = (0, utils_1.findModule)(tree, options.path, options.module);
            (0, utils_1.addToNgModule)(tree, options.path, modulePath, pipeNames.fileName, `${pipeNames.className}Pipe`, `${pipeNames.fileName}.pipe`, 'declarations', options.flat, options.export);
        }
        if (!options.skipFormat) {
            yield (0, devkit_1.formatFiles)(tree);
        }
    });
}
exports.pipeGenerator = pipeGenerator;
exports.default = pipeGenerator;
