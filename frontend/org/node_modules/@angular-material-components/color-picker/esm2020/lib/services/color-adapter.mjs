import { Injectable } from '@angular/core';
import { stringInputToObject } from '../helpers';
import { Color } from '../models';
import * as i0 from "@angular/core";
export class ColorAdapter {
    constructor() { }
    sameColor(a, b) {
        if (a == null && b == null)
            return true;
        if (a != null && b != null)
            return a.rgba === b.rgba;
        return false;
    }
    format(c, format) {
        return c.toString(format);
    }
    parse(value) {
        const obj = stringInputToObject(value);
        if (obj) {
            return new Color(obj.r, obj.g, obj.b, obj.a);
        }
        return null;
    }
}
/** @nocollapse */ ColorAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: ColorAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ ColorAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: ColorAdapter });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: ColorAdapter, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3ItYWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvbG9yLXBpY2tlci9zcmMvbGliL3NlcnZpY2VzL2NvbG9yLWFkYXB0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDakQsT0FBTyxFQUFFLEtBQUssRUFBb0IsTUFBTSxXQUFXLENBQUM7O0FBR3BELE1BQU0sT0FBTyxZQUFZO0lBRXZCLGdCQUFnQixDQUFDO0lBRWpCLFNBQVMsQ0FBQyxDQUFRLEVBQUUsQ0FBUTtRQUMxQixJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUk7WUFBRSxPQUFPLElBQUksQ0FBQztRQUN4QyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUk7WUFBRSxPQUFPLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNyRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRCxNQUFNLENBQUMsQ0FBUSxFQUFFLE1BQXdCO1FBQ3ZDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQWE7UUFDakIsTUFBTSxHQUFHLEdBQUcsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkMsSUFBSSxHQUFHLEVBQUU7WUFDUCxPQUFPLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM5QztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7NEhBcEJVLFlBQVk7Z0lBQVosWUFBWTsyRkFBWixZQUFZO2tCQUR4QixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBzdHJpbmdJbnB1dFRvT2JqZWN0IH0gZnJvbSAnLi4vaGVscGVycyc7XHJcbmltcG9ydCB7IENvbG9yLCBDb2xvcklucHV0Rm9ybWF0IH0gZnJvbSAnLi4vbW9kZWxzJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIENvbG9yQWRhcHRlciB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIHNhbWVDb2xvcihhOiBDb2xvciwgYjogQ29sb3IpIHtcclxuICAgIGlmIChhID09IG51bGwgJiYgYiA9PSBudWxsKSByZXR1cm4gdHJ1ZTtcclxuICAgIGlmIChhICE9IG51bGwgJiYgYiAhPSBudWxsKSByZXR1cm4gYS5yZ2JhID09PSBiLnJnYmE7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBmb3JtYXQoYzogQ29sb3IsIGZvcm1hdDogQ29sb3JJbnB1dEZvcm1hdCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYy50b1N0cmluZyhmb3JtYXQpO1xyXG4gIH1cclxuXHJcbiAgcGFyc2UodmFsdWU6IHN0cmluZyk6IENvbG9yIHwgbnVsbCB7XHJcbiAgICBjb25zdCBvYmogPSBzdHJpbmdJbnB1dFRvT2JqZWN0KHZhbHVlKTtcclxuICAgIGlmIChvYmopIHtcclxuICAgICAgcmV0dXJuIG5ldyBDb2xvcihvYmouciwgb2JqLmcsIG9iai5iLCBvYmouYSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==